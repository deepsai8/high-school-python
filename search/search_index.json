{"config":{"lang":["en","hi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to High School Python","text":"<p>Here you'll learn all about Python in crisp and byte-sized lessons in a practical manner https://deepsai8.github.io/high-school-python/.</p>"},{"location":"#links","title":"Links","text":""},{"location":"#we-will-try-to-make-things-as-intuitive-as-possible","title":"We will try to make things as intuitive as possible!","text":""},{"location":"chapters/chapter01/","title":"Chapter 1: Introduction to Python","text":""},{"location":"chapters/chapter01/#what-is-python","title":"What is Python?","text":""},{"location":"chapters/chapter01/#history-and-origin","title":"History and Origin","text":"<p>Python is a popular programming language created by Guido van Rossum and released in 1991. But here\u2019s the cool part\u2014Python was named after Monty Python\u2019s Flying Circus, a comedy show that Guido loved. So, Python isn't just serious business\u2014it\u2019s fun from the very start!</p>"},{"location":"chapters/chapter01/#why-python","title":"Why Python?","text":"<p>Python is known for being easy to read and write, almost like writing in English! This is why it\u2019s widely used in schools, universities, and even by companies like Google and NASA. You can use Python to make games, analyze data, or even control robots!</p>"},{"location":"chapters/chapter01/#setting-up-python","title":"Setting Up Python","text":"<p>Before we dive in, let\u2019s get Python running on your computer. There are a few ways to do this:</p>"},{"location":"chapters/chapter01/#installing-python","title":"Installing Python","text":"<p>You can download and install Python from the official Python website. Once installed, you can write and run Python code on your computer.</p>"},{"location":"chapters/chapter01/#using-google-colab-no-installation-required","title":"Using Google Colab (No Installation Required!)","text":"<p>If you don\u2019t want to install anything, use Google Colab. It\u2019s like a Python playground in your browser! This is a great way to get started quickly.</p>"},{"location":"chapters/chapter01/#python-ides-integrated-development-environments","title":"Python IDEs (Integrated Development Environments)","text":"<ul> <li>VS Code: A lightweight editor with tons of features.</li> <li>PyCharm: A powerful IDE made specifically for Python.</li> <li>Jupyter Notebook: A great tool for writing Python alongside explanations (perfect for data science).</li> </ul>"},{"location":"chapters/chapter01/#your-first-python-program","title":"Your First Python Program","text":"<p>Let\u2019s write your first piece of Python code! We\u2019ll keep it classic with a simple \"Hello, World!\" program.</p>"},{"location":"chapters/chapter01/#code-example-hello-world","title":"Code Example: \"Hello, World!\"","text":"<pre><code># This is a comment! Python will ignore it\nprint(\"Hello, World!\")\n</code></pre>"},{"location":"chapters/chapter01/#explanation","title":"Explanation:","text":"<ul> <li><code>print()</code> is a function that tells Python to display something on the screen. In this case, it will display \u201cHello, World!\u201d.</li> </ul>"},{"location":"chapters/chapter01/#fun-example-greet-the-user","title":"Fun Example: Greet the User","text":"<p>Let\u2019s make this more personal! Write a program that asks the user for their name and greets them. Try this:</p> <pre><code>name = input(\"What is your name? \")  # Takes input from the user\nprint(\"Hello, \" + name + \"! Welcome to Python!\")  # Greets the user\n</code></pre>"},{"location":"chapters/chapter01/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li><code>input()</code> lets the user type something.</li> <li><code>+</code> combines (concatenates) strings together.</li> </ul> <p>Now, when you run this, it will ask for your name and greet you personally. Cool, right?</p>"},{"location":"chapters/chapter01/#mini-project-build-a-simple-calculator","title":"Mini Project: Build a Simple Calculator","text":"<p>Let\u2019s take what you\u2019ve learned and make a mini project\u2014a calculator! It will ask for two numbers and an operation (like +, -, *, /), then give the result.</p>"},{"location":"chapters/chapter01/#code-example-simple-calculator","title":"Code Example: Simple Calculator","text":"<pre><code># Ask the user for two numbers\nnum1 = float(input(\"Enter first number: \"))\nnum2 = float(input(\"Enter second number: \"))\n\n# Ask for an operation\noperation = input(\"Choose operation (+, -, *, /): \")\n\n# Perform the operation\nif operation == '+':\n    result = num1 + num2\nelif operation == '-':\n    result = num1 - num2\nelif operation == '*':\n    result = num1 * num2\nelif operation == '/':\n    result = num1 / num2\nelse:\n    result = \"Invalid operation!\"\n\nprint(\"The result is: \" + str(result))\n</code></pre>"},{"location":"chapters/chapter01/#explanation_1","title":"Explanation:","text":"<ul> <li>We use <code>input()</code> to take numbers and an operation from the user.</li> <li>If statements decide which operation to perform.</li> <li>We print the result!</li> </ul>"},{"location":"chapters/chapter01/#quiz-time","title":"Quiz Time!","text":"<p>Let\u2019s see what you remember from this chapter:</p> <ol> <li> <p>Who created Python?    A. Elon Musk    B. Guido van Rossum    C. Steve Jobs  </p> </li> <li> <p>What does <code>print()</code> do?    A. Print paper    B. Display something on the screen    C. Create a file  </p> </li> <li> <p>What does the <code>input()</code> function do?    A. Takes input from the user    B. Outputs a result    C. Starts the program  </p> </li> </ol>"},{"location":"chapters/chapter01/#answers","title":"Answers:","text":"<ol> <li>B</li> <li>B</li> <li>A</li> </ol>"},{"location":"chapters/chapter01/#further-reading","title":"Further Reading","text":"<p>If you\u2019re curious to learn more, check out: - Python Beginner's Guide</p> <p>Next, we'll move to Chapter 2: Data Structures, where we'll dive into variables and cool ways to store data. How does that sound?</p>"},{"location":"chapters/chapter02/","title":"Chapter 2: Data Structures","text":"<p>In this chapter, we\u2019ll explore how to store and organize information in Python using data structures. Think of them like different boxes where you can store and arrange things you want to keep.</p>"},{"location":"chapters/chapter02/#what-are-data-structures","title":"What Are Data Structures?","text":"<p>In Python, we use data structures to organize and manage data. There are four basic types we'll look at: 1. Variables (like boxes that hold values) 2. Lists (like a to-do list) 3. Tuples (like a to-do list that never changes) 4. Dictionaries (like a list of names and their phone numbers) 5. Sets (a list, but without duplicates)</p>"},{"location":"chapters/chapter02/#variables-and-data-types","title":"Variables and Data Types","text":"<p>A variable is like a container where we can store a piece of information. That information can be a number, string (text), or boolean (True/False).</p>"},{"location":"chapters/chapter02/#code-example-variables-in-action","title":"Code Example: Variables in Action","text":"<pre><code>name = \"Alice\"  # String (text)\nage = 16        # Integer (whole number)\nis_student = True  # Boolean (True/False)\n</code></pre>"},{"location":"chapters/chapter02/#explanation","title":"Explanation:","text":"<ul> <li><code>name</code> stores a piece of text (called a string).</li> <li><code>age</code> stores a whole number (an integer).</li> <li><code>is_student</code> stores a true/false value (a boolean).</li> </ul>"},{"location":"chapters/chapter02/#lists-organizing-a-collection-of-items","title":"Lists: Organizing a Collection of Items","text":"<p>A list is like a shopping list: you can store multiple things in it, and they don\u2019t have to be the same type of thing. You can add to the list, remove things, or even change items in it.</p>"},{"location":"chapters/chapter02/#code-example-a-list-of-your-favorite-foods","title":"Code Example: A List of Your Favorite Foods","text":"<pre><code>favorite_foods = [\"pizza\", \"burger\", \"ice cream\"]\nprint(favorite_foods[0])  # Prints the first item: pizza\n\n# Adding an item to the list\nfavorite_foods.append(\"pasta\")\nprint(favorite_foods)\n</code></pre>"},{"location":"chapters/chapter02/#explanation_1","title":"Explanation:","text":"<ul> <li><code>favorite_foods[0]</code> refers to the first item in the list (Python starts counting from 0).</li> <li><code>.append()</code> adds a new item to the list.</li> </ul>"},{"location":"chapters/chapter02/#tuples-lists-that-cant-be-changed","title":"Tuples: Lists that Can\u2019t Be Changed","text":"<p>A tuple is like a list, but once you create it, you can\u2019t change it. It\u2019s great for things that should stay the same, like the coordinates of a point.</p>"},{"location":"chapters/chapter02/#code-example-a-tuple-of-coordinates","title":"Code Example: A Tuple of Coordinates","text":"<pre><code>point = (3, 4)  # A tuple representing a point on a graph\nprint(point[0])  # Prints 3\n</code></pre>"},{"location":"chapters/chapter02/#fun-fact","title":"Fun Fact:","text":"<ul> <li>You can\u2019t change tuples once they\u2019re created, so they\u2019re perfect for things that don\u2019t need to be modified.</li> </ul>"},{"location":"chapters/chapter02/#dictionaries-storing-data-in-key-value-pairs","title":"Dictionaries: Storing Data in Key-Value Pairs","text":"<p>A dictionary stores data in pairs, like a real-life dictionary that has words (keys) and their meanings (values). This is perfect for storing related information, like names and phone numbers.</p>"},{"location":"chapters/chapter02/#code-example-a-phone-book","title":"Code Example: A Phone Book","text":"<pre><code>phone_book = {\n    \"Alice\": \"555-1234\",\n    \"Bob\": \"555-5678\",\n    \"Charlie\": \"555-8765\"\n}\nprint(phone_book[\"Alice\"])  # Prints Alice's phone number\n</code></pre>"},{"location":"chapters/chapter02/#explanation_2","title":"Explanation:","text":"<ul> <li><code>\"Alice\"</code> is the key, and <code>\"555-1234\"</code> is the value.</li> <li>You can use the key to get the value, like looking up a word in a dictionary.</li> </ul>"},{"location":"chapters/chapter02/#sets-collections-with-no-duplicates","title":"Sets: Collections with No Duplicates","text":"<p>A set is like a list, but it automatically removes duplicates. If you add the same item twice, it\u2019ll only keep one.</p>"},{"location":"chapters/chapter02/#code-example-a-set-of-unique-colors","title":"Code Example: A Set of Unique Colors","text":"<pre><code>colors = {\"red\", \"blue\", \"green\", \"red\"}  # \"red\" appears twice\nprint(colors)  # Output will be: {'red', 'blue', 'green'}\n</code></pre>"},{"location":"chapters/chapter02/#explanation_3","title":"Explanation:","text":"<ul> <li>Sets are great when you want to make sure there are no duplicates.</li> </ul>"},{"location":"chapters/chapter02/#fun-example-storing-your-friends-favorite-snacks","title":"Fun Example: Storing Your Friends\u2019 Favorite Snacks","text":"<p>Let\u2019s combine these data structures to store the names of your friends and their favorite snacks using a dictionary and a list.</p>"},{"location":"chapters/chapter02/#code-example-friends-and-snacks","title":"Code Example: Friends and Snacks","text":"<pre><code>friends_snacks = {\n    \"Alice\": [\"chips\", \"soda\"],\n    \"Bob\": [\"pizza\", \"ice cream\"],\n    \"Charlie\": [\"cookies\", \"juice\"]\n}\n\nprint(friends_snacks[\"Alice\"])  # Prints Alice's favorite snacks\n</code></pre>"},{"location":"chapters/chapter02/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>We\u2019re using a dictionary to store friends\u2019 names as keys and their favorite snacks as lists (values).</li> </ul>"},{"location":"chapters/chapter02/#mini-project-build-a-contact-book","title":"Mini Project: Build a Contact Book","text":"<p>Let\u2019s take what we\u2019ve learned and build a contact book that stores names and phone numbers. You\u2019ll be able to add, remove, and search for contacts!</p>"},{"location":"chapters/chapter02/#code-example-contact-book","title":"Code Example: Contact Book","text":"<pre><code>contacts = {}\n\n# Adding contacts\ncontacts[\"Alice\"] = \"555-1234\"\ncontacts[\"Bob\"] = \"555-5678\"\n\n# Searching for a contact\nname = input(\"Enter a name to search: \")\nif name in contacts:\n    print(name + \"'s phone number is \" + contacts[name])\nelse:\n    print(\"Contact not found.\")\n</code></pre>"},{"location":"chapters/chapter02/#explanation_4","title":"Explanation:","text":"<ul> <li>We\u2019re using a dictionary to store names and phone numbers.</li> <li>The program lets you search for a contact by name.</li> </ul>"},{"location":"chapters/chapter02/#quiz-time","title":"Quiz Time!","text":"<p>Test your knowledge with this quick quiz:</p> <ol> <li> <p>What data structure allows duplicates?     A. List     B. Tuple     C. Set  </p> </li> <li> <p>Which of these is a key-value pair data structure?     A. List     B. Dictionary     C. Set  </p> </li> <li> <p>What does a tuple allow?     A. Changing its values     B. Repeating values     C. Keeping data unchanged  </p> </li> </ol>"},{"location":"chapters/chapter02/#answers","title":"Answers:","text":"<ol> <li>A</li> <li>B</li> <li>C</li> </ol>"},{"location":"chapters/chapter02/#further-reading","title":"Further Reading","text":"<p>If you want to learn more about Python\u2019s data structures, check out: - Python Lists and Tuples</p> <p>In the next chapter, we\u2019ll learn about conditions and how to make decisions in Python programs. Stay tuned for some fun examples and another mini project!</p> <p>How does this look? Ready to move on to Chapter 3?</p>"},{"location":"chapters/chapter03/","title":"Chapter 3: Conditions and Control Flow","text":"<p>In this chapter, we\u2019ll learn how to make decisions in our programs using conditions and control flow. Think of it like choosing your own adventure story\u2014your program will behave differently depending on the choices you make!</p>"},{"location":"chapters/chapter03/#making-decisions-with-conditions","title":"Making Decisions with Conditions","text":"<p>Sometimes, your program needs to make a choice. That\u2019s where conditions come in. Python uses the following keywords to make decisions: - if: If something is true, do this. - else: If it\u2019s not true, do something else. - elif: If the first condition isn\u2019t true, check another condition.</p>"},{"location":"chapters/chapter03/#code-example-deciding-what-to-wear-based-on-the-weather","title":"Code Example: Deciding What to Wear Based on the Weather","text":"<pre><code>weather = input(\"What\u2019s the weather like? (sunny/rainy/cold): \")\n\nif weather == \"sunny\":\n    print(\"Wear sunglasses and a hat!\")\nelif weather == \"rainy\":\n    print(\"Take an umbrella!\")\nelse:\n    print(\"Wear a warm jacket!\")\n</code></pre>"},{"location":"chapters/chapter03/#explanation","title":"Explanation:","text":"<ul> <li>if weather == \"sunny\": If the weather is sunny, the program will tell you to wear sunglasses and a hat.</li> <li>elif checks another condition.</li> <li>else catches everything else if none of the conditions are true.</li> </ul>"},{"location":"chapters/chapter03/#loops-doing-things-over-and-over","title":"Loops: Doing Things Over and Over","text":"<p>Loops are used when you want your program to repeat something multiple times. There are two types of loops in Python: 1. For Loop: Runs a block of code a specific number of times. 2. While Loop: Repeats as long as a condition is true.</p>"},{"location":"chapters/chapter03/#for-loops","title":"For Loops","text":"<p>A for loop allows you to iterate over a collection of items (like a list) or repeat something a set number of times.</p>"},{"location":"chapters/chapter03/#code-example-counting-down-for-a-rocket-launch","title":"Code Example: Counting Down for a Rocket Launch","text":"<pre><code>for countdown in range(10, 0, -1):\n    print(countdown)\nprint(\"Blast off!\")\n</code></pre>"},{"location":"chapters/chapter03/#explanation_1","title":"Explanation:","text":"<ul> <li>range(10, 0, -1) means we start counting from 10 and stop at 1, going down by 1 each time.</li> <li>After the countdown finishes, we print \"Blast off!\".</li> </ul>"},{"location":"chapters/chapter03/#while-loops","title":"While Loops","text":"<p>A while loop keeps repeating as long as a certain condition is true. Be careful with while loops\u2014you need to make sure the condition eventually becomes false, or the loop will go on forever!</p>"},{"location":"chapters/chapter03/#code-example-asking-for-the-correct-password","title":"Code Example: Asking for the Correct Password","text":"<pre><code>password = \"\"\nwhile password != \"letmein\":\n    password = input(\"Enter the password: \")\n\nprint(\"Access granted!\")\n</code></pre>"},{"location":"chapters/chapter03/#explanation_2","title":"Explanation:","text":"<ul> <li>The loop keeps asking for the password until you type \"letmein\". Once you do, it breaks out of the loop and prints \"Access granted!\".</li> </ul>"},{"location":"chapters/chapter03/#fun-example-a-number-guessing-game","title":"Fun Example: A Number Guessing Game","text":"<p>Let\u2019s create a simple guessing game where the computer picks a random number, and the player has to guess it.</p>"},{"location":"chapters/chapter03/#code-example-number-guessing-game","title":"Code Example: Number Guessing Game","text":"<pre><code>import random\n\nsecret_number = random.randint(1, 10)  # Picks a random number between 1 and 10\nguess = 0\n\nwhile guess != secret_number:\n    guess = int(input(\"Guess the number (between 1 and 10): \"))\n\n    if guess &lt; secret_number:\n        print(\"Too low!\")\n    elif guess &gt; secret_number:\n        print(\"Too high!\")\n    else:\n        print(\"You guessed it!\")\n</code></pre>"},{"location":"chapters/chapter03/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>The computer picks a random number using <code>random.randint()</code>.</li> <li>The player keeps guessing until they get it right, with hints if their guess is too high or too low.</li> </ul>"},{"location":"chapters/chapter03/#mini-project-a-simple-text-adventure-game","title":"Mini Project: A Simple Text Adventure Game","text":"<p>Now, let\u2019s take everything we\u2019ve learned so far and build a simple text-based adventure game. The game will present choices, and depending on the player\u2019s input, different things will happen!</p>"},{"location":"chapters/chapter03/#code-example-text-adventure-game","title":"Code Example: Text Adventure Game","text":"<pre><code>print(\"Welcome to the adventure game!\")\n\nchoice1 = input(\"You are in a dark forest. Do you go left or right? (left/right): \")\n\nif choice1 == \"left\":\n    print(\"You meet a friendly dragon who helps you find treasure!\")\n    choice2 = input(\"Do you take the treasure or leave it? (take/leave): \")\n\n    if choice2 == \"take\":\n        print(\"The treasure is cursed! You turn into a frog!\")\n    else:\n        print(\"You walk away and live happily ever after.\")\n\nelif choice1 == \"right\":\n    print(\"You fall into a river and have to swim to safety!\")\n    choice3 = input(\"Do you swim fast or slow? (fast/slow): \")\n\n    if choice3 == \"fast\":\n        print(\"You safely reach the shore!\")\n    else:\n        print(\"You get swept away by the current!\")\nelse:\n    print(\"You stand still and a squirrel steals your lunch.\")\n</code></pre>"},{"location":"chapters/chapter03/#explanation_3","title":"Explanation:","text":"<ul> <li>This is a simple text adventure game with multiple choices.</li> <li>The player\u2019s input determines the story\u2019s outcome!</li> </ul>"},{"location":"chapters/chapter03/#quiz-time","title":"Quiz Time!","text":"<p>Check your understanding with this short quiz:</p> <ol> <li> <p>What keyword is used for checking additional conditions in Python?     A. elif     B. loop     C. case  </p> </li> <li> <p>What does a <code>while</code> loop do?     A. Run a block of code a certain number of times.     B. Run a block of code while a condition is true.     C. Run a block of code forever.  </p> </li> <li> <p>What function is used to generate a random number in Python?     A. randint     B. random.pick     C. choose  </p> </li> </ol>"},{"location":"chapters/chapter03/#answers","title":"Answers:","text":"<ol> <li>A</li> <li>B</li> <li>A</li> </ol>"},{"location":"chapters/chapter03/#further-reading","title":"Further Reading","text":"<p>To dive deeper into conditions and loops, check out: - Python Conditions and Loops</p> <p>In the next chapter, we\u2019ll explore functions and how you can make your code more reusable and organized. You\u2019ll also get to create a cool to-do list app using functions!</p> <p>Time to move on to Chapter 4!</p>"},{"location":"chapters/chapter04/","title":"Chapter 4: Functions and Functional Programming","text":"<p>In this chapter, we\u2019ll learn how to write functions in Python to make your code more organized and reusable. We\u2019ll also take a peek into functional programming with some cool tools like lambda functions, map, and filter.</p>"},{"location":"chapters/chapter04/#what-are-functions","title":"What Are Functions?","text":"<p>Functions are like recipes for your code. Instead of writing the same thing over and over again, you can create a function and reuse it whenever you need it. Functions make your code easier to read and manage!</p>"},{"location":"chapters/chapter04/#code-example-defining-a-function","title":"Code Example: Defining a Function","text":"<pre><code>def greet(name):\n    print(\"Hello, \" + name + \"!\")\n\ngreet(\"Alice\")\ngreet(\"Bob\")\n</code></pre>"},{"location":"chapters/chapter04/#explanation","title":"Explanation:","text":"<ul> <li><code>def greet(name):</code> defines a function named <code>greet</code> that takes a parameter called <code>name</code>.</li> <li>When we call <code>greet(\"Alice\")</code>, the function prints \"Hello, Alice!\".</li> </ul>"},{"location":"chapters/chapter04/#why-use-functions","title":"Why Use Functions?","text":"<p>Functions help you break down your code into smaller, manageable pieces. Imagine writing a game where every action is inside a function, and you can reuse them whenever you need!</p>"},{"location":"chapters/chapter04/#parameters-and-return-values","title":"Parameters and Return Values","text":"<p>Functions can take parameters (inputs) and return values (outputs). Parameters let you pass in information, and return values let you get something back from the function.</p>"},{"location":"chapters/chapter04/#code-example-calculating-the-area-of-a-circle","title":"Code Example: Calculating the Area of a Circle","text":"<pre><code>def area_of_circle(radius):\n    area = 3.14 * radius ** 2\n    return area\n\nprint(area_of_circle(5))  # Prints the area of a circle with radius 5\n</code></pre>"},{"location":"chapters/chapter04/#explanation_1","title":"Explanation:","text":"<ul> <li><code>area_of_circle(radius)</code> takes one parameter: the radius of the circle.</li> <li>It calculates the area using the formula \u03c0r\u00b2 and returns the result with <code>return</code>.</li> </ul>"},{"location":"chapters/chapter04/#fun-example-temperature-converter","title":"Fun Example: Temperature Converter","text":"<p>Let\u2019s write a function that converts temperatures from Celsius to Fahrenheit.</p>"},{"location":"chapters/chapter04/#code-example-celsius-to-fahrenheit-converter","title":"Code Example: Celsius to Fahrenheit Converter","text":"<pre><code>def celsius_to_fahrenheit(celsius):\n    fahrenheit = (celsius * 9/5) + 32\n    return fahrenheit\n\ntemp_c = 25\nprint(str(temp_c) + \"\u00b0C is \" + str(celsius_to_fahrenheit(temp_c)) + \"\u00b0F\")\n</code></pre>"},{"location":"chapters/chapter04/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>The function <code>celsius_to_fahrenheit</code> converts Celsius to Fahrenheit using the formula and returns the Fahrenheit value.</li> <li>We then print the result.</li> </ul>"},{"location":"chapters/chapter04/#lambda-functions-mini-functions-on-the-go","title":"Lambda Functions: Mini Functions on the Go","text":"<p>A lambda function is like a mini-function that you can define in one line. It\u2019s useful for quick, one-time calculations.</p>"},{"location":"chapters/chapter04/#code-example-a-quick-lambda-function","title":"Code Example: A Quick Lambda Function","text":"<pre><code>multiply = lambda x, y: x * y\nprint(multiply(3, 4))  # Prints 12\n</code></pre>"},{"location":"chapters/chapter04/#explanation_2","title":"Explanation:","text":"<ul> <li><code>lambda x, y: x * y</code> defines a small, anonymous function that multiplies two numbers.</li> <li>It\u2019s similar to writing a full function, but more compact.</li> </ul>"},{"location":"chapters/chapter04/#functional-programming-tools-map-filter-reduce","title":"Functional Programming Tools: Map, Filter, Reduce","text":"<p>Python provides some powerful tools for working with data in a functional programming style.</p>"},{"location":"chapters/chapter04/#map","title":"Map","text":"<p>The <code>map()</code> function applies a function to every item in a list.</p>"},{"location":"chapters/chapter04/#code-example-using-map-to-square-numbers","title":"Code Example: Using <code>map()</code> to Square Numbers","text":"<pre><code>numbers = [1, 2, 3, 4]\nsquared = list(map(lambda x: x ** 2, numbers))\nprint(squared)  # Prints [1, 4, 9, 16]\n</code></pre>"},{"location":"chapters/chapter04/#explanation_3","title":"Explanation:","text":"<ul> <li><code>map()</code> applies the lambda function <code>x ** 2</code> to every number in the list.</li> <li>The result is a new list with the squares of the original numbers.</li> </ul>"},{"location":"chapters/chapter04/#filter","title":"Filter","text":"<p>The <code>filter()</code> function filters items from a list based on a condition.</p>"},{"location":"chapters/chapter04/#code-example-using-filter-to-get-even-numbers","title":"Code Example: Using <code>filter()</code> to Get Even Numbers","text":"<pre><code>numbers = [1, 2, 3, 4, 5, 6]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))\nprint(even_numbers)  # Prints [2, 4, 6]\n</code></pre>"},{"location":"chapters/chapter04/#explanation_4","title":"Explanation:","text":"<ul> <li><code>filter()</code> keeps only the numbers that satisfy the condition (in this case, being even).</li> </ul>"},{"location":"chapters/chapter04/#reduce","title":"Reduce","text":"<p>The <code>reduce()</code> function reduces a list to a single value by applying a function. You need to import it from the <code>functools</code> module.</p>"},{"location":"chapters/chapter04/#code-example-using-reduce-to-multiply-all-numbers","title":"Code Example: Using <code>reduce()</code> to Multiply All Numbers","text":"<pre><code>from functools import reduce\n\nnumbers = [1, 2, 3, 4]\nproduct = reduce(lambda x, y: x * y, numbers)\nprint(product)  # Prints 24 (1*2*3*4)\n</code></pre>"},{"location":"chapters/chapter04/#explanation_5","title":"Explanation:","text":"<ul> <li><code>reduce()</code> takes the first two numbers, multiplies them, then multiplies the result by the next number, and so on.</li> </ul>"},{"location":"chapters/chapter04/#mini-project-to-do-list-app","title":"Mini Project: To-Do List App","text":"<p>Now, let\u2019s use functions to create a simple to-do list app. The app will allow users to add, view, and delete tasks.</p>"},{"location":"chapters/chapter04/#code-example-to-do-list-app","title":"Code Example: To-Do List App","text":"<pre><code>tasks = []\n\ndef add_task(task):\n    tasks.append(task)\n    print(\"Task added: \" + task)\n\ndef view_tasks():\n    print(\"Your tasks:\")\n    for task in tasks:\n        print(\"- \" + task)\n\ndef remove_task(task):\n    if task in tasks:\n        tasks.remove(task)\n        print(\"Task removed: \" + task)\n    else:\n        print(\"Task not found!\")\n\n# Sample usage\nadd_task(\"Study for math test\")\nadd_task(\"Buy groceries\")\nview_tasks()\nremove_task(\"Buy groceries\")\nview_tasks()\n</code></pre>"},{"location":"chapters/chapter04/#whats-happening-here_1","title":"What\u2019s Happening Here?","text":"<ul> <li><code>add_task()</code> adds a task to the list.</li> <li><code>view_tasks()</code> prints all the tasks in the list.</li> <li><code>remove_task()</code> removes a task if it exists in the list.</li> </ul>"},{"location":"chapters/chapter04/#quiz-time","title":"Quiz Time!","text":"<p>Let\u2019s see how well you understand functions and functional programming:</p> <ol> <li> <p>What keyword is used to define a function in Python?     A. define     B. function     C. def  </p> </li> <li> <p>What does a lambda function do?     A. Creates a full function.     B. Defines a mini function in one line.     C. Deletes a function.  </p> </li> <li> <p>What does <code>map()</code> do?     A. Maps two lists together.     B. Applies a function to each item in a list.     C. Filters out unwanted items.  </p> </li> </ol>"},{"location":"chapters/chapter04/#answers","title":"Answers:","text":"<ol> <li>C</li> <li>B</li> <li>B</li> </ol>"},{"location":"chapters/chapter04/#further-reading","title":"Further Reading","text":"<p>If you want to explore more about functions in Python, check out: - Python Functions</p> <p>Next, we\u2019ll dive into Object-Oriented Programming (OOP) in Python. You\u2019ll learn how to model real-world objects in code and build more complex projects!</p> <p>Let me know when you're ready for Chapter 5 on Object-Oriented Programming!</p>"},{"location":"chapters/chapter05/","title":"Chapter 5: Object-Oriented Programming (OOP)","text":"<p>In this chapter, we\u2019ll explore Object-Oriented Programming (OOP) in Python. OOP is a way to model real-world things in your code. You can think of it like creating blueprints for objects, like cars, animals, or even people!</p>"},{"location":"chapters/chapter05/#what-is-oop","title":"What is OOP?","text":"<p>In Python, Object-Oriented Programming (OOP) lets you structure your code in terms of objects. An object is something that contains both data (attributes) and functions (methods) that operate on the data.</p> <p>At the core of OOP are: - Classes: Blueprints for creating objects. - Objects: Instances of a class. - Methods: Functions that belong to a class. - Attributes: Variables that belong to a class.</p>"},{"location":"chapters/chapter05/#real-life-analogy","title":"Real-Life Analogy","text":"<p>Think of a class as a blueprint for a car. You can make multiple cars from the same blueprint, but each car is its own object (or instance). The blueprint (class) defines things like the number of doors, color, and engine type (attributes), as well as what the car can do, like drive or honk (methods).</p>"},{"location":"chapters/chapter05/#creating-classes-and-objects","title":"Creating Classes and Objects","text":"<p>Let\u2019s create a simple class to represent a Person.</p>"},{"location":"chapters/chapter05/#code-example-defining-a-class","title":"Code Example: Defining a Class","text":"<pre><code>class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def introduce(self):\n        print(\"Hello, my name is \" + self.name + \" and I am \" + str(self.age) + \" years old.\")\n\n# Creating an object (instance) of the Person class\nperson1 = Person(\"Alice\", 16)\nperson1.introduce()\n</code></pre>"},{"location":"chapters/chapter05/#explanation","title":"Explanation:","text":"<ul> <li><code>class Person:</code> defines a class called Person.</li> <li><code>__init__()</code> is a special method called a constructor. It runs when we create a new object and initializes its attributes.</li> <li><code>self.name</code> and <code>self.age</code> are attributes that store the name and age of the person.</li> <li><code>introduce()</code> is a method that prints a message introducing the person.</li> </ul>"},{"location":"chapters/chapter05/#methods-and-attributes","title":"Methods and Attributes","text":"<ul> <li>Attributes are the data associated with an object (like a person\u2019s name and age).</li> <li>Methods are functions that belong to an object (like introducing yourself).</li> </ul>"},{"location":"chapters/chapter05/#code-example-adding-an-action-method","title":"Code Example: Adding an Action (Method)","text":"<pre><code>class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def introduce(self):\n        print(\"Hello, my name is \" + self.name + \" and I am \" + str(self.age) + \" years old.\")\n\n    def celebrate_birthday(self):\n        self.age += 1\n        print(\"Happy Birthday! You are now \" + str(self.age) + \" years old.\")\n\n# Creating a new person\nperson2 = Person(\"Bob\", 17)\nperson2.introduce()\nperson2.celebrate_birthday()  # Increases the age by 1 and prints a birthday message\n</code></pre>"},{"location":"chapters/chapter05/#explanation_1","title":"Explanation:","text":"<ul> <li><code>celebrate_birthday()</code> is a new method that increases the person\u2019s age by 1 and prints a birthday message.</li> <li>You can call methods on objects to make them do things!</li> </ul>"},{"location":"chapters/chapter05/#inheritance-passing-on-traits","title":"Inheritance: Passing on Traits","text":"<p>In OOP, inheritance allows one class to inherit attributes and methods from another class. This lets you create specialized versions of existing classes without rewriting code.</p>"},{"location":"chapters/chapter05/#code-example-inheriting-from-the-person-class","title":"Code Example: Inheriting from the <code>Person</code> Class","text":"<pre><code>class Student(Person):\n    def __init__(self, name, age, grade):\n        super().__init__(name, age)  # Call the constructor of the Person class\n        self.grade = grade\n\n    def study(self):\n        print(self.name + \" is studying for a grade \" + str(self.grade) + \" exam.\")\n\n# Creating a Student object\nstudent1 = Student(\"Charlie\", 16, 10)\nstudent1.introduce()\nstudent1.study()\n</code></pre>"},{"location":"chapters/chapter05/#explanation_2","title":"Explanation:","text":"<ul> <li><code>Student(Person)</code>: The <code>Student</code> class inherits from the <code>Person</code> class.</li> <li><code>super().__init__(name, age)</code> calls the constructor of the <code>Person</code> class to initialize the name and age attributes.</li> <li>The <code>Student</code> class has an extra attribute, grade, and a new method, study().</li> </ul>"},{"location":"chapters/chapter05/#fun-example-modeling-a-pet","title":"Fun Example: Modeling a Pet","text":"<p>Let\u2019s create a simple program to model a Pet using OOP. You can feed your pet, play with it, and see how happy it is!</p>"},{"location":"chapters/chapter05/#code-example-a-simple-pet-class","title":"Code Example: A Simple Pet Class","text":"<pre><code>class Pet:\n    def __init__(self, name, species):\n        self.name = name\n        self.species = species\n        self.happiness = 50\n\n    def feed(self):\n        self.happiness += 10\n        print(self.name + \" is happy! Happiness level: \" + str(self.happiness))\n\n    def play(self):\n        self.happiness += 20\n        print(self.name + \" is excited! Happiness level: \" + str(self.happiness))\n\n# Creating a pet object\nmy_pet = Pet(\"Buddy\", \"dog\")\nmy_pet.feed()\nmy_pet.play()\n</code></pre>"},{"location":"chapters/chapter05/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>The Pet class has attributes like name, species, and happiness.</li> <li>Methods like feed() and play() increase the pet\u2019s happiness when called.</li> </ul>"},{"location":"chapters/chapter05/#mini-project-simple-banking-system","title":"Mini Project: Simple Banking System","text":"<p>Let\u2019s apply what we\u2019ve learned by building a simple banking system using OOP. We\u2019ll create classes for a BankAccount and allow users to deposit, withdraw, and check their balance.</p>"},{"location":"chapters/chapter05/#code-example-banking-system","title":"Code Example: Banking System","text":"<pre><code>class BankAccount:\n    def __init__(self, owner, balance=0):\n        self.owner = owner\n        self.balance = balance\n\n    def deposit(self, amount):\n        self.balance += amount\n        print(f\"${amount} deposited. New balance: ${self.balance}\")\n\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            print(\"Insufficient funds!\")\n        else:\n            self.balance -= amount\n            print(f\"${amount} withdrawn. New balance: ${self.balance}\")\n\n    def check_balance(self):\n        print(f\"{self.owner}'s balance: ${self.balance}\")\n\n# Creating a bank account\naccount1 = BankAccount(\"Alice\")\naccount1.deposit(100)\naccount1.withdraw(50)\naccount1.check_balance()\n</code></pre>"},{"location":"chapters/chapter05/#explanation_3","title":"Explanation:","text":"<ul> <li><code>deposit()</code> increases the account balance.</li> <li><code>withdraw()</code> decreases the balance if enough funds are available.</li> <li><code>check_balance()</code> shows the current balance.</li> </ul>"},{"location":"chapters/chapter05/#quiz-time","title":"Quiz Time!","text":"<p>Test your knowledge of OOP with this quiz:</p> <ol> <li> <p>What is a class in Python?     A. A blueprint for creating objects     B. A list of functions     C. A type of loop  </p> </li> <li> <p>What is the special method called that initializes a class?     A. <code>__init__</code>     B. <code>start</code>     C. <code>main</code> </p> </li> <li> <p>What keyword is used to inherit from another class?     A. extend     B. inherit     C. super  </p> </li> </ol>"},{"location":"chapters/chapter05/#answers","title":"Answers:","text":"<ol> <li>A</li> <li>A</li> <li>C</li> </ol>"},{"location":"chapters/chapter05/#further-reading","title":"Further Reading","text":"<p>If you want to dive deeper into OOP in Python, check out: - Python OOP Documentation</p> <p>In the next chapter, we\u2019ll explore real-world applications of Python, including how it\u2019s used in data science, automation, and even artificial intelligence!</p> <p>You're ready for Chapter 6 on Python applications!</p>"},{"location":"chapters/chapter06/","title":"Chapter 6: Python in the Real World","text":"<p>Python isn't just a language for beginners\u2014it's used by professionals across many industries for all sorts of exciting applications. In this chapter, we\u2019ll explore how Python is used in data science, automation, web scraping, and even artificial intelligence (AI). Let\u2019s dive into these fun and practical uses of Python!</p>"},{"location":"chapters/chapter06/#python-for-data-science","title":"Python for Data Science","text":"<p>Data science is all about analyzing and visualizing data to gain insights. Python has powerful libraries like Pandas and Matplotlib that make working with data easy and fun!</p>"},{"location":"chapters/chapter06/#using-pandas-analyzing-data","title":"Using Pandas: Analyzing Data","text":"<p>The Pandas library is like a Swiss Army knife for data analysis. You can store data in DataFrames (think of them as Excel sheets) and easily manipulate them.</p>"},{"location":"chapters/chapter06/#code-example-analyzing-school-grades","title":"Code Example: Analyzing School Grades","text":"<pre><code>import pandas as pd\n\n# Creating a DataFrame of student grades\ndata = {\n    \"Student\": [\"Alice\", \"Bob\", \"Charlie\", \"David\"],\n    \"Math\": [85, 92, 78, 90],\n    \"Science\": [88, 95, 80, 85]\n}\n\ngrades = pd.DataFrame(data)\nprint(grades)\n\n# Calculating the average grades\ngrades[\"Average\"] = (grades[\"Math\"] + grades[\"Science\"]) / 2\nprint(\"\\nAverage Grades:\")\nprint(grades)\n</code></pre>"},{"location":"chapters/chapter06/#explanation","title":"Explanation:","text":"<ul> <li><code>pandas.DataFrame</code> lets you create tables of data.</li> <li>We calculate the average grades for each student and add that information to the DataFrame.</li> </ul>"},{"location":"chapters/chapter06/#using-matplotlib-visualizing-data","title":"Using Matplotlib: Visualizing Data","text":"<p>Data is often easier to understand when you visualize it. The Matplotlib library lets you create beautiful charts and graphs.</p>"},{"location":"chapters/chapter06/#code-example-plotting-a-bar-chart-of-grades","title":"Code Example: Plotting a Bar Chart of Grades","text":"<pre><code>import matplotlib.pyplot as plt\n\nstudents = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\nmath_grades = [85, 92, 78, 90]\n\nplt.bar(students, math_grades)\nplt.xlabel(\"Students\")\nplt.ylabel(\"Math Grades\")\nplt.title(\"Math Grades of Students\")\nplt.show()\n</code></pre>"},{"location":"chapters/chapter06/#explanation_1","title":"Explanation:","text":"<ul> <li><code>plt.bar()</code> creates a bar chart showing the math grades of each student.</li> <li>We add labels for the x-axis, y-axis, and a title.</li> </ul>"},{"location":"chapters/chapter06/#python-for-web-automation","title":"Python for Web Automation","text":"<p>Python can also control the web for you. You can use it to automate repetitive tasks, like filling out forms or scraping data from websites.</p>"},{"location":"chapters/chapter06/#using-selenium-automating-web-browsing","title":"Using Selenium: Automating Web Browsing","text":"<p>Selenium is a Python library that lets you automate browser activities. It\u2019s perfect for automating things like logging into websites or gathering information.</p>"},{"location":"chapters/chapter06/#code-example-automating-google-search-simplified-example","title":"Code Example: Automating Google Search (Simplified Example)","text":"<pre><code>from selenium import webdriver\n\n# Setting up the browser\nbrowser = webdriver.Chrome()\n\n# Open Google's homepage\nbrowser.get('http://www.google.com')\n\n# Find the search box using its name attribute\nsearch_box = browser.find_element(\"name\", \"q\")\n\n# Type in the search query and hit enter\nsearch_box.send_keys('Python programming')\nsearch_box.submit()\n\n# The browser will now show search results for 'Python programming'\n</code></pre>"},{"location":"chapters/chapter06/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>Selenium opens a browser and navigates to Google.</li> <li>It finds the search box, enters a search term, and submits the search.</li> </ul>"},{"location":"chapters/chapter06/#python-for-artificial-intelligence-ai","title":"Python for Artificial Intelligence (AI)","text":"<p>Python is one of the most popular languages for artificial intelligence. Libraries like TensorFlow and scikit-learn allow you to build models that can recognize patterns, classify data, and even make decisions.</p>"},{"location":"chapters/chapter06/#using-scikit-learn-building-a-simple-ai-model","title":"Using Scikit-Learn: Building a Simple AI Model","text":"<p>Let\u2019s use scikit-learn, a powerful library for machine learning, to create a simple model that predicts if a student passed or failed based on their grades.</p>"},{"location":"chapters/chapter06/#code-example-simple-ai-model-for-predicting-passfail","title":"Code Example: Simple AI Model for Predicting Pass/Fail","text":"<pre><code>from sklearn.tree import DecisionTreeClassifier\n\n# Data: grades in Math and Science\nX = [[85, 88], [92, 95], [78, 80], [90, 85], [60, 55]]\n# Labels: 1 for Pass, 0 for Fail\ny = [1, 1, 1, 1, 0]\n\n# Creating a decision tree classifier\nclf = DecisionTreeClassifier()\nclf = clf.fit(X, y)\n\n# Predicting pass/fail for a new student\nnew_student_grades = [[70, 75]]\nprediction = clf.predict(new_student_grades)\nif prediction == 1:\n    print(\"The student passed!\")\nelse:\n    print(\"The student failed.\")\n</code></pre>"},{"location":"chapters/chapter06/#explanation_2","title":"Explanation:","text":"<ul> <li>DecisionTreeClassifier builds a simple model that predicts if a student passes or fails based on their grades.</li> <li>We use the model to predict whether a new student will pass.</li> </ul>"},{"location":"chapters/chapter06/#fun-example-sending-automated-emails","title":"Fun Example: Sending Automated Emails","text":"<p>Let\u2019s automate something fun\u2014sending an email using Python! We\u2019ll use the smtplib library to send an email through a Gmail account.</p>"},{"location":"chapters/chapter06/#code-example-sending-an-email","title":"Code Example: Sending an Email","text":"<pre><code>import smtplib\n\n# Set up the server\nserver = smtplib.SMTP('smtp.gmail.com', 587)\nserver.starttls()\n\n# Log into your Gmail account (replace with your actual credentials)\nserver.login(\"youremail@gmail.com\", \"yourpassword\")\n\n# Sending the email\nsubject = \"Python Email Automation\"\nbody = \"Hi there! This email was sent using Python!\"\nmsg = f\"Subject: {subject}\\n\\n{body}\"\nserver.sendmail(\"youremail@gmail.com\", \"receiveremail@gmail.com\", msg)\n\nprint(\"Email sent!\")\nserver.quit()\n</code></pre>"},{"location":"chapters/chapter06/#whats-happening-here_1","title":"What\u2019s Happening Here?","text":"<ul> <li><code>smtplib</code> sets up an email server and sends an email with a subject and body.</li> </ul> <p>Note: You need to enable \"Less secure app access\" in your Gmail account for this to work.</p>"},{"location":"chapters/chapter06/#mini-project-automating-birthday-reminders","title":"Mini Project: Automating Birthday Reminders","text":"<p>For this project, we\u2019ll create a simple script that reminds you of upcoming birthdays by sending an email. You can store your friends' birthdays in a file and check if there\u2019s any upcoming birthday today.</p>"},{"location":"chapters/chapter06/#code-example-birthday-reminder-system","title":"Code Example: Birthday Reminder System","text":"<pre><code>import smtplib\nfrom datetime import datetime\n\nbirthdays = {\n    \"Alice\": \"03-25\",\n    \"Bob\": \"09-18\",\n    \"Charlie\": \"12-01\"\n}\n\ntoday = datetime.today().strftime(\"%m-%d\")\n\nfor friend, bday in birthdays.items():\n    if bday == today:\n        server = smtplib.SMTP('smtp.gmail.com', 587)\n        server.starttls()\n        server.login(\"youremail@gmail.com\", \"yourpassword\")\n\n        subject = \"Birthday Reminder\"\n        body = f\"Hey, don't forget to wish {friend} a happy birthday today!\"\n        msg = f\"Subject: {subject}\\n\\n{body}\"\n\n        server.sendmail(\"youremail@gmail.com\", \"youremail@gmail.com\", msg)\n        print(f\"Reminder sent for {friend}'s birthday!\")\n        server.quit()\n</code></pre>"},{"location":"chapters/chapter06/#explanation_3","title":"Explanation:","text":"<ul> <li>The script checks if today\u2019s date matches a birthday and sends a reminder email.</li> </ul>"},{"location":"chapters/chapter06/#quiz-time","title":"Quiz Time!","text":"<p>Check your understanding of Python\u2019s real-world applications:</p> <ol> <li> <p>What library is used for data analysis in Python?     A. Selenium     B. Pandas     C. Scikit-learn  </p> </li> <li> <p>Which Python library is used to automate web browsing?     A. Matplotlib     B. smtplib     C. Selenium  </p> </li> <li> <p>What is TensorFlow used for?     A. Web Scraping     B. Artificial Intelligence     C. Data Visualization  </p> </li> </ol>"},{"location":"chapters/chapter06/#answers","title":"Answers:","text":"<ol> <li>B</li> <li>C</li> <li>B</li> </ol>"},{"location":"chapters/chapter06/#further-reading","title":"Further Reading","text":"<p>If you want to dive deeper into these topics, check out: - Pandas Documentation - Selenium Documentation - Scikit-learn Documentation</p> <p>Next, we\u2019ll wrap up with Chapter 7: Final Projects where you\u2019ll get to build a full Python project from start to finish!</p> <p>Let me know if you're ready to proceed with the final chapter!</p>"},{"location":"chapters/chapter07/","title":"Chapter 7: Wrapping Up and Final Project","text":"<p>You\u2019ve made it!  In this final chapter, we\u2019ll review the key concepts you\u2019ve learned, and then it\u2019s time for you to apply those skills by building your very own Python projects. Don\u2019t worry, I\u2019ll provide some ideas to help you get started!</p>"},{"location":"chapters/chapter07/#review-of-key-concepts","title":"Review of Key Concepts","text":"<p>Before we jump into the projects, let\u2019s quickly recap what we\u2019ve learned so far:</p>"},{"location":"chapters/chapter07/#1-python-basics","title":"1. Python Basics","text":"<ul> <li>Printing: Using <code>print()</code> to display text.</li> <li>Variables: Storing data like numbers, strings, and booleans.</li> <li>Data Structures: Lists, tuples, dictionaries, and sets to store and manage data.</li> </ul>"},{"location":"chapters/chapter07/#2-conditions-and-control-flow","title":"2. Conditions and Control Flow","text":"<ul> <li>if-else statements: Making decisions based on conditions.</li> <li>Loops: Repeating tasks with <code>for</code> and <code>while</code> loops.</li> </ul>"},{"location":"chapters/chapter07/#3-functions-and-functional-programming","title":"3. Functions and Functional Programming","text":"<ul> <li>Defining functions: Writing reusable blocks of code with <code>def</code>.</li> <li>Lambda functions: Writing mini-functions on the go.</li> <li>Map, Filter, Reduce: Applying functions to lists of data.</li> </ul>"},{"location":"chapters/chapter07/#4-object-oriented-programming-oop","title":"4. Object-Oriented Programming (OOP)","text":"<ul> <li>Classes and objects: Modeling real-world things using Python.</li> <li>Methods and attributes: Functions and data inside objects.</li> <li>Inheritance: Creating specialized classes that build on others.</li> </ul>"},{"location":"chapters/chapter07/#5-real-world-python-applications","title":"5. Real-World Python Applications","text":"<ul> <li>Data Science: Using Pandas and Matplotlib for analyzing and visualizing data.</li> <li>Automation: Automating tasks with libraries like Selenium.</li> <li>AI and Machine Learning: Using Scikit-learn to build simple AI models.</li> </ul>"},{"location":"chapters/chapter07/#final-project-ideas","title":"Final Project Ideas","text":"<p>Now that you\u2019ve reviewed the key concepts, it\u2019s time to start building something fun and useful! Here are some project ideas to get your creativity flowing.</p>"},{"location":"chapters/chapter07/#project-idea-1-personal-assistant-program","title":"Project Idea 1: Personal Assistant Program","text":"<p>Build a Python program that acts as your personal assistant. It could help you with daily tasks like setting reminders, looking up information, or even telling jokes!</p> <p>Suggested Features: - A menu that allows you to choose different actions. - Set reminders for events (e.g., using a text file to store them). - Look up the weather (you can use the OpenWeatherMap API). - Tell a random joke or give a motivational quote.</p>"},{"location":"chapters/chapter07/#code-starter","title":"Code Starter:","text":"<pre><code>import time\n\ndef set_reminder(reminder, minutes):\n    print(f\"Reminder set: {reminder} in {minutes} minutes.\")\n    time.sleep(minutes * 60)\n    print(f\"Reminder: {reminder}\")\n\ndef tell_joke():\n    jokes = [\"Why did the chicken cross the road? To get to the other side!\",\n             \"Why don't skeletons fight each other? They don't have the guts!\"]\n    print(random.choice(jokes))\n\n# Add more features, like checking the time or setting multiple reminders.\n</code></pre>"},{"location":"chapters/chapter07/#project-idea-2-simple-game-tic-tac-toe","title":"Project Idea 2: Simple Game (Tic-Tac-Toe)","text":"<p>Create a Python version of the classic Tic-Tac-Toe game. Two players can take turns marking the board, and the program will declare the winner.</p> <p>Suggested Features: - A 3x3 grid that shows the game board. - Allow players to enter their moves and update the board. - Detect when a player wins or if the game is a draw.</p>"},{"location":"chapters/chapter07/#code-starter_1","title":"Code Starter:","text":"<pre><code>def print_board(board):\n    for row in board:\n        print(\" | \".join(row))\n\ndef check_winner(board):\n    # Check rows, columns, and diagonals for a winner\n    pass\n\nboard = [[\" \" for _ in range(3)] for _ in range(3)]\n\n# Let players input moves and display the updated board\nprint_board(board)\n</code></pre>"},{"location":"chapters/chapter07/#project-idea-3-expense-tracker","title":"Project Idea 3: Expense Tracker","text":"<p>Create an expense tracker that helps you manage your finances. You can log your expenses and income, categorize them, and calculate totals.</p> <p>Suggested Features: - Add, view, and delete expenses. - Calculate total expenses and total income. - Categorize expenses (e.g., food, entertainment, etc.).</p>"},{"location":"chapters/chapter07/#code-starter_2","title":"Code Starter:","text":"<pre><code>expenses = []\n\ndef add_expense(description, amount):\n    expenses.append({\"description\": description, \"amount\": amount})\n    print(f\"Added: {description} - ${amount}\")\n\ndef view_expenses():\n    for expense in expenses:\n        print(f\"{expense['description']}: ${expense['amount']}\")\n\n# Add income, categorize expenses, and calculate totals\n</code></pre>"},{"location":"chapters/chapter07/#project-idea-4-weather-app","title":"Project Idea 4: Weather App","text":"<p>Create a Python program that fetches the current weather for any city using the OpenWeatherMap API.</p> <p>Suggested Features: - Ask the user to input a city. - Fetch the weather data using the API. - Display the current temperature, humidity, and weather condition.</p>"},{"location":"chapters/chapter07/#code-starter_3","title":"Code Starter:","text":"<pre><code>import requests\n\ndef get_weather(city):\n    api_key = \"your_api_key\"\n    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={api_key}&amp;units=metric\"\n    response = requests.get(url)\n    data = response.json()\n\n    if data[\"cod\"] != \"404\":\n        main = data[\"main\"]\n        weather = data[\"weather\"][0]\n        print(f\"City: {city}\")\n        print(f\"Temperature: {main['temp']}\u00b0C\")\n        print(f\"Humidity: {main['humidity']}%\")\n        print(f\"Weather: {weather['description']}\")\n    else:\n        print(\"City not found!\")\n\n# Test the function with a city\nget_weather(\"New York\")\n</code></pre>"},{"location":"chapters/chapter07/#project-idea-5-flashcard-quiz-game","title":"Project Idea 5: Flashcard Quiz Game","text":"<p>Build a flashcard quiz game where you can study topics like vocabulary or historical facts. You can load questions from a file, ask the user for answers, and keep track of their score.</p> <p>Suggested Features: - Load flashcards (questions and answers) from a file. - Ask questions and get user input. - Keep track of the score and display results.</p>"},{"location":"chapters/chapter07/#code-starter_4","title":"Code Starter:","text":"<pre><code>flashcards = {\"What is the capital of France?\": \"Paris\",\n              \"What is 2 + 2?\": \"4\",\n              \"Who wrote '1984'?\": \"George Orwell\"}\n\ndef quiz(flashcards):\n    score = 0\n    for question, answer in flashcards.items():\n        user_answer = input(question + \" \")\n        if user_answer.lower() == answer.lower():\n            print(\"Correct!\")\n            score += 1\n        else:\n            print(f\"Wrong! The answer is {answer}\")\n\n    print(f\"Your score: {score}/{len(flashcards)}\")\n\n# Start the quiz\nquiz(flashcards)\n</code></pre>"},{"location":"chapters/chapter07/#final-thoughts","title":"Final Thoughts","text":"<p>Python is a powerful language with endless possibilities. You\u2019ve learned the core concepts of programming, explored how Python is used in the real world, and built fun projects along the way. But this is just the beginning!</p> <p>Here are a few things you can do next: - Keep building projects! The more you code, the better you\u2019ll get. - Explore Python\u2019s amazing libraries like Flask (for web development), PyGame (for game development), and TensorFlow (for AI). - Join online coding communities where you can share your projects and learn from others.</p>"},{"location":"chapters/chapter07/#quiz-time","title":"Quiz Time!","text":"<p>To wrap things up, here\u2019s a final quiz:</p> <ol> <li> <p>What is one use of the Pandas library?     A. Automating web tasks     B. Analyzing data     C. Sending emails  </p> </li> <li> <p>Which method is used to create a class in Python?     A. class     B. def     C. init  </p> </li> <li> <p>What is the primary function of a loop in Python?     A. Make decisions     B. Repeat tasks     C. Store data  </p> </li> </ol>"},{"location":"chapters/chapter07/#answers","title":"Answers:","text":"<ol> <li>B</li> <li>A</li> <li>B</li> </ol>"},{"location":"chapters/chapter07/#final-project-submission","title":"Final Project Submission","text":"<p>Choose one of the projects from this chapter, or come up with your own! Once you\u2019ve built your project, share it with your classmates, friends, or even online communities. The best way to improve is to get feedback and keep coding!</p>"},{"location":"chapters/chapter07/#further-resources","title":"Further Resources","text":"<p>If you want to continue learning Python, here are some great resources: - Real Python - Python Documentation - Codewars (Solve Python challenges!)</p> <p>Congratulations!  You\u2019ve completed this Python course! You now have the skills to take on even bigger projects, dive deeper into advanced topics, and continue your programming journey. Keep coding and have fun!</p>"},{"location":"chapters/chapter08/","title":"Chapter 8: Exploring the Cutting-Edge Technologies","text":"<p>In this chapter, we\u2019ll explore some of the most exciting and futuristic technologies that are shaping the world around us. From handling enormous amounts of data to building AI that can talk to you (like me!), these topics will give you a glimpse into the future of technology.</p>"},{"location":"chapters/chapter08/#big-data-when-your-data-is-too-big-to-handle","title":"Big Data: When Your Data is Too Big to Handle!","text":"<p>Imagine trying to keep track of everything that happens in a city in one day\u2014traffic lights, tweets, temperature readings, and even what people are shopping for. That\u2019s a lot of data, right? Now imagine doing that for an entire country! This is where Big Data comes in.</p>"},{"location":"chapters/chapter08/#what-is-big-data","title":"What is Big Data?","text":"<p>Big Data refers to extremely large sets of data that are so big and complex that traditional tools can\u2019t handle them. It\u2019s like trying to organize billions of puzzle pieces to see the bigger picture.</p>"},{"location":"chapters/chapter08/#how-is-big-data-used","title":"How is Big Data Used?","text":"<ul> <li>Netflix: Recommends movies by analyzing tons of data about what millions of people are watching.</li> <li>Healthcare: Tracks medical records and research to find cures faster.</li> <li>Social Media: Analyzes posts and trends to understand what\u2019s happening in the world.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact","title":"Fun Fact:","text":"<p>The average person creates 1.7 MB of data every second just by browsing the web, using social media, and sending messages!</p>"},{"location":"chapters/chapter08/#cloud-computing-your-data-floating-in-the-clouds","title":"Cloud Computing: Your Data, Floating in the Clouds","text":"<p>Cloud computing sounds magical, but it\u2019s really just about using powerful computers somewhere else (the \u201ccloud\u201d) to store, manage, and process data over the internet, rather than using your own computer.</p>"},{"location":"chapters/chapter08/#what-is-cloud-computing","title":"What is Cloud Computing?","text":"<p>Instead of storing your files on your computer\u2019s hard drive, cloud computing allows you to store them on a network of remote servers. When you upload photos to Google Drive or use an app like Spotify, you\u2019re using the cloud!</p>"},{"location":"chapters/chapter08/#how-is-cloud-computing-used","title":"How is Cloud Computing Used?","text":"<ul> <li>Google Drive: Stores your documents and lets you access them from anywhere.</li> <li>Spotify: Streams music without storing every song on your device.</li> <li>Netflix: Streams videos directly from cloud servers.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact_1","title":"Fun Fact:","text":"<p>The cloud is actually hundreds of thousands of powerful servers located in massive data centers around the world. They\u2019re like the libraries of the internet!</p>"},{"location":"chapters/chapter08/#edge-computing-bringing-the-cloud-closer-to-you","title":"Edge Computing: Bringing the Cloud Closer to You","text":"<p>If cloud computing is like sending your data far away to be processed, edge computing is like doing it right next to you\u2014on the \u201cedge\u201d of the network. This makes things faster!</p>"},{"location":"chapters/chapter08/#what-is-edge-computing","title":"What is Edge Computing?","text":"<p>Instead of sending all your data to a faraway cloud, edge computing processes the data closer to where it\u2019s generated. Think of it as having mini cloud computers right next to your phone or smart devices.</p>"},{"location":"chapters/chapter08/#how-is-edge-computing-used","title":"How is Edge Computing Used?","text":"<ul> <li>Self-driving cars: Need to process tons of data super quickly, like recognizing pedestrians or reading road signs in real time.</li> <li>Smart home devices: Devices like Amazon Echo or Google Home need to respond quickly to your voice commands without delay.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact_2","title":"Fun Fact:","text":"<p>By 2025, it\u2019s expected that more than 75% of data will be processed outside of traditional cloud data centers\u2014on the edge!</p>"},{"location":"chapters/chapter08/#networking-how-devices-talk-to-each-other","title":"Networking: How Devices Talk to Each Other","text":"<p>Networking is how computers and devices talk to each other. If you\u2019ve ever used Wi-Fi, shared files, or sent an email, congratulations\u2014you\u2019ve used networking!</p>"},{"location":"chapters/chapter08/#what-is-networking","title":"What is Networking?","text":"<p>Networking refers to the process of connecting computers and other devices to share information. It\u2019s like the internet itself: a giant web of interconnected computers exchanging data.</p>"},{"location":"chapters/chapter08/#types-of-networks","title":"Types of Networks:","text":"<ul> <li>Local Area Network (LAN): Used in homes or schools to connect computers within a small area.</li> <li>Wide Area Network (WAN): Like the internet, connecting computers over large distances.</li> </ul>"},{"location":"chapters/chapter08/#how-is-networking-used","title":"How is Networking Used?","text":"<ul> <li>Wi-Fi: Connects your devices to the internet.</li> <li>Social Media: Sends your messages across the world in seconds.</li> <li>Online Gaming: Connects players from all over the world in real-time.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact_3","title":"Fun Fact:","text":"<p>There are currently more devices connected to the internet than there are people on Earth!</p>"},{"location":"chapters/chapter08/#automation-machines-doing-the-work-for-you","title":"Automation: Machines Doing the Work for You","text":"<p>Ever wished that you could automate your homework or chores? Well, automation is when machines or software take over repetitive tasks, making life easier and more efficient!</p>"},{"location":"chapters/chapter08/#what-is-automation","title":"What is Automation?","text":"<p>Automation involves using technology to perform tasks without human intervention. It can be as simple as a coffee maker that starts brewing at 7 a.m. or as complex as robots assembling cars in a factory.</p>"},{"location":"chapters/chapter08/#how-is-automation-used","title":"How is Automation Used?","text":"<ul> <li>Self-driving cars: Automate driving by using sensors and AI.</li> <li>Smart homes: Lights, thermostats, and security systems that adjust themselves automatically.</li> <li>Factories: Robots assemble products like cars or smartphones without human help.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact_4","title":"Fun Fact:","text":"<p>Automation is everywhere\u2014from Roombas vacuuming floors to algorithms that suggest what to watch next on Netflix!</p>"},{"location":"chapters/chapter08/#artificial-intelligence-ai-making-machines-think","title":"Artificial Intelligence (AI): Making Machines Think","text":"<p>AI is one of the most exciting fields in technology. It\u2019s the science of teaching computers to learn, think, and make decisions. From self-driving cars to personal assistants like Siri, AI is transforming the world.</p>"},{"location":"chapters/chapter08/#what-is-ai","title":"What is AI?","text":"<p>Artificial Intelligence (AI) is a field of computer science that focuses on creating machines or software that can think and act like humans. AI can learn from experience, recognize patterns, and make decisions.</p>"},{"location":"chapters/chapter08/#types-of-ai","title":"Types of AI:","text":"<ul> <li>Narrow AI: AI that performs a specific task, like recognizing faces or playing chess.</li> <li>General AI: AI that can perform any intellectual task that a human can do (this is still science fiction, for now!).</li> </ul>"},{"location":"chapters/chapter08/#gpt-the-ai-that-writes-like-me","title":"GPT: The AI That Writes (Like Me!)","text":"<p>GPT (Generative Pretrained Transformer) is a type of AI created by OpenAI that can understand and generate human-like text. It can write essays, tell stories, answer questions, and even chat with you!</p> <p>How does GPT work? GPT is trained on massive amounts of text data from the internet. When you ask it a question, it analyzes the data to generate a response that makes sense in human language.</p>"},{"location":"chapters/chapter08/#fun-fact_5","title":"Fun Fact:","text":"<p>GPT models like the one you\u2019re talking to now (me!) can generate millions of different possible answers to any question, all in a matter of seconds!</p>"},{"location":"chapters/chapter08/#dalle-the-ai-that-paints","title":"DALL\u00b7E: The AI That Paints","text":"<p>DALL\u00b7E is another AI developed by OpenAI, but instead of generating text, it generates images. You can describe a scene\u2014like \u201ca cat riding a skateboard on the moon\u201d\u2014and DALL\u00b7E will create a picture of it.</p>"},{"location":"chapters/chapter08/#how-is-dalle-used","title":"How is DALL\u00b7E used?","text":"<ul> <li>Art and Design: People use DALL\u00b7E to create unique artwork and designs.</li> <li>Visual Storytelling: DALL\u00b7E can generate illustrations for books or comics based on text descriptions.</li> </ul>"},{"location":"chapters/chapter08/#fun-fact_6","title":"Fun Fact:","text":"<p>DALL\u00b7E can create completely original images based on just a sentence you give it. It\u2019s like having a robot artist at your fingertips!</p>"},{"location":"chapters/chapter08/#fun-project-build-your-own-ai-chatbot","title":"Fun Project: Build Your Own AI Chatbot","text":"<p>Before we wrap up, here\u2019s a fun project idea: build a simple chatbot that can chat with you and respond to simple questions.</p>"},{"location":"chapters/chapter08/#code-example-a-basic-chatbot","title":"Code Example: A Basic Chatbot","text":"<pre><code>def chatbot_response(user_input):\n    responses = {\n        \"hi\": \"Hello! How can I help you today?\",\n        \"bye\": \"Goodbye! Have a great day!\",\n        \"how are you?\": \"I'm just a bunch of code, but I'm doing great!\"\n    }\n    return responses.get(user_input.lower(), \"Sorry, I didn't understand that.\")\n\nwhile True:\n    user_input = input(\"You: \")\n    if user_input.lower() == \"bye\":\n        print(\"Chatbot: Goodbye!\")\n        break\n    print(\"Chatbot:\", chatbot_response(user_input))\n</code></pre>"},{"location":"chapters/chapter08/#whats-happening-here","title":"What\u2019s Happening Here?","text":"<ul> <li>The chatbot listens for input from the user and responds with pre-defined answers.</li> <li>If the user says \"bye,\" the chatbot ends the conversation.</li> </ul>"},{"location":"chapters/chapter08/#quiz-time","title":"Quiz Time!","text":"<p>Let\u2019s see how well you understand these advanced technologies:</p> <ol> <li> <p>What is Big Data?     A. Small amounts of information     B. Extremely large and complex sets of data     C. A type of cloud  </p> </li> <li> <p>What does edge computing do?     A. Processes data far away     B. Processes data close to where it\u2019s generated     C. Stores data in the cloud  </p> </li> <li> <p>What is GPT?     A. A text-generating AI     B. A cloud service     C. A type of data storage  </p> </li> </ol>"},{"location":"chapters/chapter08/#answers","title":"Answers:","text":"<ol> <li>B</li> <li>B</li> <li>A</li> </ol>"},{"location":"chapters/chapter08/#final-thoughts","title":"Final Thoughts","text":"<p>The technologies we\u2019ve explored in this chapter\u2014Big Data, Cloud Computing, Edge Computing, Networking, Automation, and AI\u2014are not only transforming industries but also making our daily lives easier and more connected.</p> <p>By staying curious and continuing to learn about these areas, you can be part of shaping the future. Who knows? Maybe one day, you\u2019ll help create the next big breakthrough in AI, cloud computing, or automation!</p>"},{"location":"chapters/chapter09-ans/","title":"Chapter 9 Answers","text":""},{"location":"chapters/chapter09-ans/#chapter-1-introduction-to-python","title":"Chapter 1: Introduction to Python","text":"<ol> <li> <p>A. Guido van Rossum Explanation: Python was created by Guido van Rossum in 1991.</p> </li> <li> <p>B. Displays text or variables on the screen Explanation: The <code>print()</code> function outputs text or variable values to the screen.</p> </li> <li> <p>A. True Explanation: Python is known for its simple and readable syntax.</p> </li> <li> <p>B. print(\"Hello, World!\") Explanation: This is the correct way to start a Python program with a <code>print()</code> statement.</p> </li> <li> <p>A. input() Explanation: The <code>input()</code> function is used to take input from the user.</p> </li> <li> <p>A. True Explanation: Python can be run in web browsers using platforms like Google Colab.</p> </li> <li> <p>B. Booleans Explanation: <code>True</code> and <code>False</code> represent Boolean values in Python.</p> </li> <li> <p>B. # Explanation: The <code>#</code> symbol is used to add comments in Python code.</p> </li> <li> <p>A. pip Explanation: The <code>pip</code> command is used to install Python packages and also Python itself in some setups.</p> </li> <li> <p>B. my-var Explanation: Variable names in Python cannot contain hyphens. They can contain underscores.</p> </li> <li> <p>True Explanation: Python programs can run on various platforms, including Windows, Mac, and Linux.</p> </li> <li> <p>C. .py Explanation: Python files typically have the <code>.py</code> extension.</p> </li> <li> <p>B. 8 Explanation: The <code>print(3 + 5)</code> statement outputs the result of the addition, which is 8.</p> </li> <li> <p>True Explanation: Python is case-sensitive, so <code>Print</code> and <code>print</code> are considered different identifiers.</p> </li> <li> <p>C. Both A and B Explanation: Both <code>python --version</code> and <code>python -V</code> can be used to display the Python version.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-2-data-structures","title":"Chapter 2: Data Structures","text":"<ol> <li> <p>B. List, Tuple Explanation: A list is mutable (changeable), while a tuple is immutable (unchangeable).</p> </li> <li> <p>True Explanation: A dictionary stores data in key-value pairs.</p> </li> <li> <p>A. <code>['apple', 'banana', 'cherry']</code> Explanation: This is the correct representation of a Python list.</p> </li> <li> <p>C. Set Explanation: A set is a data structure that ensures no duplicate values.</p> </li> <li> <p>True Explanation: Lists in Python are ordered collections of items.</p> </li> <li> <p>A. 1 Explanation: The statement <code>print(my_list[0])</code> prints the first item of the list, which is 1.</p> </li> <li> <p>B. append() Explanation: The <code>append()</code> method is used to add an item to the end of a list.</p> </li> <li> <p>A. <code>{}</code> Explanation: An empty dictionary is created using <code>{}</code>.</p> </li> <li> <p>False Explanation: A tuple is immutable; its items cannot be changed after creation.</p> </li> <li> <p>A. <code>{1, 2, 3}</code> Explanation: A set automatically removes duplicate values, so <code>{1, 2, 2, 3}</code> becomes <code>{1, 2, 3}</code>.</p> </li> <li> <p>False Explanation: A set does not allow duplicate values.</p> </li> <li> <p>C. pop() Explanation: The <code>pop()</code> method is used to remove a key-value pair from a dictionary.</p> </li> <li> <p>B. 3 Explanation: The <code>len()</code> function returns the number of items in a tuple, which is 3.</p> </li> <li> <p>True Explanation: A Python list can contain items of different data types.</p> </li> <li> <p>B. Set Explanation: A set is ideal for storing a group of unique items, such as student names without duplicates.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-3-conditions-control-flow","title":"Chapter 3: Conditions &amp; Control Flow","text":"<ol> <li> <p>A. if Explanation: The <code>if</code> keyword is used to create conditions in Python.</p> </li> <li> <p>True Explanation: The <code>elif</code> statement is used to check additional conditions if the initial <code>if</code> condition is not met.</p> </li> <li> <p>A. == Explanation: The <code>==</code> operator checks if two values are equal.</p> </li> <li> <p>A. Yes Explanation: Since <code>x</code> is greater than 3, the <code>if</code> condition is true, so \"Yes\" is printed.</p> </li> <li> <p>True Explanation: An <code>else</code> block is optional and only needed if you want to execute code when the <code>if</code> condition is false.</p> </li> <li> <p>B. while Explanation: The <code>while</code> keyword is used to start a <code>while</code> loop.</p> </li> <li> <p>B. for Explanation: A <code>for</code> loop is used to run a block of code a specific number of times.</p> </li> <li> <p>A. Prints 0, 1, 2 Explanation: The <code>range(3)</code> generates numbers 0 through 2, and <code>print(i)</code> outputs these numbers.</p> </li> <li> <p>True Explanation: The <code>break</code> keyword is used to exit a loop before it has completed all iterations.</p> </li> <li> <p>B. continue Explanation: The <code>continue</code> keyword skips the current iteration of a loop and continues with the next iteration.</p> </li> <li> <p>C. if x == 5: print(x) else: print(\"not 5\") Explanation: This syntax correctly defines an <code>if-else</code> statement with conditions and corresponding actions.</p> </li> <li> <p>True Explanation: Multiple <code>if</code> statements can be used independently without <code>elif</code>.</p> </li> <li> <p>A. In range Explanation: The <code>if</code> condition checks if <code>x</code> is between 5 and 15, so \"In range\" is printed.</p> </li> <li> <p>B. range() Explanation: The <code>range()</code> function is used to create a sequence of numbers, commonly used in loops.</p> </li> <li> <p>True Explanation: It is possible to nest <code>if</code> statements inside one another to create more complex conditions.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-4-functions-functional-programming","title":"Chapter 4: Functions &amp; Functional Programming","text":"<ol> <li> <p>C. def Explanation: The <code>def</code> keyword is used to define a function in Python.</p> </li> <li> <p>A. def Explanation: A function definition starts with the <code>def</code> keyword followed by the function name.</p> </li> <li> <p>True Explanation: A function can return multiple values in Python by returning them as a tuple.</p> </li> <li> <p>A. 7 Explanation: The <code>add</code> function returns the sum of 3 and 4, which is 7.</p> </li> <li> <p>B. arguments Explanation: Functions accept inputs called arguments that affect their behavior.</p> </li> <li> <p>True Explanation: A lambda function is a small, anonymous function that can have any number of arguments but only one expression.</p> </li> <li> <p>A. lambda x, y: x + y Explanation: This is the correct syntax for defining a lambda function that adds two numbers.</p> </li> <li> <p>A. map() Explanation: The <code>map()</code> function applies a given function to every item in an iterable (like a list).</p> </li> <li> <p>B. To create a new list with elements that meet a specific condition Explanation: <code>filter()</code> creates a new list with elements that satisfy a certain condition.</p> </li> <li> <p>True Explanation: A function can have parameters and also return a value.</p> </li> <li> <p>A. greet(\"Alice\") Explanation: This is the correct syntax for calling a function named <code>greet</code>.</p> </li> <li> <p>A. return Explanation: The <code>return</code> keyword is used to return a value from a function.</p> </li> <li> <p>False Explanation: Functions in Python do not have to return a value; they can return <code>None</code> by default.</p> </li> <li> <p>A. Hello! Explanation: The <code>say_hello()</code> function prints \"Hello!\" when called.</p> </li> <li> <p>B. parameter Explanation: Functions can be passed as arguments to other functions using parameters.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-5-object-oriented-programming-oop","title":"Chapter 5: Object-Oriented Programming (OOP)","text":"<ol> <li> <p>A. class Explanation: A class is a blueprint for creating objects in Python.</p> </li> <li> <p>B. An instance of a class Explanation: An object in Python is an instance of a class.</p> </li> <li> <p>True Explanation: Inheritance allows one class to inherit methods and attributes from another class.</p> </li> <li> <p>A. To initialize the object\u2019s attributes Explanation: The <code>__init__()</code> method is used to initialize an object's attributes when the object is created.</p> </li> <li> <p>B. data, actions Explanation: Attributes are the data of an object, and methods are the actions it can perform.</p> </li> <li> <p>True Explanation: Multiple objects can be created from a single class, each with its own attributes and methods.</p> </li> <li> <p>B. Defines a class called Dog Explanation: The code defines a class named <code>Dog</code> with an <code>__init__()</code> method to initialize the <code>name</code> attribute.</p> </li> <li> <p>B. parentheses Explanation: To create an object from a class, use the class name followed by parentheses.</p> </li> <li> <p>False Explanation: You can define methods inside a class to perform various actions.</p> </li> <li> <p>A. Whiskers Explanation: The <code>print(cat1.name)</code> statement outputs the <code>name</code> attribute of the <code>cat1</code> object, which is \"Whiskers\".</p> </li> <li> <p>B. super Explanation: The <code>super</code> keyword is used to inherit methods and attributes from a parent class.</p> </li> <li> <p>True Explanation: Objects in Python can have both attributes and methods.</p> </li> <li> <p>A. Beep Beep! Explanation: The <code>honk()</code> method returns \"Beep Beep!\" when called on the <code>my_car</code> object.</p> </li> <li> <p>A. init() Explanation: The <code>__init__()</code> method is called automatically when an object is created from a class.</p> </li> <li> <p>True Explanation: The same method name can be defined in different classes in Python.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-6-python-in-the-real-world","title":"Chapter 6: Python in the Real World","text":"<ol> <li> <p>B. Pandas Explanation: Pandas is a powerful library for data manipulation and analysis in Python, often used for working with data in DataFrames.</p> </li> <li> <p>True Explanation: Matplotlib is a plotting library used for creating visualizations such as graphs and charts.</p> </li> <li> <p>B. Selenium Explanation: Selenium is a library used for automating web browsing tasks, such as interacting with web elements.</p> </li> <li> <p>A. A spreadsheet or table Explanation: A Pandas <code>DataFrame</code> is a 2-dimensional labeled data structure similar to a spreadsheet or table.</p> </li> <li> <p>False Explanation: Selenium is used for automating web browsing, not for data visualization.</p> </li> <li> <p>A. Scikit-learn Explanation: Scikit-learn is a library used for building and training machine learning models in Python.</p> </li> <li> <p>C. To make predictions based on data Explanation: <code>DecisionTreeClassifier</code> in Scikit-learn is used for classification tasks, which involves making predictions based on input data.</p> </li> <li> <p>True Explanation: The <code>smtplib</code> library in Python is used for sending emails.</p> </li> <li> <p>B. Matplotlib Explanation: Matplotlib is a library used for creating a variety of plots and charts, including bar charts and pie charts.</p> </li> <li> <p>A. A line chart Explanation: The code snippet uses <code>matplotlib</code> to plot and display a line chart with the given data points.</p> </li> <li> <p>True Explanation: Pandas provides methods to handle missing data, such as filling in gaps or dropping missing values.</p> </li> <li> <p>A. sendmail() Explanation: <code>smtplib</code> provides the functionality to send emails, typically using the <code>sendmail()</code> method.</p> </li> <li> <p>B. import pandas as pd Explanation: The common convention for importing Pandas is <code>import pandas as pd</code>.</p> </li> <li> <p>True Explanation: Python is widely used for creating machine learning models that can predict outcomes based on data.</p> </li> <li> <p>B. Selenium Explanation: Selenium is a library used for automating web browsers, useful for tasks like logging into websites.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-7-final-project-practice","title":"Chapter 7: Final Project (Practice)","text":"<ol> <li> <p>B. function Explanation: A function is a reusable piece of code designed to perform a specific task.</p> </li> <li> <p>True Explanation: A Python project can indeed combine various functions, classes, and data structures to address a problem.</p> </li> <li> <p>A. Personal assistant Explanation: A personal assistant is a feasible first project idea for Python, providing practical experience with basic programming concepts.</p> </li> <li> <p>B. smtplib Explanation: To send emails automatically in Python, you use the <code>smtplib</code> library.</p> </li> <li> <p>True Explanation: Python is versatile enough to create simple games like Tic-Tac-Toe.</p> </li> <li> <p>A. Write functions to handle repetitive tasks Explanation: Writing functions for repetitive tasks is a good starting point for organizing and managing code in a Python project.</p> </li> <li> <p>A. expense Explanation: An application that tracks spending is typically called an expense tracker.</p> </li> <li> <p>True Explanation: Python can be used to fetch and display weather data, among other things.</p> </li> <li> <p>A. Fetch weather data from an API Explanation: In a weather app, you can use Python to fetch data from a weather API.</p> </li> <li> <p>B. quiz app Explanation: A quiz app is a Python project that could involve creating questions and handling user responses.</p> </li> <li> <p>False Explanation: Python projects can be run in various environments, not just from the command line.</p> </li> <li> <p>A. Hello, Alice Explanation: The code defines a function <code>greet()</code> that returns a greeting message, which is then printed.</p> </li> <li> <p>C. reminder Explanation: A project that sends emails to remind you of upcoming events is often called a reminder project.</p> </li> <li> <p>True Explanation: Python can be used to read from and write to files, which is useful for many projects.</p> </li> <li> <p>A. list Explanation: A list is a suitable data structure for storing the 3x3 game board in a Tic-Tac-Toe game.</p> </li> </ol>"},{"location":"chapters/chapter09-ans/#chapter-8-exploring-cutting-edge-technologies","title":"Chapter 8: Exploring Cutting-Edge Technologies","text":"<ol> <li> <p>A. Large sets of complex data Explanation: Big Data refers to large and complex datasets that require advanced tools to process and analyze.</p> </li> <li> <p>B. Edge Explanation: Edge computing processes data closer to the source, such as on local devices.</p> </li> <li> <p>True Explanation: Cloud computing involves storing and accessing data and applications on remote servers via the internet.</p> </li> <li> <p>B. Artificial Intelligence Explanation: AI stands for Artificial Intelligence, which involves creating systems that can perform tasks requiring human-like intelligence.</p> </li> <li> <p>A. text Explanation: GPT (Generative Pre-trained Transformer) is designed to understand and generate human-like text.</p> </li> <li> <p>True Explanation: DALL\u00b7E is an AI model capable of generating images based on text descriptions.</p> </li> <li> <p>A. Processing data faster by bringing it closer to the source Explanation: Edge computing improves processing speed by handling data closer to where it is generated.</p> </li> <li> <p>B. communicate Explanation: Networking allows devices to communicate with each other and share data.</p> </li> <li> <p>True Explanation: Big Data is used to analyze and derive insights from vast amounts of information.</p> </li> <li> <p>B. Uploading photos to Google Drive Explanation: Uploading photos to Google Drive is an example of cloud computing, where data is stored remotely.</p> </li> <li> <p>B. repetitive Explanation: Automation refers to performing repetitive tasks without human intervention.</p> </li> <li> <p>False Explanation: Edge computing is designed to be faster for processing data because it occurs closer to the data source, not farther away.</p> </li> <li> <p>A. Netflix Explanation: Netflix uses Big Data to analyze user behavior and recommend content.</p> </li> <li> <p>A. GPT Explanation: GPT is an AI model used for generating human-like text for various applications.</p> </li> <li> <p>True Explanation: Networking involves connecting computers and devices to exchange information.</p> </li> </ol>"},{"location":"chapters/chapter09/","title":"Chapter 9: Question Bank","text":""},{"location":"chapters/chapter09/#chapter-1-introduction-to-python","title":"Chapter 1: Introduction to Python","text":"<ol> <li> <p>Fill in the blank: Python was created by ______ in 1991.     A. Guido van Rossum     B. Elon Musk     C. Bill Gates  </p> </li> <li> <p>Multiple Choice: What does the <code>print()</code> function do in Python?     A. Prints a file     B. Displays text or variables on the screen     C. Deletes a variable  </p> </li> <li> <p>True/False: Python is known for its simple syntax that is easy to read.     A. True     B. False  </p> </li> <li> <p>Multiple Choice: Which of the following is a correct way to start a Python program?     A. <code>PRINT \"Hello, World!\"</code>     B. <code>print(\"Hello, World!\")</code>     C. <code>Print(Hello World!)</code> </p> </li> <li> <p>Fill in the blank: The ______ function allows you to take input from a user.     A. input()     B. output()     C. ask()  </p> </li> <li> <p>True/False: Python can run directly in a web browser using platforms like Google Colab.     A. True     B. False  </p> </li> <li> <p>Multiple Choice: What type of data does <code>True</code> and <code>False</code> represent in Python?     A. Integers     B. Booleans     C. Strings  </p> </li> <li> <p>Multiple Choice: What symbol is used to add comments in Python code?     A. //     B. #     C. !  </p> </li> <li> <p>Fill in the blank: The command to install Python on your computer is <code>__________ install python</code>.     A. pip     B. run     C. start  </p> </li> <li> <p>Multiple Choice: Which of the following is not a valid Python variable name?     A. my_var     B. my-var     C. myVar  </p> </li> <li> <p>True/False: Python programs can be run on any platform, including Windows, Mac, and Linux.     True     False  </p> </li> <li> <p>Fill in the blank: A Python file usually ends with the extension <code>__________</code>.     A. .txt     B. .doc     C. .py  </p> </li> <li> <p>Multiple Choice: What is the output of this Python code: <code>print(3 + 5)</code>?     A. 35     B. 8     C. Error  </p> </li> <li> <p>True/False: Python is case-sensitive, meaning <code>Print</code> and <code>print</code> are considered different.     True     False  </p> </li> <li> <p>Multiple Choice: What command can be used to display the Python version?     A. <code>python --version</code>     B. <code>python -V</code>     C. Both A and B  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-2-data-structures","title":"Chapter 2: Data Structures","text":"<ol> <li> <p>Fill in the blank: A __ is a list of items that can be changed, while a ____ cannot be changed.     A. Tuple, List     B. List, Tuple     C. Dictionary, Set  </p> </li> <li> <p>True/False: A dictionary stores data in key-value pairs.     True     False  </p> </li> <li> <p>Multiple Choice: Which of the following represents a Python list?     A. <code>['apple', 'banana', 'cherry']</code>     B. <code>(1, 2, 3)</code>     C. <code>{'key': 'value'}</code> </p> </li> <li> <p>Fill in the blank: A ______ is a data structure that ensures no duplicates.     A. List     B. Tuple     C. Set  </p> </li> <li> <p>True/False: Lists in Python are ordered collections of items.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of <code>my_list = [1, 2, 3]; print(my_list[0])</code>?     A. 1     B. 2     C. 3  </p> </li> <li> <p>Fill in the blank: The function <code>____________</code> is used to add an item to the end of a list.     A. insert()     B. append()     C. add()  </p> </li> <li> <p>Multiple Choice: How do you create an empty dictionary in Python?     A. <code>{}</code>     B. <code>[]</code>     C. <code>()</code> </p> </li> <li> <p>True/False: A tuple allows you to change its items after it is created.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of <code>my_set = {1, 2, 2, 3}; print(my_set)</code>?     A. <code>{1, 2, 3}</code>     B. <code>{1, 2, 2, 3}</code>     C. <code>[1, 2, 3]</code> </p> </li> <li> <p>True/False: A set allows duplicate values.     True     False  </p> </li> <li> <p>Fill in the blank: To remove a key-value pair from a dictionary, you can use the <code>__________</code> method.     A. delete()     B. remove()     C. pop()  </p> </li> <li> <p>Multiple Choice: What is the result of this code: <code>my_tuple = (1, 2, 3); print(len(my_tuple))</code>?     A. 1     B. 3     C. Error  </p> </li> <li> <p>True/False: A Python list can hold items of different data types (e.g., strings, numbers, etc.).     True     False  </p> </li> <li> <p>Multiple Choice: Which data structure is best for storing a group of student names where you don\u2019t want any duplicates?     A. List     B. Set     C. Tuple  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-3-conditions-control-flow","title":"Chapter 3: Conditions &amp; Control Flow","text":"<ol> <li> <p>Multiple Choice: Which of the following keywords is used to create a condition in Python?     A. if     B. do     C. check  </p> </li> <li> <p>True/False: The <code>elif</code> statement allows you to check multiple conditions after an <code>if</code> statement.     True     False  </p> </li> <li> <p>Fill in the blank: The keyword <code>__________</code> is used to check if two values are equal.     A. ==     B. =     C. !=  </p> </li> <li> <p>Multiple Choice: What is the output of this code: <code>x = 5; if x &gt; 3: print(\"Yes\") else: print(\"No\")</code>?     A. Yes     B. No     C. Error  </p> </li> <li> <p>True/False: An <code>else</code> block is optional after an <code>if</code> statement.     True     False  </p> </li> <li> <p>Multiple Choice: What keyword is used to start a <code>while</code> loop?     A. for     B. while     C. loop  </p> </li> <li> <p>Fill in the blank: A <code>____________</code> loop runs a block of code a specific number of times.     A. while     B. for     C. repeat  </p> </li> <li> <p>Multiple Choice: What does this code do? <pre><code>for i in range(3):\n    print(i)\n</code></pre>     A. Prints 0, 1, 2     B. Prints 1, 2, 3     C. Prints 0, 1, 2, 3  </p> </li> <li> <p>True/False: The <code>break</code> keyword is used to exit a loop early.     True     False  </p> </li> <li> <p>Fill in the blank: The <code>__________</code> keyword is used to skip the current iteration of a loop and move to the next one.     A. stop     B. continue     C. break  </p> </li> <li> <p>Multiple Choice: What is the correct syntax for an <code>if-else</code> statement?     A. <code>if x == 5 else:</code>     B. <code>if x == 5: else:</code>     C. <code>if x == 5: print(x) else: print(\"not 5\")</code> </p> </li> <li> <p>True/False: You can have multiple <code>if</code> statements without using <code>elif</code>.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code: <pre><code>x = 10\nif x &gt; 5 and x &lt; 15:\n    print(\"In range\")\nelse:\n    print(\"Out of range\")\n</code></pre>     A. In range     B. Out of range     C. Error  </p> </li> <li> <p>Fill in the blank: The <code>__________</code> function is commonly used to create a range of numbers in loops.     A. length()     B. range()     C. loop()  </p> </li> <li> <p>True/False: You can nest one <code>if</code> statement inside another <code>if</code> statement.     True     False  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-4-functions-functional-programming","title":"Chapter 4: Functions &amp; Functional Programming","text":"<ol> <li> <p>Multiple Choice: What keyword is used to define a function in Python?     A. function     B. define     C. def  </p> </li> <li> <p>Fill in the blank: A function starts with the <code>__________</code> keyword followed by the function name.     A. def     B. func     C. start  </p> </li> <li> <p>True/False: A function can return more than one value in Python.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>def add(x, y):\n    return x + y\n\nprint(add(3, 4))\n</code></pre>     A. 7     B. 12     C. Error  </p> </li> <li> <p>Fill in the blank: Functions can accept inputs called <code>____________</code> that influence how they behave.     A. returns     B. arguments     C. loops  </p> </li> <li> <p>True/False: A lambda function is a small anonymous function that can take any number of arguments but has only one expression.     True     False  </p> </li> <li> <p>Multiple Choice: What is the correct way to define a lambda function to add two numbers?     A. <code>lambda x, y: x + y</code>     B. <code>lambda add x y</code>     C. <code>lambda: x + y</code> </p> </li> <li> <p>Fill in the blank: The <code>__________</code> function can apply a function to every item in a list.     A. map()     B. list()     C. for_each()  </p> </li> <li> <p>Multiple Choice: What is the purpose of <code>filter()</code> in Python?     A. To create a new list with all elements modified     B. To create a new list with elements that meet a specific condition     C. To count elements in a list  </p> </li> <li> <p>True/False: A function in Python can have both parameters and return a value.     True     False  </p> </li> <li> <p>Multiple Choice: What is the correct syntax for calling a function named <code>greet</code>?     A. <code>greet(\"Alice\")</code>     B. <code>call greet(\"Alice\")</code>     C. <code>def greet(\"Alice\")</code> </p> </li> <li> <p>Fill in the blank: To return a value from a function, use the <code>__________</code> keyword.     A. return     B. output     C. end  </p> </li> <li> <p>True/False: A function must always return a value in Python.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>def say_hello():\n    print(\"Hello!\")\n\nsay_hello()\n</code></pre>     A. Hello!     B. Error     C. say_hello  </p> </li> <li> <p>Fill in the blank: You can pass a function as an argument to another function using a ______.     A. return     B. parameter     C. lambda  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-5-object-oriented-programming-oop","title":"Chapter 5: Object-Oriented Programming (OOP)","text":"<ol> <li> <p>Fill in the blank: A ______ is a blueprint for creating objects in Python.     A. class     B. object     C. method  </p> </li> <li> <p>Multiple Choice: What is an object in Python?     A. A type of data     B. An instance of a class     C. A method  </p> </li> <li> <p>True/False: Inheritance allows one class to inherit methods and attributes from another class.     True     False  </p> </li> <li> <p>Multiple Choice: What is the purpose of the <code>__init__()</code> method in a class?     A. To initialize the object\u2019s attributes     B. To destroy an object     C. To call a function  </p> </li> <li> <p>Fill in the blank: Attributes are the __ of an object, and methods are the ____ it can perform.     A. actions, data     B. data, actions     C. returns, parameters  </p> </li> <li> <p>True/False: You can define multiple objects from a single class.     True     False  </p> </li> <li> <p>Multiple Choice: What does this code do? <pre><code>class Dog:\n    def __init__(self, name):\n        self.name = name\n</code></pre>     A. Creates a dog object     B. Defines a class called Dog     C. Runs a function  </p> </li> <li> <p>Fill in the blank: To create an object from a class, you use the class name followed by ______.     A. brackets     B. parentheses     C. colons  </p> </li> <li> <p>True/False: You cannot define a method inside a class.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>class Cat:\n    def __init__(self, name):\n        self.name = name\n\ncat1 = Cat(\"Whiskers\")\nprint(cat1.name)\n</code></pre>     A. Whiskers     B. Cat     C. Error  </p> </li> <li> <p>Fill in the blank: The keyword <code>__________</code> is used to inherit methods and attributes from another class.     A. inherit     B. super     C. extend  </p> </li> <li> <p>True/False: An object can have both attributes and methods in Python.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>class Car:\n    def __init__(self, model):\n        self.model = model\n    def honk(self):\n        return \"Beep Beep!\"\n\nmy_car = Car(\"Tesla\")\nprint(my_car.honk())\n</code></pre>     A. Beep Beep!     B. Tesla     C. Error  </p> </li> <li> <p>Fill in the blank: The special method <code>__________</code> is called automatically when an object is created.     A. init()     B. create()     C. init()  </p> </li> <li> <p>True/False: The same method name can be defined in different classes in Python.     True     False  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-6-python-in-the-real-world","title":"Chapter 6: Python in the Real World","text":"<ol> <li> <p>Multiple Choice: Which library is commonly used for data analysis in Python?     A. NumPy     B. Pandas     C. Matplotlib  </p> </li> <li> <p>True/False: The <code>Matplotlib</code> library is used to create visualizations like graphs and charts.     True     False  </p> </li> <li> <p>Fill in the blank: The <code>__________</code> library is used for automating web browsing tasks in Python.     A. smtplib     B. Selenium     C. Pandas  </p> </li> <li> <p>Multiple Choice: What can Pandas\u2019 <code>DataFrame</code> be compared to?     A. A spreadsheet or table     B. A dictionary     C. A function  </p> </li> <li> <p>True/False: Selenium is used for data visualization.     True     False  </p> </li> <li> <p>Fill in the blank: The <code>__________</code> library is commonly used in Python for building machine learning models.     A. Scikit-learn     B. Matplotlib     C. Pandas  </p> </li> <li> <p>Multiple Choice: What is the purpose of a <code>DecisionTreeClassifier</code> in Scikit-learn?     A. To create visual charts     B. To automate web browsing     C. To make predictions based on data  </p> </li> <li> <p>True/False: You can send emails in Python using the <code>smtplib</code> library.     True     False  </p> </li> <li> <p>Fill in the blank: The Python library <code>__________</code> is used for creating graphs like bar charts and pie charts.     A. Pandas     B. Matplotlib     C. Scikit-learn  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>import matplotlib.pyplot as plt\n\nplt.plot([1, 2, 3], [4, 5, 6])\nplt.show()\n</code></pre>     A. A line chart     B. A bar chart     C. An error  </p> </li> <li> <p>True/False: Pandas can handle missing data by filling in gaps automatically.     True     False  </p> </li> <li> <p>Fill in the blank: The command <code>__________</code> can be used to send emails in Python.     A. sendmail()     B. postmail()     C. mail()  </p> </li> <li> <p>Multiple Choice: What is the correct way to import the Pandas library?     A. <code>import pandas as p</code>     B. <code>import pandas as pd</code>     C. <code>import pd as pandas</code> </p> </li> <li> <p>True/False: Python can be used to create machine learning models that predict outcomes.     True     False  </p> </li> <li> <p>Fill in the blank: The Python library <code>__________</code> is used to automate the browser for tasks like logging into websites.     A. smtplib     B. Selenium     C. Matplotlib  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-7-final-project-practice","title":"Chapter 7: Final Project (Practice)","text":"<ol> <li> <p>Fill in the blank: A ______ program is a small, reusable piece of code that performs a specific task.     A. class     B. function     C. variable  </p> </li> <li> <p>True/False: A project in Python can combine multiple functions, classes, and data structures to solve a problem.     True     False  </p> </li> <li> <p>Multiple Choice: Which of the following is a good first project idea in Python?     A. Personal assistant     B. Web browser     C. File system  </p> </li> <li> <p>Fill in the blank: To send emails automatically using Python, you can use the <code>__________</code> library.     A. Selenium     B. smtplib     C. Matplotlib  </p> </li> <li> <p>True/False: Python can be used to create small games like Tic-Tac-Toe.     True     False  </p> </li> <li> <p>Multiple Choice: What is a good starting point for any Python project?     A. Write functions to handle repetitive tasks     B. Create many variables     C. Start by using machine learning  </p> </li> <li> <p>Fill in the blank: A project that stores expenses and calculates total spending is called an ______ tracker.     A. expense     B. data     C. automation  </p> </li> <li> <p>True/False: You can use Python to fetch weather data and display it to the user.     True     False  </p> </li> <li> <p>Multiple Choice: What can you use Python for in a weather app project?     A. Fetch weather data from an API     B. Predict future weather     C. Display videos of the weather  </p> </li> <li> <p>Fill in the blank: A ______ is a Python project idea that can help quiz students using questions and answers.     A. test system     B. quiz app     C. calculator  </p> </li> <li> <p>True/False: Python projects should always be run from the command line.     True     False  </p> </li> <li> <p>Multiple Choice: What is the output of this code? <pre><code>def greet(name):\n    return \"Hello, \" + name\n\nprint(greet(\"Alice\"))\n</code></pre>     A. Hello, Alice     B. Error     C. Alice  </p> </li> <li> <p>Fill in the blank: A ______ project could remind you of upcoming events by sending an email.     A. calendar     B. weather     C. reminder  </p> </li> <li> <p>True/False: Python projects can include reading and writing data from files.     True     False  </p> </li> <li> <p>Fill in the blank: A Tic-Tac-Toe game in Python could use a ______ to store the 3x3 game board.     A. list     B. tuple     C. string  </p> </li> </ol>"},{"location":"chapters/chapter09/#chapter-8-exploring-cutting-edge-technologies","title":"Chapter 8: Exploring Cutting-Edge Technologies","text":"<ol> <li> <p>Multiple Choice: What is Big Data?     A. Large sets of complex data     B. A small dataset     C. Cloud storage  </p> </li> <li> <p>Fill in the blank: ______ computing is when data is processed closer to the source, such as on devices like phones or smart cars.     A. Cloud     B. Edge     C. Local  </p> </li> <li> <p>True/False: Cloud computing stores data and applications on remote servers that you can access over the internet.     True     False  </p> </li> <li> <p>Multiple Choice: What does AI stand for?     A. Automated Information     B. Artificial Intelligence     C. Autonomous Input  </p> </li> <li> <p>Fill in the blank: GPT is a type of AI model that is designed to understand and generate ______.     A. text     B. images     C. sound</p> </li> <li> <p>True/False: DALL\u00b7E is an AI model that can generate images from text descriptions.     True     False  </p> </li> <li> <p>Multiple Choice: What does edge computing help with?     A. Processing data faster by bringing it closer to the source     B. Storing more data on remote servers     C. Uploading data directly to social media  </p> </li> <li> <p>Fill in the blank: Networking allows devices to ______ with each other and share data.     A. compete     B. communicate     C. fight  </p> </li> <li> <p>True/False: Big Data is used to analyze and gain insights from huge amounts of information, such as social media data or online shopping patterns.     True     False  </p> </li> <li> <p>Multiple Choice: Which of the following is an example of cloud computing?     A. Saving files to your local hard drive     B. Uploading photos to Google Drive     C. Printing documents from a home printer  </p> </li> <li> <p>Fill in the blank: Automation allows machines and software to perform ______ tasks without human help.     A. creative     B. repetitive     C. impossible  </p> </li> <li> <p>True/False: Edge computing is slower than cloud computing because it processes data far away.     True     False  </p> </li> <li> <p>Multiple Choice: Which of these companies is known for using Big Data to recommend content to users?     A. Netflix     B. McDonald's     C. Facebook  </p> </li> <li> <p>Fill in the blank: The AI model ______ generates human-like text and can be used for tasks like answering questions or writing essays.     A. GPT     B. DALL\u00b7E     C. Google  </p> </li> <li> <p>True/False: Networking is the process of connecting computers and devices to exchange information.     True     False  </p> </li> </ol> <p>These questions should challenge students to think critically about the material in a fun and interactive way! Let me know if you'd like to make any adjustments or add more.</p>"},{"location":"chapters/chapter10/","title":"Chapter 10: Fun Projects","text":"<p>In this chapter, we\u2019re diving into cool, hands-on projects that you can build with Python! Whether you\u2019re into math, games, data analysis, or web development, there\u2019s something for everyone. These projects range from small calculators to more complex applications like a school management system, all designed to be easy to grasp and fun to create.</p>"},{"location":"chapters/chapter10/#1-mathematical-calculator-project","title":"1. Mathematical Calculator Project","text":"<p>Let\u2019s start simple with a calculator that can perform basic operations like addition, subtraction, multiplication, and division. This is a great way to practice using functions and control flow in Python.</p>"},{"location":"chapters/chapter10/#code-example-basic-calculator","title":"Code Example: Basic Calculator","text":"<pre><code>def add(x, y):\n    return x + y\n\ndef subtract(x, y):\n    return x - y\n\ndef multiply(x, y):\n    return x * y\n\ndef divide(x, y):\n    if y == 0:\n        return \"Error! Division by zero.\"\n    return x / y\n\n# Menu for the calculator\ndef calculator():\n    print(\"Welcome to the Python Calculator!\")\n    print(\"Choose operation:\")\n    print(\"1. Add\")\n    print(\"2. Subtract\")\n    print(\"3. Multiply\")\n    print(\"4. Divide\")\n\n    choice = input(\"Enter choice (1/2/3/4): \")\n\n    num1 = float(input(\"Enter first number: \"))\n    num2 = float(input(\"Enter second number: \"))\n\n    if choice == '1':\n        print(f\"Result: {num1} + {num2} = {add(num1, num2)}\")\n    elif choice == '2':\n        print(f\"Result: {num1} - {num2} = {subtract(num1, num2)}\")\n    elif choice == '3':\n        print(f\"Result: {num1} * {num2} = {multiply(num1, num2)}\")\n    elif choice == '4':\n        print(f\"Result: {num1} / {num2} = {divide(num1, num2)}\")\n    else:\n        print(\"Invalid input\")\n\ncalculator()\n</code></pre>"},{"location":"chapters/chapter10/#explanation","title":"Explanation:","text":"<ul> <li>This calculator lets you choose from four operations and input two numbers.</li> <li>Each operation is handled by its own function, and division handles the special case of dividing by zero.</li> </ul>"},{"location":"chapters/chapter10/#2-number-guessing-game","title":"2. Number Guessing Game","text":"<p>Create a fun number guessing game where the computer picks a random number, and the player has to guess it. The program gives feedback if the guess is too high or too low.</p>"},{"location":"chapters/chapter10/#code-example-number-guessing-game","title":"Code Example: Number Guessing Game","text":"<pre><code>import random\n\ndef guessing_game():\n    secret_number = random.randint(1, 100)\n    attempts = 0\n    print(\"I'm thinking of a number between 1 and 100.\")\n\n    while True:\n        guess = int(input(\"Enter your guess: \"))\n        attempts += 1\n\n        if guess &lt; secret_number:\n            print(\"Too low!\")\n        elif guess &gt; secret_number:\n            print(\"Too high!\")\n        else:\n            print(f\"Congratulations! You've guessed it in {attempts} attempts!\")\n            break\n\nguessing_game()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_1","title":"Explanation:","text":"<ul> <li>The computer picks a random number between 1 and 100 using the <code>random</code> module.</li> <li>The player guesses until they find the correct number, and the program provides hints.</li> </ul>"},{"location":"chapters/chapter10/#3-rock-paper-scissors-game","title":"3. Rock, Paper, Scissors Game","text":"<p>Let\u2019s build a simple game of Rock, Paper, Scissors where the player competes against the computer.</p>"},{"location":"chapters/chapter10/#code-example-rock-paper-scissors","title":"Code Example: Rock, Paper, Scissors","text":"<pre><code>import random\n\ndef rock_paper_scissors():\n    choices = [\"rock\", \"paper\", \"scissors\"]\n    computer_choice = random.choice(choices)\n    player_choice = input(\"Choose rock, paper, or scissors: \").lower()\n\n    if player_choice not in choices:\n        print(\"Invalid choice!\")\n    else:\n        print(f\"Computer chose {computer_choice}\")\n        if player_choice == computer_choice:\n            print(\"It's a tie!\")\n        elif (player_choice == \"rock\" and computer_choice == \"scissors\") or \\\n             (player_choice == \"paper\" and computer_choice == \"rock\") or \\\n             (player_choice == \"scissors\" and computer_choice == \"paper\"):\n            print(\"You win!\")\n        else:\n            print(\"You lose!\")\n\nrock_paper_scissors()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_2","title":"Explanation:","text":"<ul> <li>The computer randomly picks rock, paper, or scissors.</li> <li>The player chooses their move, and the program checks who wins based on the rules of the game.</li> </ul>"},{"location":"chapters/chapter10/#4-simple-snake-game-with-pygame","title":"4. Simple Snake Game with Pygame","text":"<p>Let\u2019s create a simple Snake Game using the Pygame library. In this game, the player controls the snake and tries to eat food while avoiding the walls and the snake\u2019s own body.</p>"},{"location":"chapters/chapter10/#code-example-snake-game","title":"Code Example: Snake Game","text":"<pre><code>import pygame\nimport time\nimport random\n\npygame.init()\n\n# Screen settings\nscreen_width = 600\nscreen_height = 400\nscreen = pygame.display.set_mode((screen_width, screen_height))\n\n# Colors\nblack = (0, 0, 0)\nwhite = (255, 255, 255)\nred = (255, 0, 0)\ngreen = (0, 255, 0)\n\n# Snake settings\nsnake_block = 10\nsnake_speed = 15\n\nclock = pygame.time.Clock()\n\ndef our_snake(snake_block, snake_list):\n    for x in snake_list:\n        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])\n\ndef game_loop():\n    game_over = False\n    game_close = False\n\n    x1 = screen_width / 2\n    y1 = screen_height / 2\n\n    x1_change = 0\n    y1_change = 0\n\n    snake_list = []\n    length_of_snake = 1\n\n    foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0\n    foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0\n\n    while not game_over:\n\n        while game_close:\n            screen.fill(black)\n            font_style = pygame.font.SysFont(None, 50)\n            message = font_style.render(\"You Lost! Press Q-Quit or C-Play Again\", True, red)\n            screen.blit(message, [screen_width / 6, screen_height / 3])\n            pygame.display.update()\n\n            for event in pygame.event.get():\n                if event.type == pygame.KEYDOWN:\n                    if event.key == pygame.K_q:\n                        game_over = True\n                        game_close = False\n                    if event.key == pygame.K_c:\n                        game_loop()\n\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                game_over = True\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_LEFT:\n                    x1_change = -snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_RIGHT:\n                    x1_change = snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_UP:\n                    y1_change = -snake_block\n                    x1_change = 0\n                elif event.key == pygame.K_DOWN:\n                    y1_change = snake_block\n                    x1_change = 0\n\n        if x1 &gt;= screen_width or x1 &lt; 0 or y1 &gt;= screen_height or y1 &lt; 0:\n            game_close = True\n        x1 += x1_change\n        y1 += y1_change\n        screen.fill(black)\n\n        pygame.draw.rect(screen, white, [foodx, foody, snake_block, snake_block])\n\n        snake_head = []\n        snake_head.append(x1)\n        snake_head.append(y1)\n        snake_list.append(snake_head)\n        if len(snake_list) &gt; length_of_snake:\n            del snake_list[0]\n\n        for x in snake_list[:-1]:\n            if x == snake_head:\n                game_close = True\n\n        our_snake(snake_block, snake_list)\n\n        if x1 == foodx and y1 == foody:\n            foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0\n            foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0\n            length_of_snake += 1\n\n        pygame.display.update()\n\n        clock.tick(snake_speed)\n\n    pygame.quit()\n    quit()\n\ngame_loop()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_3","title":"Explanation:","text":"<ul> <li>The Pygame library is used to create the window, draw the snake, and control the game.</li> <li>The player moves the snake with the arrow keys, trying to eat the food without hitting the walls or itself.</li> </ul>"},{"location":"chapters/chapter10/#5-data-analysis-project-using-pandas-and-matplotlib","title":"5. Data Analysis Project Using Pandas and Matplotlib","text":"<p>Let\u2019s analyze some student scores and visualize the data using Pandas and Matplotlib.</p>"},{"location":"chapters/chapter10/#code-example-data-analysis-of-student-scores","title":"Code Example: Data Analysis of Student Scores","text":"<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\n\n# Create a DataFrame of student scores\ndata = {\n    \"Student\": [\"Alice\", \"Bob\", \"Charlie\", \"David\"],\n    \"Math\": [85, 92, 78, 90],\n    \"Science\": [88, 95, 80, 85],\n    \"English\": [75, 89, 95, 70]\n}\ndf = pd.DataFrame(data)\n\n# Calculate the average score for each\n\n student\ndf[\"Average\"] = df[[\"Math\", \"Science\", \"English\"]].mean(axis=1)\n\n# Print the DataFrame\nprint(df)\n\n# Plot the average scores\nplt.bar(df[\"Student\"], df[\"Average\"])\nplt.title(\"Average Scores of Students\")\nplt.xlabel(\"Student\")\nplt.ylabel(\"Average Score\")\nplt.show()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_4","title":"Explanation:","text":"<ul> <li>Pandas is used to store the data in a DataFrame and calculate average scores.</li> <li>Matplotlib is used to create a bar chart showing the average scores of each student.</li> </ul>"},{"location":"chapters/chapter10/#6-tic-tac-toe-game","title":"6. Tic-Tac-Toe Game","text":"<p>Create a Tic-Tac-Toe game where two players take turns marking the board until someone wins or the game ends in a draw.</p>"},{"location":"chapters/chapter10/#code-example-tic-tac-toe-game","title":"Code Example: Tic-Tac-Toe Game","text":"<pre><code>def print_board(board):\n    for row in board:\n        print(\"|\".join(row))\n        print(\"-\" * 5)\n\ndef check_winner(board):\n    # Check rows, columns, and diagonals\n    for row in board:\n        if row[0] == row[1] == row[2] != \" \":\n            return True\n    for col in range(3):\n        if board[0][col] == board[1][col] == board[2][col] != \" \":\n            return True\n    if board[0][0] == board[1][1] == board[2][2] != \" \" or board[0][2] == board[1][1] == board[2][0] != \" \":\n        return True\n    return False\n\ndef tic_tac_toe():\n    board = [[\" \" for _ in range(3)] for _ in range(3)]\n    current_player = \"X\"\n\n    for _ in range(9):\n        print_board(board)\n        row = int(input(f\"Player {current_player}, enter row (0-2): \"))\n        col = int(input(f\"Player {current_player}, enter column (0-2): \"))\n\n        if board[row][col] == \" \":\n            board[row][col] = current_player\n            if check_winner(board):\n                print_board(board)\n                print(f\"Player {current_player} wins!\")\n                return\n            current_player = \"O\" if current_player == \"X\" else \"X\"\n        else:\n            print(\"Invalid move! Try again.\")\n\n    print(\"It's a tie!\")\n\ntic_tac_toe()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_5","title":"Explanation:","text":"<ul> <li>This game allows two players to take turns choosing a position on the grid.</li> <li>The <code>check_winner</code> function determines if one of the players has won by completing a row, column, or diagonal.</li> </ul>"},{"location":"chapters/chapter10/#7-currency-converter","title":"7. Currency Converter","text":"<p>Build a currency converter that converts between different currencies using a fixed conversion rate.</p>"},{"location":"chapters/chapter10/#code-example-currency-converter","title":"Code Example: Currency Converter","text":"<pre><code>def currency_converter(amount, from_currency, to_currency):\n    conversion_rates = {\n        \"USD\": 1.0,\n        \"EUR\": 0.85,\n        \"JPY\": 110.5,\n        \"GBP\": 0.75\n    }\n\n    if from_currency not in conversion_rates or to_currency not in conversion_rates:\n        return \"Invalid currency code!\"\n\n    converted_amount = amount * conversion_rates[to_currency] / conversion_rates[from_currency]\n    return round(converted_amount, 2)\n\namount = float(input(\"Enter amount: \"))\nfrom_currency = input(\"From currency (USD, EUR, JPY, GBP): \").upper()\nto_currency = input(\"To currency (USD, EUR, JPY, GBP): \").upper()\n\nresult = currency_converter(amount, from_currency, to_currency)\nprint(f\"{amount} {from_currency} is equal to {result} {to_currency}\")\n</code></pre>"},{"location":"chapters/chapter10/#explanation_6","title":"Explanation:","text":"<ul> <li>This program uses a dictionary to store conversion rates and calculates the converted amount based on user input.</li> </ul>"},{"location":"chapters/chapter10/#8-school-management-system-flask-web-app","title":"8. School Management System (Flask Web App)","text":"<p>Let\u2019s build a simple school management system that allows you to manage students, classes, and grades. This project uses Flask, a lightweight web framework.</p>"},{"location":"chapters/chapter10/#code-example-simple-flask-based-school-management-system","title":"Code Example: Simple Flask-Based School Management System","text":"<pre><code>from flask import Flask, render_template, request\n\napp = Flask(__name__)\n\nstudents = []\n\n@app.route('/')\ndef home():\n    return render_template('index.html', students=students)\n\n@app.route('/add_student', methods=['POST'])\ndef add_student():\n    name = request.form['name']\n    grade = request.form['grade']\n    students.append({\"name\": name, \"grade\": grade})\n    return home()\n\n@app.route('/delete_student/&lt;name&gt;')\ndef delete_student(name):\n    global students\n    students = [s for s in students if s[\"name\"] != name]\n    return home()\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"chapters/chapter10/#explanation_7","title":"Explanation:","text":"<ul> <li>This Flask application allows you to add students and their grades, display the list of students, and delete students from the list.</li> <li>HTML templates can be used to create the front-end (UI) for this project.</li> </ul>"},{"location":"chapters/chapter10/#9-weather-app-using-api","title":"9. Weather App (Using API)","text":"<p>Create a Weather App that fetches the current weather for a city using the OpenWeatherMap API.</p>"},{"location":"chapters/chapter10/#code-example-weather-app","title":"Code Example: Weather App","text":"<pre><code>import requests\n\ndef get_weather(city):\n    api_key = \"your_openweathermap_api_key\"\n    base_url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={api_key}&amp;units=metric\"\n    response = requests.get(base_url)\n    data = response.json()\n\n    if data[\"cod\"] != \"404\":\n        main = data[\"main\"]\n        weather_desc = data[\"weather\"][0][\"description\"]\n        temp = main[\"temp\"]\n        humidity = main[\"humidity\"]\n        print(f\"City: {city}\\nTemperature: {temp}\u00b0C\\nWeather: {weather_desc}\\nHumidity: {humidity}%\")\n    else:\n        print(\"City not found!\")\n\ncity = input(\"Enter city name: \")\nget_weather(city)\n</code></pre>"},{"location":"chapters/chapter10/#explanation_8","title":"Explanation:","text":"<ul> <li>This project fetches weather data from the OpenWeatherMap API and displays the temperature, weather description, and humidity for the given city.</li> </ul>"},{"location":"chapters/chapter10/#10-quiz-application","title":"10. Quiz Application","text":"<p>Build a quiz application that asks multiple-choice questions and keeps track of the player\u2019s score.</p>"},{"location":"chapters/chapter10/#code-example-quiz-app","title":"Code Example: Quiz App","text":"<pre><code>def run_quiz():\n    questions = {\n        \"What is the capital of France?\": {\"options\": [\"A) Paris\", \"B) Rome\", \"C) Madrid\"], \"answer\": \"A\"},\n        \"What is 2 + 2?\": {\"options\": [\"A) 3\", \"B) 4\", \"C) 5\"], \"answer\": \"B\"},\n        \"Who wrote '1984'?\": {\"options\": [\"A) George Orwell\", \"B) J.K. Rowling\", \"C) Charles Dickens\"], \"answer\": \"A\"}\n    }\n\n    score = 0\n    for question, data in questions.items():\n        print(question)\n        for option in data[\"options\"]:\n            print(option)\n        answer = input(\"Your answer: \").upper()\n\n        if answer == data[\"answer\"]:\n            print(\"Correct!\\n\")\n            score += 1\n        else:\n            print(f\"Wrong! The correct answer was {data['answer']}\\n\")\n\n    print(f\"You got {score}/{len(questions)} correct!\")\n\nrun_quiz()\n</code></pre>"},{"location":"chapters/chapter10/#explanation_9","title":"Explanation:","text":"<ul> <li>This project creates a simple quiz with multiple-choice questions and checks if the player\u2019s answer is correct.</li> </ul>"},{"location":"chapters/chapter10/#advanced-projects","title":"Advanced Projects","text":""},{"location":"chapters/chapter10/#project-11-school-management-system-flask-based-web-app","title":"Project 11: School Management System (Flask-Based Web App)","text":"<p>This project will simulate a school management system where you can manage students, their classes, and grades. We'll split it into multiple Python files and also include templates for rendering web pages.</p>"},{"location":"chapters/chapter10/#project-structure","title":"Project Structure:","text":"<pre><code>school_management/\n\u2502\n\u251c\u2500\u2500 app.py  (Main Flask application)\n\u251c\u2500\u2500 models.py  (Data structure to manage students, classes, and grades)\n\u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 index.html  (Home page template)\n\u2502   \u251c\u2500\u2500 add_student.html  (Form to add new students)\n\u2502   \u2514\u2500\u2500 student_detail.html  (Student detail view with grades)\n\u2514\u2500\u2500 static/\n    \u2514\u2500\u2500 style.css  (Optional: CSS for styling)\n</code></pre>"},{"location":"chapters/chapter10/#file-1-modelspy-student-and-class-data-structure","title":"File 1: <code>models.py</code> (Student and Class Data Structure)","text":"<pre><code># models.py\nstudents = []\n\nclass Student:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n        self.grades = {}\n\n    def add_grade(self, subject, grade):\n        self.grades[subject] = grade\n\n    def get_average_grade(self):\n        if self.grades:\n            return sum(self.grades.values()) / len(self.grades)\n        return 0\n</code></pre>"},{"location":"chapters/chapter10/#explanation_10","title":"Explanation:","text":"<ul> <li>This file contains the <code>Student</code> class, which manages student data, including their name, age, and grades.</li> <li>It has methods to add grades and calculate the student\u2019s average grade.</li> </ul>"},{"location":"chapters/chapter10/#file-2-apppy-main-flask-application","title":"File 2: <code>app.py</code> (Main Flask Application)","text":"<pre><code># app.py\nfrom flask import Flask, render_template, request, redirect, url_for\nfrom models import students, Student\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return render_template('index.html', students=students)\n\n@app.route('/add_student', methods=['GET', 'POST'])\ndef add_student():\n    if request.method == 'POST':\n        name = request.form['name']\n        age = request.form['age']\n        new_student = Student(name, age)\n        students.append(new_student)\n        return redirect(url_for('home'))\n    return render_template('add_student.html')\n\n@app.route('/student/&lt;name&gt;')\ndef student_detail(name):\n    for student in students:\n        if student.name == name:\n            return render_template('student_detail.html', student=student)\n    return \"Student not found\", 404\n\n@app.route('/student/&lt;name&gt;/add_grade', methods=['POST'])\ndef add_grade(name):\n    subject = request.form['subject']\n    grade = int(request.form['grade'])\n    for student in students:\n        if student.name == name:\n            student.add_grade(subject, grade)\n            return redirect(url_for('student_detail', name=name))\n    return \"Student not found\", 404\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"chapters/chapter10/#explanation_11","title":"Explanation:","text":"<ul> <li>This is the main Flask application. It manages routing, displaying students, and adding new students and grades.</li> <li>The <code>add_student</code> route allows for adding new students via a form.</li> <li>The <code>student_detail</code> route shows detailed information about a specific student.</li> <li>The <code>add_grade</code> route is a POST request that allows the addition of grades to a student.</li> </ul>"},{"location":"chapters/chapter10/#file-3-indexhtml-home-page-template","title":"File 3: <code>index.html</code> (Home Page Template)","text":"<pre><code>&lt;!-- templates/index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;School Management System&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;School Management System&lt;/h1&gt;\n    &lt;h2&gt;Student List&lt;/h2&gt;\n    &lt;ul&gt;\n        {% for student in students %}\n            &lt;li&gt;&lt;a href=\"{{ url_for('student_detail', name=student.name) }}\"&gt;{{ student.name }}&lt;/a&gt; (Age: {{ student.age }})&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n    &lt;a href=\"{{ url_for('add_student') }}\"&gt;Add New Student&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_12","title":"Explanation:","text":"<ul> <li>This is the homepage that displays a list of students. Each student\u2019s name links to their detailed view.</li> <li>There\u2019s also a link to add a new student.</li> </ul>"},{"location":"chapters/chapter10/#file-4-add_studenthtml-form-to-add-students","title":"File 4: <code>add_student.html</code> (Form to Add Students)","text":"<pre><code>&lt;!-- templates/add_student.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Add New Student&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Add New Student&lt;/h1&gt;\n    &lt;form method=\"POST\"&gt;\n        &lt;label for=\"name\"&gt;Name:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;label for=\"age\"&gt;Age:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"age\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"Add Student\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_13","title":"Explanation:","text":"<ul> <li>This page provides a simple form to add a new student by entering their name and age.</li> </ul>"},{"location":"chapters/chapter10/#file-5-student_detailhtml-student-detail-with-grades","title":"File 5: <code>student_detail.html</code> (Student Detail with Grades)","text":"<pre><code>&lt;!-- templates/student_detail.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Student Details&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Details for {{ student.name }}&lt;/h1&gt;\n    &lt;p&gt;Age: {{ student.age }}&lt;/p&gt;\n    &lt;h3&gt;Grades:&lt;/h3&gt;\n    &lt;ul&gt;\n        {% for subject, grade in student.grades.items() %}\n            &lt;li&gt;{{ subject }}: {{ grade }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n    &lt;p&gt;Average Grade: {{ student.get_average_grade() }}&lt;/p&gt;\n\n    &lt;h3&gt;Add Grade&lt;/h3&gt;\n    &lt;form method=\"POST\" action=\"{{ url_for('add_grade', name=student.name) }}\"&gt;\n        &lt;label for=\"subject\"&gt;Subject:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"subject\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;label for=\"grade\"&gt;Grade:&lt;/label&gt;\n        &lt;input type=\"number\" name=\"grade\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"Add Grade\"&gt;\n    &lt;/form&gt;\n\n    &lt;a href=\"{{ url_for('home') }}\"&gt;Back to Home&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_14","title":"Explanation:","text":"<ul> <li>This page shows detailed information about a student, including their grades.</li> <li>There\u2019s also a form to add new grades for a specific student.</li> </ul>"},{"location":"chapters/chapter10/#file-6-stylecss-optional-css-for-styling","title":"File 6: <code>style.css</code> (Optional CSS for Styling)","text":"<pre><code>/* static/style.css */\nbody {\n    font-family: Arial, sans-serif;\n}\n\nh1 {\n    color: #333;\n}\n\nul {\n    list-style-type: none;\n}\n\na {\n    text-decoration: none;\n    color: blue;\n}\n</code></pre>"},{"location":"chapters/chapter10/#explanation_15","title":"Explanation:","text":"<ul> <li>You can optionally include some CSS to make the web app look nicer.</li> </ul>"},{"location":"chapters/chapter10/#how-to-run-the-project","title":"How to Run the Project:","text":"<ol> <li>Install Flask by running <code>pip install flask</code>.</li> <li>Create the project structure and files.</li> <li>Run the application by executing <code>python app.py</code>.</li> <li>Open your browser and go to <code>http://127.0.0.1:5000/</code>.</li> </ol>"},{"location":"chapters/chapter10/#project-12-advanced-quiz-application","title":"Project 12: Advanced Quiz Application","text":"<p>This project is a Quiz Game where the user answers multiple-choice questions. It tracks their score and provides feedback after the quiz.</p>"},{"location":"chapters/chapter10/#project-structure_1","title":"Project Structure:","text":"<pre><code>quiz_app/\n\u2502\n\u251c\u2500\u2500 app.py  (Main Quiz Application)\n\u251c\u2500\u2500 questions.py  (Questions data)\n\u2514\u2500\u2500 templates/\n    \u251c\u2500\u2500 index.html  (Start screen)\n    \u251c\u2500\u2500 quiz.html  (Quiz screen)\n    \u2514\u2500\u2500 result.html  (Result screen)\n</code></pre>"},{"location":"chapters/chapter10/#file-1-questionspy-questions-data","title":"File 1: <code>questions.py</code> (Questions Data)","text":"<pre><code># questions.py\nquestions = [\n    {\n        \"question\": \"What is the capital of France?\",\n        \"options\": [\"A) Paris\", \"B) London\", \"C) Berlin\"],\n        \"answer\": \"A\"\n    },\n    {\n        \"question\": \"Who wrote '1984'?\",\n        \"options\": [\"A) George Orwell\", \"B) Mark Twain\", \"C) J.K. Rowling\"],\n        \"answer\": \"A\"\n    },\n    {\n        \"question\": \"What is 2 + 2?\",\n        \"options\": [\"A) 3\", \"B) 4\", \"C) 5\"],\n        \"answer\": \"B\"\n    }\n]\n</code></pre>"},{"location":"chapters/chapter10/#explanation_16","title":"Explanation:","text":"<ul> <li>This file contains a list of dictionaries, where each dictionary represents a quiz question with its options and the correct answer.</li> </ul>"},{"location":"chapters/chapter10/#file-2-apppy-main-quiz-application","title":"File 2: <code>app.py</code> (Main Quiz Application)","text":"<pre><code># app.py\nfrom flask import Flask, render_template, request, redirect, url_for, session\nfrom questions import questions\n\napp = Flask(__name__)\napp.secret_key = \"quiz_secret_key\"\n\n@app.route('/')\ndef index():\n    session['score'] = 0  # Reset score\n    session['question_number'] = 0  # Start with the first question\n    return render_template('index.html')\n\n@app.route('/quiz', methods=['GET', 'POST'])\ndef quiz():\n    if request.method == 'POST':\n        selected_option = request.form.get('option')\n        correct_answer = questions[session['question_number']][\"answer\"]\n\n        if selected_option == correct_answer:\n            session['score'] += 1\n\n        session['question_number'] += 1\n\n        if session['question_number'] &gt;= len(questions):\n\n\n return redirect(url_for('result'))\n\n    question = questions[session['question_number']]\n    return render_template('quiz.html', question=question)\n\n@app.route('/result')\ndef result():\n    score = session.get('score', 0)\n    total_questions = len(questions)\n    return render_template('result.html', score=score, total_questions=total_questions)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"chapters/chapter10/#explanation_17","title":"Explanation:","text":"<ul> <li>The quiz starts by showing the first question.</li> <li>The player\u2019s score is stored in the session, and each answer is checked against the correct answer.</li> <li>Once all questions are answered, the user is redirected to the result page, where they can see their score.</li> </ul>"},{"location":"chapters/chapter10/#file-3-indexhtml-start-screen","title":"File 3: <code>index.html</code> (Start Screen)","text":"<pre><code>&lt;!-- templates/index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Quiz Game&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Welcome to the Quiz Game!&lt;/h1&gt;\n    &lt;p&gt;Test your knowledge with some fun questions!&lt;/p&gt;\n    &lt;a href=\"{{ url_for('quiz') }}\"&gt;Start Quiz&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_18","title":"Explanation:","text":"<ul> <li>This is the home page where the user can start the quiz by clicking the Start Quiz button.</li> </ul>"},{"location":"chapters/chapter10/#file-4-quizhtml-quiz-screen","title":"File 4: <code>quiz.html</code> (Quiz Screen)","text":"<pre><code>&lt;!-- templates/quiz.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Quiz Game&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;{{ question['question'] }}&lt;/h1&gt;\n    &lt;form method=\"POST\"&gt;\n        {% for option in question['options'] %}\n            &lt;label&gt;\n                &lt;input type=\"radio\" name=\"option\" value=\"{{ option[0] }}\" required&gt;\n                {{ option }}\n            &lt;/label&gt;&lt;br&gt;&lt;br&gt;\n        {% endfor %}\n        &lt;input type=\"submit\" value=\"Submit\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_19","title":"Explanation:","text":"<ul> <li>This page dynamically displays each question and its multiple-choice options.</li> <li>The player selects their answer and submits it.</li> </ul>"},{"location":"chapters/chapter10/#file-5-resulthtml-result-screen","title":"File 5: <code>result.html</code> (Result Screen)","text":"<pre><code>&lt;!-- templates/result.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Quiz Result&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Quiz Result&lt;/h1&gt;\n    &lt;p&gt;You scored {{ score }} out of {{ total_questions }}!&lt;/p&gt;\n    &lt;a href=\"{{ url_for('index') }}\"&gt;Play Again&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"chapters/chapter10/#explanation_20","title":"Explanation:","text":"<ul> <li>This page displays the final score after all questions have been answered and offers an option to restart the quiz.</li> </ul>"},{"location":"chapters/chapter10/#how-to-run-the-project_1","title":"How to Run the Project:","text":"<ol> <li>Install Flask by running <code>pip install flask</code>.</li> <li>Create the project structure and files.</li> <li>Run the application by executing <code>python app.py</code>.</li> <li>Open your browser and go to <code>http://127.0.0.1:5000/</code>.</li> </ol> <p>These projects provide an opportunity to build more complex systems while keeping the concepts easy to understand and fun to implement. Let me know if you need further adjustments or additions!</p>"},{"location":"chapters/chapter10/#final-thoughts","title":"Final Thoughts:","text":"<p>These 10 projects provide a mix of games, applications, and data analysis tools that are fun, engaging, and educational. Each project builds on the skills students have learned and adds a creative element to make learning Python exciting!</p>"},{"location":"chapters/contents/","title":"Python for High Schoolers: From Zero to Fun Projects!","text":""},{"location":"chapters/contents/#contents","title":"Contents","text":""},{"location":"chapters/contents/#chapter-1-introduction-to-python","title":"Chapter 1: Introduction to Python","text":"<ul> <li>What is Python?</li> <li>History and Origin</li> <li>Who Invented Python? (Guido van Rossum)</li> <li>Why Python? Fun facts about Python!</li> <li>Setting Up Python</li> <li>Installing Python (Windows, Mac, Linux)</li> <li>Using Python with Google Colab (No installation required!)</li> <li>Using Python IDEs (PyCharm, VS Code, Jupyter Notebook)</li> <li>Your First Python Program</li> <li>Writing a simple program that says \"Hello, World!\"</li> </ul> <p>Fun Example: Write a Python program to greet the user with their name!</p> <ul> <li>Project: Make a simple calculator!</li> </ul>"},{"location":"chapters/contents/#chapter-2-data-structures","title":"Chapter 2: Data Structures","text":"<ul> <li>What are Data Structures?</li> <li>Variables and Data Types (Numbers, Strings, Booleans)</li> <li>Lists (A list of your favorite things!)</li> <li>Tuples (What if things don't change?)</li> <li>Dictionaries (How to store related data)</li> <li>Sets (Making unique collections)</li> </ul> <p>Fun Example: Store the names of your friends and their favorite snacks using dictionaries.</p> <ul> <li>Project: Build a contact book using lists and dictionaries.</li> </ul>"},{"location":"chapters/contents/#chapter-3-conditions-and-control-flow","title":"Chapter 3: Conditions and Control Flow","text":"<ul> <li>Making Decisions with Conditions</li> <li>If, Else, Elif (Choosing your path in a Python program)</li> </ul> <p>Fun Example: Write a program that helps decide what to wear based on the weather!</p> <ul> <li>Loops</li> <li>For Loops (Iterating over things)</li> <li>While Loops (Loop until something happens)</li> </ul> <p>Fun Example: Write a loop that counts down from 10 like a rocket launch countdown!</p> <ul> <li>Project: Create a simple game that asks the user a number guessing game using conditions and loops.</li> </ul>"},{"location":"chapters/contents/#chapter-4-functions-and-functional-programming","title":"Chapter 4: Functions and Functional Programming","text":"<ul> <li>What are Functions?</li> <li>Why use Functions? (Reuse and organize your code)</li> <li>Writing your own Functions (The basics)</li> <li>Parameters and Return Values (How functions can interact)</li> </ul> <p>Fun Example: Write a function that calculates the area of different shapes.</p> <ul> <li>Functional Programming in Python</li> <li>Lambda Functions (Mini-functions on the go)</li> <li> <p>Map, Filter, and Reduce (Functional tools for big data)</p> </li> <li> <p>Project: Create a to-do list app using functions to add, remove, and display tasks.</p> </li> </ul>"},{"location":"chapters/contents/#chapter-5-object-oriented-programming-oop","title":"Chapter 5: Object-Oriented Programming (OOP)","text":"<ul> <li>What is OOP?</li> <li>Understanding Classes and Objects (Real-life objects as code)</li> <li>Methods and Attributes (Things an object can do)</li> <li>Inheritance (How one object can get features from another)</li> </ul> <p>Fun Example: Model a real-world example, like cars or pets, using OOP.</p> <ul> <li>Project: Create a simple banking system using OOP (customers, accounts, deposits).</li> </ul>"},{"location":"chapters/contents/#chapter-6-python-in-the-real-world","title":"Chapter 6: Python in the Real World","text":"<ul> <li>Python for Data Science</li> <li>Using Pandas and Matplotlib (Visualizing your school grades or personal data)</li> </ul> <p>Fun Example: Plot your favorite sports team's performance over time.</p> <ul> <li>Python for Web Automation</li> <li>Using Selenium (Making Python browse the web for you)</li> </ul> <p>Fun Example: Write a Python script to search for trending topics online.</p> <ul> <li>Python for Artificial Intelligence (AI)</li> <li>Introduction to AI with Python</li> <li> <p>Using libraries like TensorFlow (AI in action)</p> </li> <li> <p>Project: Write a Python program that automates sending emails or messages for you!</p> </li> </ul>"},{"location":"chapters/contents/#chapter-7-wrapping-up-and-final-project","title":"Chapter 7: Wrapping Up and Final Project","text":"<ul> <li>Review of Key Concepts</li> <li>Final Project Ideas:</li> <li>Build a personal assistant program.</li> <li>Create a basic game using what you've learned.</li> </ul>"},{"location":"chapters/contents/#reference-section","title":"Reference Section","text":"<ul> <li>Python Documentation: https://docs.python.org/3/</li> <li>W3Schools Python: https://www.w3schools.com/python/</li> <li>Real Python: https://realpython.com/</li> </ul>"},{"location":"hi/","title":"\u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u092a\u093e\u092f\u0925\u0928 \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948","text":"<p>\u092f\u0939\u093e\u0901 \u0906\u092a \u092a\u093e\u092f\u0925\u0928 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u092c \u0915\u0941\u091b \u0924\u094d\u0935\u0930\u093f\u0924 \u0914\u0930 \u091b\u094b\u091f\u0947-\u091b\u094b\u091f\u0947 \u092a\u093e\u0920\u094b\u0902 \u092e\u0947\u0902 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0938\u0940\u0916\u0947\u0902\u0917\u0947 https://deepsai8.github.io/high-school-python/\u0964</p>"},{"location":"hi/#_2","title":"\u0932\u093f\u0902\u0915","text":""},{"location":"hi/#_3","title":"\u0939\u092e \u091a\u0940\u091c\u094b\u0902 \u0915\u094b \u091c\u093f\u0924\u0928\u093e \u0938\u0902\u092d\u0935 \u0939\u094b \u0909\u0924\u0928\u093e \u0938\u0939\u091c \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930\u0947\u0902\u0917\u0947!","text":""},{"location":"hi/chapters/chapter01/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 1: Python \u0915\u093e \u092a\u0930\u093f\u091a\u092f","text":""},{"location":"hi/chapters/chapter01/#python","title":"Python \u0915\u094d\u092f\u093e \u0939\u0948?","text":""},{"location":"hi/chapters/chapter01/#_1","title":"\u0907\u0924\u093f\u0939\u093e\u0938 \u0914\u0930 \u0909\u0924\u094d\u092a\u0924\u094d\u0924\u093f","text":"<p>Python \u090f\u0915 \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092d\u093e\u0937\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 Guido van Rossum \u0928\u0947 \u092c\u0928\u093e\u092f\u093e \u0914\u0930 \u0907\u0938\u0947 1991 \u092e\u0947\u0902 \u0930\u093f\u0932\u0940\u091c\u093c \u0915\u093f\u092f\u093e \u0917\u092f\u093e\u0964 \u0932\u0947\u0915\u093f\u0928 \u092f\u0939\u093e\u0902 \u090f\u0915 \u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f \u0939\u0948\u2014Python \u0915\u093e \u0928\u093e\u092e Monty Python\u2019s Flying Circus \u0928\u093e\u092e\u0915 \u090f\u0915 \u0915\u0949\u092e\u0947\u0921\u0940 \u0936\u094b \u0938\u0947 \u0932\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u091c\u093f\u0938\u0947 Guido \u092c\u0939\u0941\u0924 \u092a\u0938\u0902\u0926 \u0915\u0930\u0924\u0947 \u0925\u0947\u0964 \u0924\u094b, Python \u0938\u093f\u0930\u094d\u092b \u0917\u0902\u092d\u0940\u0930 \u0915\u093e\u092e \u0915\u0947 \u0932\u093f\u090f \u0928\u0939\u0940\u0902 \u0939\u0948\u2014\u092f\u0939 \u0936\u0941\u0930\u0941\u0906\u0924 \u0938\u0947 \u0939\u0940 \u092e\u091c\u0947\u0926\u093e\u0930 \u0939\u0948!</p>"},{"location":"hi/chapters/chapter01/#python_1","title":"\u0915\u094d\u092f\u094b\u0902 Python?","text":"<p>Python \u0915\u094b \u0906\u0938\u093e\u0928 \u092a\u0922\u093c\u0928\u0947 \u0914\u0930 \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u092f\u0939 \u0932\u0917\u092d\u0917 \u0907\u0902\u0917\u094d\u0932\u093f\u0936 \u0932\u093f\u0916\u0928\u0947 \u091c\u0948\u0938\u093e \u0939\u0948! \u092f\u0939\u0940 \u0915\u093e\u0930\u0923 \u0939\u0948 \u0915\u093f \u0907\u0938\u0947 \u0938\u094d\u0915\u0942\u0932\u094b\u0902, \u0935\u093f\u0936\u094d\u0935\u0935\u093f\u0926\u094d\u092f\u093e\u0932\u092f\u094b\u0902 \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f Google \u0914\u0930 NASA \u091c\u0948\u0938\u0940 \u0915\u0902\u092a\u0928\u093f\u092f\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u092d\u0940 \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0906\u092a Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0917\u0947\u092e \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u092f\u093e \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0930\u094b\u092c\u094b\u091f \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter01/#python_2","title":"Python \u0938\u0947\u091f\u0905\u092a \u0915\u0930\u0928\u093e","text":"<p>\u0906\u0917\u0947 \u092c\u0922\u093c\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947, \u0906\u0907\u090f \u0906\u092a\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u0930 Python \u0915\u094b \u091a\u0932\u093e\u090f\u0902\u0964 \u0907\u0938\u0947 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0915\u0941\u091b \u0924\u0930\u0940\u0915\u0947 \u0939\u0948\u0902:</p>"},{"location":"hi/chapters/chapter01/#python_3","title":"Python \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0928\u093e","text":"<p>\u0906\u092a \u0906\u0927\u093f\u0915\u093e\u0930\u093f\u0915 Python \u0935\u0947\u092c\u0938\u093e\u0907\u091f \u0938\u0947 Python \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0914\u0930 \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u090f\u0915 \u092c\u093e\u0930 \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0939\u094b \u091c\u093e\u0928\u0947 \u092a\u0930, \u0906\u092a \u0905\u092a\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u0930 Python \u0915\u094b\u0921 \u0932\u093f\u0916 \u0914\u0930 \u091a\u0932\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter01/#google-colab","title":"Google Colab \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (\u0915\u094b\u0908 \u0907\u0902\u0938\u094d\u091f\u0949\u0932\u0947\u0936\u0928 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0928\u0939\u0940\u0902!)","text":"<p>\u0905\u0917\u0930 \u0906\u092a \u0915\u0941\u091b \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b Google Colab \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964 \u092f\u0939 \u0906\u092a\u0915\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u090f\u0915 Python \u092a\u094d\u0932\u0947\u0917\u094d\u0930\u093e\u0909\u0902\u0921 \u091c\u0948\u0938\u093e \u0939\u0948! \u092f\u0939 \u091c\u0932\u094d\u0926\u0940 \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u093e \u090f\u0915 \u0936\u093e\u0928\u0926\u093e\u0930 \u0924\u0930\u0940\u0915\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter01/#python-ides-integrated-development-environments","title":"Python IDEs (Integrated Development Environments)","text":"<ul> <li>VS Code: \u090f\u0915 \u0939\u0932\u094d\u0915\u093e \u090f\u0921\u093f\u091f\u0930 \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0908 \u092b\u093c\u0940\u091a\u0930\u094d\u0938 \u0939\u0948\u0902\u0964</li> <li>PyCharm: \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 Python \u0915\u0947 \u0932\u093f\u090f \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u090f\u0915 \u092a\u093e\u0935\u0930\u092b\u0941\u0932 IDE\u0964</li> <li>Jupyter Notebook: Python \u0915\u094b \u090f\u0915\u094d\u0938\u092a\u094d\u0932\u0947\u0928\u0947\u0936\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0932\u093f\u0916\u0928\u0947 \u0915\u093e \u090f\u0915 \u092c\u0947\u0939\u0924\u0930\u0940\u0928 \u091f\u0942\u0932 (\u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0921\u0947\u091f\u093e \u0938\u093e\u0907\u0902\u0938 \u0915\u0947 \u0932\u093f\u090f)\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#python_4","title":"\u0906\u092a\u0915\u093e \u092a\u0939\u0932\u093e Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e","text":"<p>\u0906\u0907\u090f \u0906\u092a\u0915\u093e \u092a\u0939\u0932\u093e Python \u0915\u094b\u0921 \u0932\u093f\u0916\u0947\u0902! \u0907\u0938\u0947 \u0915\u094d\u0932\u093e\u0938\u093f\u0915 \u0930\u0916\u0947\u0902 \u0914\u0930 \u090f\u0915 \u0938\u0930\u0932 \"Hello, World!\" \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0938\u0947 \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0930\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter01/#hello-world","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \"Hello, World!\"","text":"<pre><code># \u092f\u0939 \u090f\u0915 comment \u0939\u0948! Python \u0907\u0938\u0947 \u0907\u0917\u094d\u0928\u094b\u0930 \u0915\u0930\u0947\u0917\u093e\nprint(\"Hello, World!\")\n</code></pre>"},{"location":"hi/chapters/chapter01/#_2","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>print()</code> \u090f\u0915 function \u0939\u0948 \u091c\u094b Python \u0915\u094b \u0915\u0941\u091b \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u092a\u0930 \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0939\u0924\u093e \u0939\u0948\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, \u092f\u0939 \u201cHello, World!\u201d \u0926\u093f\u0916\u093e\u090f\u0917\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter01/#_3","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0915\u0930\u0947\u0902","text":"<p>\u091a\u0932\u094b \u0907\u0938\u0947 \u0914\u0930 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902! \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0909\u0938\u0915\u093e \u0928\u093e\u092e \u092a\u0942\u091b\u0947 \u0914\u0930 \u0909\u0938\u0947 \u0938\u094d\u0935\u093e\u0917\u0924 \u0915\u0930\u0947\u0964 \u0907\u0938\u0947 \u0906\u091c\u093c\u092e\u093e\u090f\u0902:</p> <pre><code>name = input(\"\u0906\u092a\u0915\u093e \u0928\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948? \")  # \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0932\u0947\u0924\u093e \u0939\u0948\nprint(\"Hello, \" + name + \"! Python \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948!\")  # \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter01/#_4","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li><code>input()</code> \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u0915\u0941\u091b \u091f\u093e\u0907\u092a \u0915\u0930\u0928\u0947 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li><code>+</code> \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0915\u094b \u090f\u0915 \u0938\u093e\u0925 \u091c\u094b\u0921\u093c\u0928\u0947 (concatenate) \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> </ul> <p>\u0905\u092c, \u091c\u092c \u0906\u092a \u0907\u0938\u0947 \u091a\u0932\u093e\u090f\u0902\u0917\u0947, \u0924\u094b \u092f\u0939 \u0906\u092a\u0915\u093e \u0928\u093e\u092e \u092a\u0942\u091b\u0947\u0917\u093e \u0914\u0930 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0930\u0942\u092a \u0938\u0947 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0915\u0930\u0947\u0917\u093e\u0964 \u092e\u091c\u0947\u0926\u093e\u0930 \u0939\u0948, \u0939\u0948 \u0928\u093e?</p>"},{"location":"hi/chapters/chapter01/#_5","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u092c\u0928\u093e\u090f\u0902","text":"<p>\u0905\u092c \u0924\u0915 \u0906\u092a\u0928\u0947 \u091c\u094b \u0938\u0940\u0916\u093e \u0939\u0948 \u0909\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902\u2014\u090f\u0915 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930! \u092f\u0939 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0926\u094b \u0928\u0902\u092c\u0930 \u0914\u0930 \u090f\u0915 \u0911\u092a\u0930\u0947\u0936\u0928 (\u091c\u0948\u0938\u0947 +, -, *, /) \u092a\u0942\u091b\u0947\u0917\u093e \u0914\u0930 \u092b\u093f\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0926\u0947\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter01/#_6","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u093e\u0927\u093e\u0930\u0923 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930","text":"<pre><code># \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0926\u094b \u0928\u0902\u092c\u0930 \u092a\u0942\u091b\u0947\u0902\nnum1 = float(input(\"\u092a\u0939\u0932\u093e \u0928\u0902\u092c\u0930 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\nnum2 = float(input(\"\u0926\u0942\u0938\u0930\u093e \u0928\u0902\u092c\u0930 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n\n# \u0911\u092a\u0930\u0947\u0936\u0928 \u092a\u0942\u091b\u0947\u0902\noperation = input(\"\u0911\u092a\u0930\u0947\u0936\u0928 \u091a\u0941\u0928\u0947\u0902 (+, -, *, /): \")\n\n# \u0911\u092a\u0930\u0947\u0936\u0928 \u0915\u0930\u0947\u0902\nif operation == '+':\n    result = num1 + num2\nelif operation == '-':\n    result = num1 - num2\nelif operation == '*':\n    result = num1 * num2\nelif operation == '/':\n    result = num1 / num2\nelse:\n    result = \"\u0905\u092e\u093e\u0928\u094d\u092f \u0911\u092a\u0930\u0947\u0936\u0928!\"\n\nprint(\"\u092a\u0930\u093f\u0923\u093e\u092e \u0939\u0948: \" + str(result))\n</code></pre>"},{"location":"hi/chapters/chapter01/#_7","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0939\u092e \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0928\u0902\u092c\u0930 \u0914\u0930 \u0911\u092a\u0930\u0947\u0936\u0928 \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>input()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>If statements \u092f\u0939 \u0924\u092f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u094c\u0928 \u0938\u093e \u0911\u092a\u0930\u0947\u0936\u0928 \u0915\u0930\u0928\u093e \u0939\u0948\u0964</li> <li>\u0939\u092e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902!</li> </ul>"},{"location":"hi/chapters/chapter01/#_8","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0906\u0907\u090f \u0926\u0947\u0916\u0947\u0902 \u0915\u093f \u0906\u092a\u0915\u094b \u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u0938\u0947 \u0915\u094d\u092f\u093e \u092f\u093e\u0926 \u0939\u0948:</p> <ol> <li> <p>Python \u0915\u093e \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u093f\u0938\u0928\u0947 \u0915\u093f\u092f\u093e?     A. \u090f\u0932\u094b\u0928 \u092e\u0938\u094d\u0915     B. Guido van Rossum     C. \u0938\u094d\u091f\u0940\u0935 \u091c\u0949\u092c\u094d\u0938  </p> </li> <li> <p><code>print()</code> \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0915\u093e\u0917\u091c\u093c \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948     B. \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u092a\u0930 \u0915\u0941\u091b \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948     C. \u090f\u0915 \u092b\u093e\u0907\u0932 \u092c\u0928\u093e\u0924\u093e \u0939\u0948  </p> </li> <li> <p><code>input()</code> function \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0932\u0947\u0924\u093e \u0939\u0948     B. \u092a\u0930\u093f\u0923\u093e\u092e \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948     C. \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0936\u0941\u0930\u0942 \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> </ol>"},{"location":"hi/chapters/chapter01/#_9","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>B</li> <li>B</li> <li>A</li> </ol>"},{"location":"hi/chapters/chapter01/#_10","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a \u0914\u0930 \u0905\u0927\u093f\u0915 \u0938\u0940\u0916\u0928\u0947 \u0915\u0947 \u0907\u091a\u094d\u091b\u0941\u0915 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Python Beginner's Guide</p> <p>\u0906\u0917\u0947 \u0939\u092e \u0905\u0927\u094d\u092f\u093e\u092f 2: Data Structures \u092e\u0947\u0902 \u091c\u093e\u090f\u0902\u0917\u0947, \u091c\u0939\u093e\u0902 \u0939\u092e \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0926\u093f\u0932\u091a\u0938\u094d\u092a \u0924\u0930\u0940\u0915\u094b\u0902 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947\u0964 \u0906\u092a\u0915\u094b \u092f\u0939 \u0915\u0948\u0938\u093e \u0932\u0917\u093e?</p>"},{"location":"hi/chapters/chapter02/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 2: Data Structures","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Python \u092e\u0947\u0902 data structures \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u0930\u0928\u093e \u0938\u0940\u0916\u0947\u0902\u0917\u0947\u0964 \u0907\u0938\u0947 \u0910\u0938\u0947 \u0938\u092e\u091d\u0947\u0902 \u091c\u0948\u0938\u0947 \u0906\u092a \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u094b \u0930\u0916\u0928\u0947 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0932\u0917-\u0905\u0932\u0917 \u0921\u093f\u092c\u094d\u092c\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter02/#data-structures","title":"Data Structures \u0915\u094d\u092f\u093e \u0939\u0948\u0902?","text":"<p>Python \u092e\u0947\u0902, \u0939\u092e data structures \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u0920\u093f\u0924 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939\u093e\u0902 \u091a\u093e\u0930 \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u0948\u0902 \u091c\u093f\u0928 \u092a\u0930 \u0939\u092e \u0927\u094d\u092f\u093e\u0928 \u0926\u0947\u0902\u0917\u0947: 1. Variables (\u091c\u0948\u0938\u0947 \u092c\u0915\u094d\u0938\u0947 \u091c\u094b \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0930\u0916\u0924\u0947 \u0939\u0948\u0902) 2. Lists (\u091c\u0948\u0938\u0947 \u090f\u0915 to-do \u0938\u0942\u091a\u0940) 3. Tuples (\u091c\u0948\u0938\u0947 \u090f\u0915 to-do \u0938\u0942\u091a\u0940 \u091c\u094b \u0915\u092d\u0940 \u0928\u0939\u0940\u0902 \u092c\u0926\u0932\u0924\u0940) 4. Dictionaries (\u091c\u0948\u0938\u0947 \u0928\u093e\u092e \u0914\u0930 \u0909\u0928\u0915\u0947 \u092b\u093c\u094b\u0928 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940) 5. Sets (\u090f\u0915 \u0938\u0942\u091a\u0940, \u0932\u0947\u0915\u093f\u0928 \u092c\u093f\u0928\u093e \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f \u0915\u0947)</p>"},{"location":"hi/chapters/chapter02/#variables-data-types","title":"Variables \u0914\u0930 Data Types","text":"<p>\u090f\u0915 variable \u090f\u0915 \u0915\u0902\u091f\u0947\u0928\u0930 \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0939\u092e \u090f\u0915 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0935\u0939 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 number, string (\u091f\u0947\u0915\u094d\u0938\u094d\u091f), \u092f\u093e boolean (True/False) \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#variables","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Variables \u0915\u093e \u0909\u092a\u092f\u094b\u0917","text":"<pre><code>name = \"Alice\"  # String (\u091f\u0947\u0915\u094d\u0938\u094d\u091f)\nage = 16        # Integer (\u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915)\nis_student = True  # Boolean (True/False)\n</code></pre>"},{"location":"hi/chapters/chapter02/#_1","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>name</code> \u090f\u0915 \u091f\u0947\u0915\u094d\u0938\u094d\u091f (\u091c\u093f\u0938\u0947 string \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948) \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>age</code> \u090f\u0915 \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915 (\u091c\u093f\u0938\u0947 integer \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948) \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>is_student</code> \u090f\u0915 true/false \u092e\u093e\u0928 (\u091c\u093f\u0938\u0947 boolean \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948) \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#lists","title":"Lists: \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u093e \u0915\u0932\u0947\u0915\u094d\u0936\u0928 \u0938\u0902\u0917\u0920\u093f\u0924 \u0915\u0930\u0928\u093e","text":"<p>\u090f\u0915 list \u090f\u0915 \u0936\u0949\u092a\u093f\u0902\u0917 \u0938\u0942\u091a\u0940 \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u0940 \u0939\u0948: \u0906\u092a \u0907\u0938\u092e\u0947\u0902 \u0915\u0908 \u091a\u0940\u091c\u093c\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092f\u0939 \u091c\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0939\u0948 \u0915\u093f \u0935\u0947 \u090f\u0915 \u0939\u0940 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0940 \u0939\u094b\u0902\u0964 \u0906\u092a \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0906\u0907\u091f\u092e\u094d\u0938 \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0939\u091f\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u092f\u093e \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0909\u0928\u092e\u0947\u0902 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter02/#_2","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0906\u092a\u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u092d\u094b\u091c\u0928 \u0915\u0940 \u0938\u0942\u091a\u0940","text":"<pre><code>favorite_foods = [\"pizza\", \"burger\", \"ice cream\"]\nprint(favorite_foods[0])  # \u092a\u0939\u0932\u093e \u0906\u0907\u091f\u092e \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948: pizza\n\n# \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u090f\u0915 \u0906\u0907\u091f\u092e \u091c\u094b\u0921\u093c\u0928\u093e\nfavorite_foods.append(\"pasta\")\nprint(favorite_foods)\n</code></pre>"},{"location":"hi/chapters/chapter02/#_3","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>favorite_foods[0]</code> \u0938\u0942\u091a\u0940 \u0915\u0947 \u092a\u0939\u0932\u0947 \u0906\u0907\u091f\u092e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 (Python \u092e\u0947\u0902 \u0917\u093f\u0928\u0924\u0940 0 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948)\u0964</li> <li><code>.append()</code> \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u090f\u0915 \u0928\u092f\u093e \u0906\u0907\u091f\u092e \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#tuples","title":"Tuples: \u0910\u0938\u0940 \u0938\u0942\u091a\u0940 \u091c\u094b \u092c\u0926\u0932\u0940 \u0928\u0939\u0940\u0902 \u091c\u093e \u0938\u0915\u0924\u0940","text":"<p>\u090f\u0915 tuple \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u090f\u0915 \u092c\u093e\u0930 \u0907\u0938\u0947 \u092c\u0928\u093e \u0932\u0947\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926, \u0906\u092a \u0907\u0938\u0947 \u092c\u0926\u0932 \u0928\u0939\u0940\u0902 \u0938\u0915\u0924\u0947\u0964 \u092f\u0939 \u0909\u0928 \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092c\u0947\u0939\u0924\u0930\u0940\u0928 \u0939\u0948 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u092c\u0926\u0932\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0928\u0939\u0940\u0902 \u0939\u0948, \u091c\u0948\u0938\u0947 \u090f\u0915 \u092c\u093f\u0902\u0926\u0941 \u0915\u0947 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u093e\u0902\u0915\u0964</p>"},{"location":"hi/chapters/chapter02/#tuple","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u093e\u0902\u0915 \u0915\u093e \u090f\u0915 tuple","text":"<pre><code>point = (3, 4)  # \u090f\u0915 tuple \u091c\u094b \u090f\u0915 \u0917\u094d\u0930\u093e\u092b\u093c \u092a\u0930 \u090f\u0915 \u092c\u093f\u0902\u0926\u0941 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948\nprint(point[0])  # 3 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter02/#_4","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<ul> <li>\u0906\u092a tuples \u0915\u094b \u090f\u0915 \u092c\u093e\u0930 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0928\u0939\u0940\u0902 \u092c\u0926\u0932 \u0938\u0915\u0924\u0947, \u0907\u0938\u0932\u093f\u090f \u092f\u0939 \u0909\u0928 \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u0940 \u0939\u0948 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#dictionaries-key-value-pairs","title":"Dictionaries: Key-Value Pairs \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u093e","text":"<p>\u090f\u0915 dictionary \u0921\u0947\u091f\u093e \u0915\u094b \u091c\u094b\u0921\u093c\u0947 \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u090f\u0915 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u091c\u0940\u0935\u0928 \u0915\u093e \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u091c\u093f\u0938\u092e\u0947\u0902 \u0936\u092c\u094d\u0926 (keys) \u0914\u0930 \u0909\u0928\u0915\u0947 \u0905\u0930\u094d\u0925 (values) \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940, \u091c\u0948\u0938\u0947 \u0928\u093e\u092e \u0914\u0930 \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u0947\u0939\u0924\u0930\u0940\u0928 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter02/#phone-book","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Phone Book","text":"<pre><code>phone_book = {\n    \"Alice\": \"555-1234\",\n    \"Bob\": \"555-5678\",\n    \"Charlie\": \"555-8765\"\n}\nprint(phone_book[\"Alice\"])  # Alice \u0915\u093e \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter02/#_5","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>\"Alice\"</code> key \u0939\u0948, \u0914\u0930 <code>\"555-1234\"</code> value \u0939\u0948\u0964</li> <li>\u0906\u092a value \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f key \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u090f\u0915 \u0921\u093f\u0915\u094d\u0936\u0928\u0930\u0940 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0936\u092c\u094d\u0926 \u0916\u094b\u091c\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#sets","title":"Sets: \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f\u094d\u0938 \u0915\u0947 \u092c\u093f\u0928\u093e \u0915\u0932\u0947\u0915\u094d\u0936\u0928","text":"<p>\u090f\u0915 set \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f\u094d\u0938 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u092f\u0926\u093f \u0906\u092a \u090f\u0915 \u0939\u0940 \u0906\u0907\u091f\u092e \u0915\u094b \u0926\u094b \u092c\u093e\u0930 \u091c\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u092f\u0939 \u0915\u0947\u0935\u0932 \u090f\u0915 \u0939\u0940 \u0930\u0916\u0947\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter02/#set","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0905\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0930\u0902\u0917\u094b\u0902 \u0915\u093e \u090f\u0915 set","text":"<pre><code>colors = {\"red\", \"blue\", \"green\", \"red\"}  # \"red\" \u0926\u094b \u092c\u093e\u0930 \u092a\u094d\u0930\u0915\u091f \u0939\u094b\u0924\u093e \u0939\u0948\nprint(colors)  # \u0906\u0909\u091f\u092a\u0941\u091f \u0939\u094b\u0917\u093e: {'red', 'blue', 'green'}\n</code></pre>"},{"location":"hi/chapters/chapter02/#_6","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>Sets \u0909\u0928 \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0905\u091a\u094d\u091b\u0947 \u0939\u0948\u0902 \u091c\u092c \u0906\u092a \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0915\u094b\u0908 \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f \u0928 \u0939\u094b\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#_7","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0905\u092a\u0928\u0947 \u0926\u094b\u0938\u094d\u0924\u094b\u0902 \u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0938\u094d\u0928\u0948\u0915\u094d\u0938 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0947\u0902","text":"<p>\u0906\u0907\u090f \u0907\u0928 data structures \u0915\u094b \u092e\u093f\u0932\u093e\u0915\u0930 dictionary \u0914\u0930 list \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0905\u092a\u0928\u0947 \u0926\u094b\u0938\u094d\u0924\u094b\u0902 \u0915\u0947 \u0928\u093e\u092e \u0914\u0930 \u0909\u0928\u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0938\u094d\u0928\u0948\u0915\u094d\u0938 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter02/#friends-snacks","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Friends \u0914\u0930 Snacks","text":"<pre><code>friends_snacks = {\n    \"Alice\": [\"chips\", \"soda\"],\n    \"Bob\": [\"pizza\", \"ice cream\"],\n    \"Charlie\": [\"cookies\", \"juice\"]\n}\n\nprint(friends_snacks[\"Alice\"])  # Alice \u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0938\u094d\u0928\u0948\u0915\u094d\u0938 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter02/#_8","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>\u0939\u092e \u090f\u0915 dictionary \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u0926\u094b\u0938\u094d\u0924\u094b\u0902 \u0915\u0947 \u0928\u093e\u092e \u0915\u094b keys \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0914\u0930 \u0909\u0928\u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0938\u094d\u0928\u0948\u0915\u094d\u0938 \u0915\u094b lists (values) \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#contact-book","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u090f\u0915 Contact Book \u092c\u0928\u093e\u090f\u0902","text":"<p>\u0905\u092c \u0924\u0915 \u0939\u092e\u0928\u0947 \u091c\u094b \u0938\u0940\u0916\u093e \u0939\u0948 \u0909\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 contact book \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0928\u093e\u092e \u0914\u0930 \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0906\u092a \u0907\u0938\u092e\u0947\u0902 contacts \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0939\u091f\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0916\u094b\u091c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter02/#contact-book_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Contact Book","text":"<pre><code>contacts = {}\n\n# Contacts \u091c\u094b\u0921\u093c\u0928\u093e\ncontacts[\"Alice\"] = \"555-1234\"\ncontacts[\"Bob\"] = \"555-5678\"\n\n# \u0915\u093f\u0938\u0940 contact \u0915\u094b \u0916\u094b\u091c\u0947\u0902\nname = input(\"\u0916\u094b\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \")\nif name in contacts:\n    print(name + \" \u0915\u093e \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0939\u0948 \" + contacts[name])\nelse:\n    print(\"Contact \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e\u0964\")\n</code></pre>"},{"location":"hi/chapters/chapter02/#_9","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0939\u092e \u090f\u0915 dictionary \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0928\u093e\u092e \u0914\u0930 \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964</li> <li>\u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0906\u092a\u0915\u094b \u0928\u093e\u092e \u0915\u0947 \u0905\u0928\u0941\u0938\u093e\u0930 contact \u0916\u094b\u091c\u0928\u0947 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter02/#_10","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0907\u0938 \u0915\u094d\u0935\u093f\u091c\u093c \u0938\u0947 \u0905\u092a\u0928\u0947 \u091c\u094d\u091e\u093e\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0947\u0902:</p> <ol> <li> <p>\u0915\u094c\u0928 \u0938\u093e data structure \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f\u094d\u0938 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     A. List     B. Tuple     C. Set  </p> </li> <li> <p>\u0907\u0928\u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e key-value pair data structure \u0939\u0948?     A. List     B. Dictionary     C. Set  </p> </li> <li> <p>Tuple \u0915\u094d\u092f\u093e \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948?     A. \u0907\u0938\u0915\u0947 values \u0915\u094b \u092c\u0926\u0932\u0928\u093e     B. values \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u093e     C. \u0921\u0947\u091f\u093e \u0915\u094b \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u093f\u0924 \u0930\u0916\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/chapter02/#_11","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>A</li> <li>B</li> <li>C</li> </ol>"},{"location":"hi/chapters/chapter02/#_12","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a Python \u0915\u0947 data structures \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Python Lists \u0914\u0930 Tuples</p> <p>\u0905\u0917\u0932\u0947 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e conditions \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0940\u0916\u0947\u0902\u0917\u0947 \u0914\u0930 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094b\u0902 \u092e\u0947\u0902 \u0928\u093f\u0930\u094d\u0923\u092f \u0915\u0948\u0938\u0947 \u0932\u0947\u0902\u0964 \u0915\u0941\u091b \u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923\u094b\u0902 \u0914\u0930 \u090f\u0915 \u0914\u0930 \u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u092f\u093e\u0930 \u0930\u0939\u0947\u0902!</p>"},{"location":"hi/chapters/chapter03/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 3: Conditions \u0914\u0930 Control Flow","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094b\u0902 \u092e\u0947\u0902 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0940\u0916\u0947\u0902\u0917\u0947, \u0914\u0930 \u092f\u0939 \u0938\u092e\u091d\u0947\u0902\u0917\u0947 \u0915\u093f \u0915\u0948\u0938\u0947 conditions \u0914\u0930 control flow \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0907\u0938\u0947 \u0910\u0938\u093e \u0938\u092e\u091d\u0947\u0902 \u091c\u0948\u0938\u0947 \u0906\u092a \u0905\u092a\u0928\u0940 \u0916\u0941\u0926 \u0915\u0940 \u090f\u0921\u0935\u0947\u0902\u091a\u0930 \u0915\u0939\u093e\u0928\u0940 \u091a\u0941\u0928 \u0930\u0939\u0947 \u0939\u0948\u0902\u2014\u0906\u092a\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u093f\u090f \u0917\u090f \u0935\u093f\u0915\u0932\u094d\u092a\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0906\u092a\u0915\u093e \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0905\u0932\u0917-\u0905\u0932\u0917 \u0924\u0930\u0939 \u0938\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u0930\u0947\u0917\u093e!</p>"},{"location":"hi/chapters/chapter03/#conditions","title":"Conditions \u0915\u0947 \u0938\u093e\u0925 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e","text":"<p>\u0915\u092d\u0940-\u0915\u092d\u0940, \u0906\u092a\u0915\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u090f\u0915 \u0935\u093f\u0915\u0932\u094d\u092a \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u092f\u0939\u093e\u0902 conditions \u0915\u093e\u092e \u0906\u0924\u0947 \u0939\u0948\u0902\u0964 Python \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u0940\u0935\u0930\u094d\u0921\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u093e \u0939\u0948: - if: \u092f\u0926\u093f \u0915\u0941\u091b \u0938\u0924\u094d\u092f \u0939\u0948, \u0924\u094b \u092f\u0939 \u0915\u0930\u0947\u0902\u0964 - else: \u092f\u0926\u093f \u092f\u0939 \u0938\u0924\u094d\u092f \u0928\u0939\u0940\u0902 \u0939\u0948, \u0924\u094b \u0915\u0941\u091b \u0914\u0930 \u0915\u0930\u0947\u0902\u0964 - elif: \u092f\u0926\u093f \u092a\u0939\u0932\u0940 condition \u0938\u0924\u094d\u092f \u0928\u0939\u0940\u0902 \u0939\u0948, \u0924\u094b \u0915\u094b\u0908 \u0905\u0928\u094d\u092f condition \u091c\u093e\u0902\u091a\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter03/#_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u092e\u094c\u0938\u092e \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092a\u0939\u0928\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e","text":"<pre><code>weather = input(\"\u092e\u094c\u0938\u092e \u0915\u0948\u0938\u093e \u0939\u0948? (sunny/rainy/cold): \")\n\nif weather == \"sunny\":\n    print(\"\u0927\u0942\u092a \u0915\u093e \u091a\u0936\u094d\u092e\u093e \u0914\u0930 \u091f\u094b\u092a\u0940 \u092a\u0939\u0928\u0947\u0902!\")\nelif weather == \"rainy\":\n    print(\"\u090f\u0915 \u091b\u093e\u0924\u093e \u0932\u0947 \u091c\u093e\u090f\u0902!\")\nelse:\n    print(\"\u090f\u0915 \u0917\u0930\u094d\u092e \u091c\u0948\u0915\u0947\u091f \u092a\u0939\u0928\u0947\u0902!\")\n</code></pre>"},{"location":"hi/chapters/chapter03/#_2","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>if weather == \"sunny\": \u092f\u0926\u093f \u092e\u094c\u0938\u092e \u0927\u0942\u092a \u0935\u093e\u0932\u093e \u0939\u0948, \u0924\u094b \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0906\u092a\u0915\u094b \u0927\u0942\u092a \u0915\u093e \u091a\u0936\u094d\u092e\u093e \u0914\u0930 \u091f\u094b\u092a\u0940 \u092a\u0939\u0928\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0939\u0947\u0917\u093e\u0964</li> <li>elif \u090f\u0915 \u0905\u0928\u094d\u092f condition \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>else \u092c\u093e\u0915\u0940 \u0938\u092d\u0940 \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u0915\u094b \u092a\u0915\u0921\u093c\u0924\u093e \u0939\u0948 \u092f\u0926\u093f \u0915\u094b\u0908 condition \u0938\u0924\u094d\u092f \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter03/#loops-","title":"Loops: \u092c\u093e\u0930-\u092c\u093e\u0930 \u0915\u0941\u091b \u0915\u0930\u0928\u093e","text":"<p>\u091c\u092c \u0906\u092a \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0906\u092a\u0915\u093e \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b\u0908 \u091a\u0940\u091c\u093c \u0915\u0908 \u092c\u093e\u0930 \u0926\u094b\u0939\u0930\u093e\u090f, \u0924\u094b \u0906\u092a loops \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 Python \u092e\u0947\u0902 \u0926\u094b \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 loops \u0939\u094b\u0924\u0947 \u0939\u0948\u0902: 1. For Loop: \u0915\u094b\u0921 \u0915\u0947 \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u091a\u0932\u093e\u0924\u093e \u0939\u0948\u0964 2. While Loop: \u091c\u092c \u0924\u0915 \u090f\u0915 condition \u0938\u0924\u094d\u092f \u0939\u0948, \u0924\u092c \u0924\u0915 \u0915\u094b\u0921 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0930\u0939\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#for-loops","title":"For Loops","text":"<p>\u090f\u0915 for loop \u0906\u092a\u0915\u094b \u0915\u093f\u0938\u0940 collection (\u091c\u0948\u0938\u0947 list) \u0915\u0947 \u090a\u092a\u0930 iterate \u0915\u0930\u0928\u0947 \u092f\u093e \u0915\u093f\u0938\u0940 \u091a\u0940\u091c\u093c \u0915\u094b \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u0926\u094b\u0939\u0930\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#_3","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0930\u0949\u0915\u0947\u091f \u0932\u0949\u0928\u094d\u091a \u0915\u0947 \u0932\u093f\u090f \u0909\u0932\u091f\u0940 \u0917\u093f\u0928\u0924\u0940","text":"<pre><code>for countdown in range(10, 0, -1):\n    print(countdown)\nprint(\"Blast off!\")\n</code></pre>"},{"location":"hi/chapters/chapter03/#_4","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>range(10, 0, -1) \u0915\u093e \u092e\u0924\u0932\u092c \u0939\u0948 \u0915\u093f \u0939\u092e 10 \u0938\u0947 \u0917\u093f\u0928\u0924\u0940 \u0936\u0941\u0930\u0942 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 1 \u0924\u0915 \u0930\u0941\u0915\u0924\u0947 \u0939\u0948\u0902, \u0939\u0930 \u092c\u093e\u0930 1 \u0918\u091f\u093e\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>\u0909\u0932\u091f\u0940 \u0917\u093f\u0928\u0924\u0940 \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926, \u0939\u092e \"Blast off!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter03/#while-loops","title":"While Loops","text":"<p>\u090f\u0915 while loop \u0924\u092c \u0924\u0915 \u0926\u094b\u0939\u0930\u093e\u0924\u093e \u0930\u0939\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 condition \u0938\u0924\u094d\u092f \u0939\u0948\u0964 While loops \u0915\u0947 \u0938\u093e\u0925 \u0938\u093e\u0935\u0927\u093e\u0928 \u0930\u0939\u0947\u0902\u2014\u0906\u092a\u0915\u094b \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e \u0915\u093f condition \u0905\u0902\u0924\u0924\u0903 false \u0939\u094b \u091c\u093e\u090f, \u0935\u0930\u0928\u093e loop \u0939\u092e\u0947\u0936\u093e \u091a\u0932\u0924\u093e \u0930\u0939\u0947\u0917\u093e!</p>"},{"location":"hi/chapters/chapter03/#_5","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u0939\u0940 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092a\u0942\u091b\u0928\u093e","text":"<pre><code>password = \"\"\nwhile password != \"letmein\":\n    password = input(\"\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \")\n\nprint(\"Access granted!\")\n</code></pre>"},{"location":"hi/chapters/chapter03/#_6","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u091c\u092c \u0924\u0915 \u0906\u092a \"letmein\" \u0928\u0939\u0940\u0902 \u091f\u093e\u0907\u092a \u0915\u0930\u0924\u0947, loop \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092a\u0942\u091b\u0924\u093e \u0930\u0939\u0947\u0917\u093e\u0964 \u091c\u0948\u0938\u0947 \u0939\u0940 \u0906\u092a \u0938\u0939\u0940 \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u091f\u093e\u0907\u092a \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u092f\u0939 loop \u0938\u0947 \u092c\u093e\u0939\u0930 \u0906 \u091c\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \"Access granted!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter03/#_7","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0928\u0902\u092c\u0930 \u0917\u0947\u0938\u093f\u0902\u0917 \u0917\u0947\u092e","text":"<p>\u0906\u0907\u090f \u090f\u0915 \u0938\u0930\u0932 guessing game \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u0939\u093e\u0902 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u090f\u0915 \u0930\u0948\u0902\u0921\u092e \u0928\u0902\u092c\u0930 \u091a\u0941\u0928\u0924\u093e \u0939\u0948 \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u094b \u0909\u0938\u0947 guess \u0915\u0930\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter03/#number-guessing-game","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Number Guessing Game","text":"<pre><code>import random\n\nsecret_number = random.randint(1, 10)  # 1 \u0914\u0930 10 \u0915\u0947 \u092c\u0940\u091a \u090f\u0915 \u0930\u0948\u0902\u0921\u092e \u0928\u0902\u092c\u0930 \u091a\u0941\u0928\u0924\u093e \u0939\u0948\nguess = 0\n\nwhile guess != secret_number:\n    guess = int(input(\"\u0928\u0902\u092c\u0930 \u0915\u093e \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u090f\u0902 (1 \u0938\u0947 10 \u0915\u0947 \u092c\u0940\u091a): \"))\n\n    if guess &lt; secret_number:\n        print(\"\u092c\u0939\u0941\u0924 \u0915\u092e!\")\n    elif guess &gt; secret_number:\n        print(\"\u092c\u0939\u0941\u0924 \u091c\u094d\u092f\u093e\u0926\u093e!\")\n    else:\n        print(\"\u0906\u092a\u0928\u0947 \u0938\u0939\u0940 \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u092f\u093e!\")\n</code></pre>"},{"location":"hi/chapters/chapter03/#_8","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 <code>random.randint()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0930\u0948\u0902\u0921\u092e \u0928\u0902\u092c\u0930 \u091a\u0941\u0928\u0924\u093e \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0938\u0939\u0940 \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u0928\u0947 \u0924\u0915 guess \u0915\u0930\u0924\u093e \u0930\u0939\u0924\u093e \u0939\u0948, \u0914\u0930 \u0905\u0917\u0930 guess \u092c\u0939\u0941\u0924 \u091c\u094d\u092f\u093e\u0926\u093e \u092f\u093e \u092c\u0939\u0941\u0924 \u0915\u092e \u0939\u0948, \u0924\u094b hints \u092e\u093f\u0932\u0924\u0940 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter03/#text-adventure-game","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 Text Adventure Game","text":"<p>\u0905\u092c, \u091c\u094b \u0915\u0941\u091b \u0939\u092e\u0928\u0947 \u0938\u0940\u0916\u093e \u0939\u0948 \u0909\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u0930\u0932 text-based \u090f\u0921\u0935\u0947\u0902\u091a\u0930 \u0917\u0947\u092e \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0917\u0947\u092e \u0935\u093f\u0915\u0932\u094d\u092a \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u0915\u0930\u0947\u0917\u093e, \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0940 input \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0905\u0932\u0917-\u0905\u0932\u0917 \u0918\u091f\u0928\u093e\u090f\u0901 \u0939\u094b\u0902\u0917\u0940!</p>"},{"location":"hi/chapters/chapter03/#text-adventure-game_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Text Adventure Game","text":"<pre><code>print(\"\u090f\u0921\u0935\u0947\u0902\u091a\u0930 \u0917\u0947\u092e \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948!\")\n\nchoice1 = input(\"\u0906\u092a \u090f\u0915 \u0905\u0902\u0927\u0947\u0930\u0947 \u091c\u0902\u0917\u0932 \u092e\u0947\u0902 \u0939\u0948\u0902\u0964 \u0915\u094d\u092f\u093e \u0906\u092a \u092c\u093e\u090f\u0902 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0926\u093e\u090f\u0902? (left/right): \")\n\nif choice1 == \"left\":\n    print(\"\u0906\u092a \u090f\u0915 \u0926\u094b\u0938\u094d\u0924\u093e\u0928\u093e \u0921\u094d\u0930\u0948\u0917\u0928 \u0938\u0947 \u092e\u093f\u0932\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u094b \u0916\u091c\u093e\u0928\u093e \u0922\u0942\u0902\u0922\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948!\")\n    choice2 = input(\"\u0915\u094d\u092f\u093e \u0906\u092a \u0916\u091c\u093e\u0928\u093e \u0932\u0947\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0907\u0938\u0947 \u091b\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902? (take/leave): \")\n\n    if choice2 == \"take\":\n        print(\"\u0916\u091c\u093e\u0928\u093e \u0936\u094d\u0930\u093e\u092a\u093f\u0924 \u0939\u0948! \u0906\u092a \u090f\u0915 \u092e\u0947\u0902\u0922\u0915 \u092c\u0928 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902!\")\n    else:\n        print(\"\u0906\u092a \u0926\u0942\u0930 \u091a\u0932\u0947 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0916\u0941\u0936\u0940 \u0938\u0947 \u091c\u0940\u0924\u0947 \u0939\u0948\u0902\u0964\")\n\nelif choice1 == \"right\":\n    print(\"\u0906\u092a \u090f\u0915 \u0928\u0926\u0940 \u092e\u0947\u0902 \u0917\u093f\u0930 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0906\u092a\u0915\u094b \u0924\u0948\u0930 \u0915\u0930 \u092c\u091a\u0928\u093e \u092a\u0921\u093c\u0924\u093e \u0939\u0948!\")\n    choice3 = input(\"\u0915\u094d\u092f\u093e \u0906\u092a \u0924\u0947\u091c \u0924\u0948\u0930\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0927\u0940\u0930\u0947? (fast/slow): \")\n\n    if choice3 == \"fast\":\n        print(\"\u0906\u092a \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0915\u093f\u0928\u093e\u0930\u0947 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0924\u0947 \u0939\u0948\u0902!\")\n    else:\n        print(\"\u0906\u092a \u0927\u093e\u0930\u093e \u092e\u0947\u0902 \u092c\u0939 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902!\")\nelse:\n    print(\"\u0906\u092a \u0935\u0939\u0940\u0902 \u0916\u0921\u093c\u0947 \u0930\u0939\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u090f\u0915 \u0917\u093f\u0932\u0939\u0930\u0940 \u0906\u092a\u0915\u093e \u0916\u093e\u0928\u093e \u091a\u0941\u0930\u093e \u0932\u0947\u0924\u0940 \u0939\u0948\u0964\")\n</code></pre>"},{"location":"hi/chapters/chapter03/#_9","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u090f\u0915 \u0938\u0930\u0932 text-based \u090f\u0921\u0935\u0947\u0902\u091a\u0930 \u0917\u0947\u092e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0908 \u0935\u093f\u0915\u0932\u094d\u092a \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0940 input \u0938\u0947 \u0915\u0939\u093e\u0928\u0940 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0924\u092f \u0939\u094b\u0924\u093e \u0939\u0948!</li> </ul>"},{"location":"hi/chapters/chapter03/#_10","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0907\u0938 \u091b\u094b\u091f\u0947 \u0915\u094d\u0935\u093f\u091c\u093c \u0938\u0947 \u0905\u092a\u0928\u0940 \u0938\u092e\u091d \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902:</p> <ol> <li> <p>Python \u092e\u0947\u0902 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 conditions \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. elif     B. loop     C. case  </p> </li> <li> <p>\u090f\u0915 <code>while</code> loop \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0915\u094b\u0921 \u0915\u093e \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u091a\u0932\u093e\u0924\u093e \u0939\u0948\u0964     B. \u0915\u094b\u0921 \u0915\u093e \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0924\u092c \u0924\u0915 \u091a\u0932\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0924\u0915 condition \u0938\u0924\u094d\u092f \u0939\u0948\u0964     C. \u0915\u094b\u0921 \u0915\u093e \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0939\u092e\u0947\u0936\u093e \u0915\u0947 \u0932\u093f\u090f \u091a\u0932\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u0930\u0948\u0902\u0921\u092e \u0928\u0902\u092c\u0930 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e function \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. randint     B. random.pick     C. choose  </p> </li> </ol>"},{"location":"hi/chapters/chapter03/#_11","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>A</li> <li>B</li> <li>A</li> </ol>"},{"location":"hi/chapters/chapter03/#_12","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a conditions \u0914\u0930 loops \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908 \u0938\u0947 \u091c\u093e\u0928\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Python Conditions \u0914\u0930 Loops</p> <p>\u0905\u0917\u0932\u0947 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e functions \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947 \u0914\u0930 \u0938\u092e\u091d\u0947\u0902\u0917\u0947 \u0915\u093f \u0915\u0948\u0938\u0947 \u0906\u092a \u0905\u092a\u0928\u0947 \u0915\u094b\u0921 \u0915\u094b \u0905\u0927\u093f\u0915 \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0914\u0930 \u0938\u0902\u0917\u0920\u093f\u0924 \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0906\u092a functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u092e\u091c\u0947\u0926\u093e\u0930 to-do list app \u092d\u0940 \u092c\u0928\u093e\u090f\u0902\u0917\u0947!</p>"},{"location":"hi/chapters/chapter04/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 4: Functions \u0914\u0930 Functional Programming","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u0938\u0940\u0916\u0947\u0902\u0917\u0947 \u0915\u093f Python \u092e\u0947\u0902 functions \u0915\u0948\u0938\u0947 \u0932\u093f\u0916\u0947\u0902 \u0924\u093e\u0915\u093f \u0906\u092a\u0915\u093e \u0915\u094b\u0921 \u0905\u0927\u093f\u0915 \u0938\u0902\u0917\u0920\u093f\u0924 \u0914\u0930 \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0939\u094b \u0938\u0915\u0947\u0964 \u0939\u092e functional programming \u0915\u0940 \u092d\u0940 \u090f\u0915 \u091d\u0932\u0915 \u0926\u0947\u0916\u0947\u0902\u0917\u0947, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0941\u091b \u0936\u093e\u0928\u0926\u093e\u0930 tools \u091c\u0948\u0938\u0947 lambda functions, map, \u0914\u0930 filter \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter04/#functions","title":"Functions \u0915\u094d\u092f\u093e \u0939\u0948\u0902?","text":"<p>Functions \u0906\u092a\u0915\u0947 \u0915\u094b\u0921 \u0915\u0947 \u0932\u093f\u090f recipes \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u090f\u0915 \u0939\u0940 \u091a\u0940\u091c\u093c \u0915\u094b \u092c\u093e\u0930-\u092c\u093e\u0930 \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u092c\u091c\u093e\u092f, \u0906\u092a \u090f\u0915 function \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u091c\u092c \u092d\u0940 \u0906\u092a\u0915\u094b \u0907\u0938\u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b, \u0907\u0938\u0947 \u092b\u093f\u0930 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 Functions \u0906\u092a\u0915\u0947 \u0915\u094b\u0921 \u0915\u094b \u092a\u0922\u093c\u0928\u0947 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter04/#function","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u093e","text":"<pre><code>def greet(name):\n    print(\"Hello, \" + name + \"!\")\n\ngreet(\"Alice\")\ngreet(\"Bob\")\n</code></pre>"},{"location":"hi/chapters/chapter04/#_1","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>def greet(name):</code> \u090f\u0915 function <code>greet</code> \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u094b \u090f\u0915 parameter <code>name</code> \u0932\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>\u091c\u092c \u0939\u092e <code>greet(\"Alice\")</code> \u0915\u0949\u0932 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b function \"Hello, Alice!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#functions_1","title":"Functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094d\u092f\u094b\u0902 \u0915\u0930\u0947\u0902?","text":"<p>Functions \u0906\u092a\u0915\u0947 \u0915\u094b\u0921 \u0915\u094b \u091b\u094b\u091f\u0947, \u092a\u094d\u0930\u092c\u0902\u0927\u0928\u0940\u092f \u0939\u093f\u0938\u094d\u0938\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u090f\u0915 \u0917\u0947\u092e \u0932\u093f\u0916 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u0939\u093e\u0902 \u0939\u0930 \u090f\u0915\u094d\u0936\u0928 \u090f\u0915 function \u0915\u0947 \u0905\u0902\u0926\u0930 \u0939\u0948, \u0914\u0930 \u0906\u092a \u091c\u092c \u091a\u093e\u0939\u0947\u0902 \u0909\u0928\u094d\u0939\u0947\u0902 \u092b\u093f\u0930 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter04/#parameters-return-values","title":"Parameters \u0914\u0930 Return Values","text":"<p>Functions parameters (inputs) \u0914\u0930 return values (outputs) \u0932\u0947 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 Parameters \u0906\u092a\u0915\u094b \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092a\u093e\u0938 \u0915\u0930\u0928\u0947 \u0926\u0947\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 return values \u0906\u092a\u0915\u094b function \u0938\u0947 \u0915\u0941\u091b \u0935\u093e\u092a\u0938 \u092a\u093e\u0928\u0947 \u0915\u0940 \u0938\u0941\u0935\u093f\u0927\u093e \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter04/#_2","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0938\u0930\u094d\u0915\u0932 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0928\u093f\u0915\u093e\u0932\u0928\u093e","text":"<pre><code>def area_of_circle(radius):\n    area = 3.14 * radius ** 2\n    return area\n\nprint(area_of_circle(5))  # 5 \u0915\u0940 \u0924\u094d\u0930\u093f\u091c\u094d\u092f\u093e \u0935\u093e\u0932\u0947 \u0938\u0930\u094d\u0915\u0932 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter04/#_3","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>area_of_circle(radius)</code> \u090f\u0915 parameter \u0932\u0947\u0924\u093e \u0939\u0948: \u0938\u0930\u094d\u0915\u0932 \u0915\u0940 \u0924\u094d\u0930\u093f\u091c\u094d\u092f\u093e\u0964</li> <li>\u092f\u0939 \u03c0r\u00b2 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 <code>return</code> \u0915\u0947 \u0938\u093e\u0925 \u092a\u0930\u093f\u0923\u093e\u092e \u0935\u093e\u092a\u0938 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#_4","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0924\u093e\u092a\u092e\u093e\u0928 \u0915\u0928\u0935\u0930\u094d\u091f\u0930","text":"<p>\u0906\u0907\u090f \u090f\u0915 function \u0932\u093f\u0916\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0924\u093e\u092a\u092e\u093e\u0928 \u0915\u094b Celsius \u0938\u0947 Fahrenheit \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#celsius-to-fahrenheit","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Celsius to Fahrenheit \u0915\u0928\u0935\u0930\u094d\u091f\u0930","text":"<pre><code>def celsius_to_fahrenheit(celsius):\n    fahrenheit = (celsius * 9/5) + 32\n    return fahrenheit\n\ntemp_c = 25\nprint(str(temp_c) + \"\u00b0C is \" + str(celsius_to_fahrenheit(temp_c)) + \"\u00b0F\")\n</code></pre>"},{"location":"hi/chapters/chapter04/#_5","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li><code>celsius_to_fahrenheit</code> function Celsius \u0915\u094b Fahrenheit \u092e\u0947\u0902 \u092c\u0926\u0932\u0924\u093e \u0939\u0948 \u0914\u0930 Fahrenheit value \u0915\u094b return \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u092b\u093f\u0930 \u0939\u092e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#lambda-functions-mini-functions-","title":"Lambda Functions: Mini Functions \u0911\u0928-\u0926-\u0917\u094b","text":"<p>\u090f\u0915 lambda function \u090f\u0915 \u092e\u093f\u0928\u0940-function \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u0947 \u0906\u092a \u090f\u0915 \u0932\u093e\u0907\u0928 \u092e\u0947\u0902 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0924\u0947\u091c\u093c, \u090f\u0915 \u092c\u093e\u0930 \u0915\u0947 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u0936\u0928 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#lambda-function","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0924\u0947\u091c\u093c Lambda Function","text":"<pre><code>multiply = lambda x, y: x * y\nprint(multiply(3, 4))  # 12 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter04/#_6","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>lambda x, y: x * y</code> \u090f\u0915 \u091b\u094b\u091f\u093e, \u0905\u0928\u093e\u092e function \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0917\u0941\u0923\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u092f\u0939 \u090f\u0915 \u092a\u0942\u0930\u093e function \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u0905\u0927\u093f\u0915 \u0915\u0949\u092e\u094d\u092a\u0948\u0915\u094d\u091f \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#functional-programming-tools-map-filter-reduce","title":"Functional Programming Tools: Map, Filter, Reduce","text":"<p>Python \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0941\u091b \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 tools \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948\u0902 \u091c\u094b functional programming \u0936\u0948\u0932\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter04/#map","title":"Map","text":"<p><code>map()</code> function \u090f\u0915 function \u0915\u094b \u0938\u0942\u091a\u0940 \u0915\u0947 \u0939\u0930 \u0906\u0907\u091f\u092e \u092a\u0930 \u0932\u093e\u0917\u0942 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#map_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: <code>map()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u093e \u0935\u0930\u094d\u0917 \u0915\u0930\u0928\u093e","text":"<pre><code>numbers = [1, 2, 3, 4]\nsquared = list(map(lambda x: x ** 2, numbers))\nprint(squared)  # [1, 4, 9, 16] \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter04/#_7","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>map()</code> lambda function <code>x ** 2</code> \u0915\u094b \u0938\u0942\u091a\u0940 \u0915\u0940 \u0939\u0930 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u0930 \u0932\u093e\u0917\u0942 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u092a\u0930\u093f\u0923\u093e\u092e \u090f\u0915 \u0928\u0908 \u0938\u0942\u091a\u0940 \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u092e\u0942\u0932 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u0947 \u0935\u0930\u094d\u0917 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#filter","title":"Filter","text":"<p><code>filter()</code> function \u0938\u0942\u091a\u0940 \u0938\u0947 \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u094b \u090f\u0915 condition \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter04/#filter_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: <code>filter()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u092e \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0902 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e","text":"<pre><code>numbers = [1, 2, 3, 4, 5, 6]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))\nprint(even_numbers)  # [2, 4, 6] \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter04/#_8","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>filter()</code> \u0915\u0947\u0935\u0932 \u0909\u0928 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0930\u0916\u0924\u093e \u0939\u0948 \u091c\u094b condition \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0924\u0940 \u0939\u0948\u0902 (\u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, \u0938\u092e \u0939\u094b\u0928\u093e)\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#reduce","title":"Reduce","text":"<p><code>reduce()</code> function \u090f\u0915 \u0938\u0942\u091a\u0940 \u0915\u094b \u090f\u0915 \u0939\u0940 value \u092e\u0947\u0902 \u0915\u092e \u0915\u0930 \u0926\u0947\u0924\u093e \u0939\u0948, \u0914\u0930 \u0907\u0938\u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u094b \u0907\u0938\u0947 <code>functools</code> \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0938\u0947 \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter04/#reduce_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: <code>reduce()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u092d\u0940 \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0917\u0941\u0923\u093e \u0915\u0930\u0928\u093e","text":"<pre><code>from functools import reduce\n\nnumbers = [1, 2, 3, 4]\nproduct = reduce(lambda x, y: x * y, numbers)\nprint(product)  # 24 (1*2*3*4) \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter04/#_9","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>reduce()</code> \u092a\u0939\u0932\u0947 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u0932\u0947\u0924\u093e \u0939\u0948, \u0909\u0928\u094d\u0939\u0947\u0902 \u0917\u0941\u0923\u093e \u0915\u0930\u0924\u093e \u0939\u0948, \u092b\u093f\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094b \u0905\u0917\u0932\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0938\u0947 \u0917\u0941\u0923\u093e \u0915\u0930\u0924\u093e \u0939\u0948, \u0914\u0930 \u0907\u0938\u0940 \u0924\u0930\u0939\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#to-do-list-app","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: To-Do List App","text":"<p>\u0905\u092c, \u0939\u092e functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u0930\u0932 to-do list app \u092c\u0928\u093e\u090f\u0902\u0917\u0947\u0964 \u092f\u0939 app \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b tasks \u091c\u094b\u0921\u093c\u0928\u0947, \u0926\u0947\u0916\u0928\u0947 \u0914\u0930 \u0939\u091f\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter04/#to-do-list-app_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: To-Do List App","text":"<pre><code>tasks = []\n\ndef add_task(task):\n    tasks.append(task)\n    print(\"Task added: \" + task)\n\ndef view_tasks():\n    print(\"\u0906\u092a\u0915\u0947 tasks:\")\n    for task in tasks:\n        print(\"- \" + task)\n\ndef remove_task(task):\n    if task in tasks:\n        tasks.remove(task)\n        print(\"Task \u0939\u091f\u093e\u092f\u093e \u0917\u092f\u093e: \" + task)\n    else:\n        print(\"Task \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e!\")\n\n# \u0909\u0926\u093e\u0939\u0930\u0923\nadd_task(\"Math \u091f\u0947\u0938\u094d\u091f \u0915\u0940 \u0924\u0948\u092f\u093e\u0930\u0940\")\nadd_task(\"\u0915\u093f\u0930\u093e\u0928\u0947 \u0915\u093e \u0938\u093e\u092e\u093e\u0928 \u0916\u0930\u0940\u0926\u0947\u0902\")\nview_tasks()\nremove_task(\"\u0915\u093f\u0930\u093e\u0928\u0947 \u0915\u093e \u0938\u093e\u092e\u093e\u0928 \u0916\u0930\u0940\u0926\u0947\u0902\")\nview_tasks()\n</code></pre>"},{"location":"hi/chapters/chapter04/#_10","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li><code>add_task()</code> \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u090f\u0915 task \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</li> <li><code>view_tasks()</code> \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0938\u092d\u0940 tasks \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>remove_task()</code> \u092f\u0926\u093f task \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0939\u0948 \u0924\u094b \u0909\u0938\u0947 \u0939\u091f\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter04/#_11","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0906\u0907\u090f \u0926\u0947\u0916\u0947\u0902 \u0915\u093f \u0906\u092a\u0915\u094b functions \u0914\u0930 functional programming \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u093e \u0938\u092e\u091d \u092e\u0947\u0902 \u0906\u092f\u093e:</p> <ol> <li> <p>Python \u092e\u0947\u0902 function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. define     B. function     C. def  </p> </li> <li> <p>Lambda function \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u090f\u0915 \u092a\u0942\u0930\u093e function \u092c\u0928\u093e\u0924\u093e \u0939\u0948\u0964     B. \u090f\u0915 \u092e\u093f\u0928\u0940 function \u0915\u094b \u090f\u0915 \u0932\u093e\u0907\u0928 \u092e\u0947\u0902 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     C. \u090f\u0915 function \u0915\u094b \u0939\u091f\u093e\u0924\u093e \u0939\u0948\u0964  </p> </li> <li> <p><code>map()</code> \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0926\u094b \u0938\u0942\u091a\u093f\u092f\u094b\u0902 \u0915\u094b \u090f\u0915 \u0938\u093e\u0925 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964     B. \u090f\u0915 function \u0915\u094b \u0938\u0942\u091a\u0940 \u0915\u0947 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0906\u0907\u091f\u092e \u092a\u0930 \u0932\u093e\u0917\u0942 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     C. \u0905\u0928\u091a\u093e\u0939\u0947 \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u094b \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0924\u093e \u0939\u0948\u0964  </p> </li> </ol>"},{"location":"hi/chapters/chapter04/#_12","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>C</li> <li>B</li> <li>B</li> </ol>"},{"location":"hi/chapters/chapter04/#_13","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a Python \u092e\u0947\u0902 functions \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0914\u0930 \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Python Functions</p> <p>\u0905\u0917\u0932\u0947 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Python \u092e\u0947\u0902 Object-Oriented Programming (OOP) \u092a\u0930 \u0927\u094d\u092f\u093e\u0928 \u0926\u0947\u0902\u0917\u0947\u0964 \u0906\u092a \u0938\u0940\u0916\u0947\u0902\u0917\u0947 \u0915\u093f \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0940 \u0935\u0938\u094d\u0924\u0941\u0913\u0902 \u0915\u094b \u0915\u094b\u0921 \u092e\u0947\u0902 \u0915\u0948\u0938\u0947 \u092e\u0949\u0921\u0932 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u0905\u0927\u093f\u0915 \u091c\u091f\u093f\u0932 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter05/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 5: Object-Oriented Programming (OOP)","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Python \u092e\u0947\u0902 Object-Oriented Programming (OOP) \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0947\u0902\u0917\u0947\u0964 OOP \u0906\u092a\u0915\u0947 \u0915\u094b\u0921 \u092e\u0947\u0902 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0940 \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u094b \u092e\u0949\u0921\u0932 \u0915\u0930\u0928\u0947 \u0915\u093e \u090f\u0915 \u0924\u0930\u0940\u0915\u093e \u0939\u0948\u0964 \u0907\u0938\u0947 \u0910\u0938\u0947 \u0938\u092e\u091d\u0947\u0902 \u091c\u0948\u0938\u0947 \u0906\u092a \u0935\u0938\u094d\u0924\u0941\u0913\u0902 (\u091c\u0948\u0938\u0947 \u0915\u093e\u0930, \u091c\u093e\u0928\u0935\u0930, \u092f\u093e \u0932\u094b\u0917) \u0915\u0947 \u0932\u093f\u090f \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f \u092c\u0928\u093e \u0930\u0939\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter05/#oop","title":"OOP \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Python \u092e\u0947\u0902, Object-Oriented Programming (OOP) \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 \u0915\u094b\u0921 \u0915\u094b objects \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u0902\u0930\u091a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u090f\u0915 object \u0935\u0939 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0921\u0947\u091f\u093e (attributes) \u0914\u0930 \u0909\u0938 \u0921\u0947\u091f\u093e \u092a\u0930 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 functions (methods) \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>OOP \u0915\u0947 \u092e\u0942\u0932 \u092e\u0947\u0902 \u0939\u0948\u0902: - Classes: Objects \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f\u0964 - Objects: \u0915\u093f\u0938\u0940 class \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923\u0964 - Methods: \u0935\u0947 functions \u091c\u094b \u0915\u093f\u0938\u0940 class \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 - Attributes: \u0935\u0947 variables \u091c\u094b \u0915\u093f\u0938\u0940 class \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter05/#_1","title":"\u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u091c\u0940\u0935\u0928 \u0909\u0926\u093e\u0939\u0930\u0923","text":"<p>\u090f\u0915 class \u0915\u094b \u0915\u093e\u0930 \u0915\u0947 \u0932\u093f\u090f \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u094b\u091a\u0947\u0902\u0964 \u0906\u092a \u090f\u0915 \u0939\u0940 \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f \u0938\u0947 \u0915\u0908 \u0915\u093e\u0930\u0947\u0902 \u092c\u0928\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0932\u0947\u0915\u093f\u0928 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u093e\u0930 \u090f\u0915 \u0905\u0932\u0917 object \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f (class) \u092f\u0939 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0926\u0930\u0935\u093e\u091c\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e, \u0930\u0902\u0917, \u0914\u0930 \u0907\u0902\u091c\u0928 \u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e (attributes), \u0938\u093e\u0925 \u0939\u0940 \u0915\u093e\u0930 \u0915\u094d\u092f\u093e \u0915\u0930 \u0938\u0915\u0924\u0940 \u0939\u0948, \u091c\u0948\u0938\u0947 \u0921\u094d\u0930\u093e\u0907\u0935 \u0915\u0930\u0928\u093e \u092f\u093e \u0939\u0949\u0930\u094d\u0928 \u092c\u091c\u093e\u0928\u093e (methods)\u0964</p>"},{"location":"hi/chapters/chapter05/#classes-objects","title":"Classes \u0914\u0930 Objects \u092c\u0928\u093e\u0928\u093e","text":"<p>\u0906\u0907\u090f \u090f\u0915 \u0938\u0930\u0932 class \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u090f\u0915 Person \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter05/#class","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Class \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u093e","text":"<pre><code>class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def introduce(self):\n        print(\"Hello, \u092e\u0947\u0930\u093e \u0928\u093e\u092e \" + self.name + \" \u0939\u0948 \u0914\u0930 \u092e\u0948\u0902 \" + str(self.age) + \" \u0938\u093e\u0932 \u0915\u093e/\u0915\u0940 \u0939\u0942\u0901\u0964\")\n\n# Person class \u0915\u093e \u090f\u0915 object (instance) \u092c\u0928\u093e\u0928\u093e\nperson1 = Person(\"Alice\", 16)\nperson1.introduce()\n</code></pre>"},{"location":"hi/chapters/chapter05/#_2","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>class Person:</code> \u090f\u0915 class Person \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>__init__()</code> \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 method \u0939\u0948 \u091c\u093f\u0938\u0947 constructor \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u091c\u092c \u0939\u092e \u090f\u0915 \u0928\u092f\u093e object \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u092f\u0939 \u091a\u093e\u0932\u0942 \u0939\u094b\u0924\u093e \u0939\u0948 \u0914\u0930 attributes \u0915\u094b initialize \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>self.name</code> \u0914\u0930 <code>self.age</code> \u0935\u0947 attributes \u0939\u0948\u0902 \u091c\u094b \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0947 \u0928\u093e\u092e \u0914\u0930 \u0909\u092e\u094d\u0930 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li><code>introduce()</code> \u090f\u0915 method \u0939\u0948 \u091c\u094b \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u093e \u092a\u0930\u093f\u091a\u092f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#methods-attributes","title":"Methods \u0914\u0930 Attributes","text":"<ul> <li>Attributes object \u0915\u0947 \u0938\u093e\u0925 \u091c\u0941\u0921\u093c\u0947 \u0939\u0941\u090f \u0921\u0947\u091f\u093e \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 (\u091c\u0948\u0938\u0947 \u0915\u093f\u0938\u0940 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u093e \u0928\u093e\u092e \u0914\u0930 \u0909\u092e\u094d\u0930)\u0964</li> <li>Methods \u0935\u0947 functions \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0915\u093f\u0938\u0940 object \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 (\u091c\u0948\u0938\u0947 \u0905\u092a\u0928\u093e \u092a\u0930\u093f\u091a\u092f \u0926\u0947\u0928\u093e)\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#action-method","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Action (Method) \u091c\u094b\u0921\u093c\u0928\u093e","text":"<pre><code>class Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def introduce(self):\n        print(\"Hello, \u092e\u0947\u0930\u093e \u0928\u093e\u092e \" + self.name + \" \u0939\u0948 \u0914\u0930 \u092e\u0948\u0902 \" + str(self.age) + \" \u0938\u093e\u0932 \u0915\u093e/\u0915\u0940 \u0939\u0942\u0901\u0964\")\n\n    def celebrate_birthday(self):\n        self.age += 1\n        print(\"\u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u092e\u0941\u092c\u093e\u0930\u0915 \u0939\u094b! \u0905\u092c \u0906\u092a \" + str(self.age) + \" \u0938\u093e\u0932 \u0915\u0947 \u0939\u094b \u0917\u090f \u0939\u0948\u0902\u0964\")\n\n# \u090f\u0915 \u0928\u092f\u093e \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092c\u0928\u093e\u0928\u093e\nperson2 = Person(\"Bob\", 17)\nperson2.introduce()\nperson2.celebrate_birthday()  # \u0909\u092e\u094d\u0930 \u0915\u094b 1 \u0938\u0947 \u092c\u0922\u093c\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0915\u093e \u0938\u0902\u0926\u0947\u0936 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\n</code></pre>"},{"location":"hi/chapters/chapter05/#_3","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>celebrate_birthday()</code> \u090f\u0915 \u0928\u092f\u093e method \u0939\u0948 \u091c\u094b \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0915\u0940 \u0909\u092e\u094d\u0930 \u0915\u094b 1 \u0938\u0947 \u092c\u0922\u093c\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0915\u093e \u0938\u0902\u0926\u0947\u0936 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u0906\u092a objects \u092a\u0930 methods \u0915\u094b \u0915\u0949\u0932 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0924\u093e\u0915\u093f \u0935\u0947 \u0915\u0941\u091b \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0947\u0902!</li> </ul>"},{"location":"hi/chapters/chapter05/#inheritance-traits","title":"Inheritance: Traits \u092a\u093e\u0938 \u0915\u0930\u0928\u093e","text":"<p>OOP \u092e\u0947\u0902, inheritance \u0906\u092a\u0915\u094b \u090f\u0915 class \u0915\u094b \u0926\u0942\u0938\u0930\u0940 class \u0938\u0947 attributes \u0914\u0930 methods \u0935\u093f\u0930\u093e\u0938\u0924 \u092e\u0947\u0902 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0906\u092a\u0915\u094b \u092e\u094c\u091c\u0942\u0926\u093e classes \u0915\u093e \u0935\u093f\u0936\u0947\u0937 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u092c\u0928\u093e\u0928\u0947 \u0926\u0947\u0924\u093e \u0939\u0948 \u092c\u093f\u0928\u093e \u0915\u094b\u0921 \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u0932\u093f\u0916\u0947\u0964</p>"},{"location":"hi/chapters/chapter05/#person-class-inherit","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: <code>Person</code> Class \u0938\u0947 Inherit \u0915\u0930\u0928\u093e","text":"<pre><code>class Student(Person):\n    def __init__(self, name, age, grade):\n        super().__init__(name, age)  # Person class \u0915\u0947 constructor \u0915\u094b \u0915\u0949\u0932 \u0915\u0930\u0947\u0902\n        self.grade = grade\n\n    def study(self):\n        print(self.name + \" \u0915\u0915\u094d\u0937\u093e \" + str(self.grade) + \" \u0915\u0940 \u092a\u0930\u0940\u0915\u094d\u0937\u093e \u0915\u0940 \u0924\u0948\u092f\u093e\u0930\u0940 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964\")\n\n# \u090f\u0915 Student object \u092c\u0928\u093e\u0928\u093e\nstudent1 = Student(\"Charlie\", 16, 10)\nstudent1.introduce()\nstudent1.study()\n</code></pre>"},{"location":"hi/chapters/chapter05/#_4","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>Student(Person)</code>: <code>Student</code> class <code>Person</code> class \u0938\u0947 inherit \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>super().__init__(name, age)</code> <code>Person</code> class \u0915\u0947 constructor \u0915\u094b \u0915\u0949\u0932 \u0915\u0930\u0924\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0928\u093e\u092e \u0914\u0930 \u0909\u092e\u094d\u0930 \u0915\u094b initialize \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964</li> <li><code>Student</code> class \u092e\u0947\u0902 \u090f\u0915 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 attribute grade \u0914\u0930 \u090f\u0915 \u0928\u092f\u093e method study() \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#pet","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Pet \u0915\u094b \u092e\u0949\u0921\u0932 \u0915\u0930\u0928\u093e","text":"<p>\u0906\u0907\u090f \u090f\u0915 \u0938\u0930\u0932 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b OOP \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 Pet \u0915\u094b \u092e\u0949\u0921\u0932 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0906\u092a \u0905\u092a\u0928\u0947 \u092a\u093e\u0932\u0924\u0942 \u091c\u093e\u0928\u0935\u0930 \u0915\u094b \u0916\u093f\u0932\u093e\u0928\u0947, \u0909\u0938\u0915\u0947 \u0938\u093e\u0925 \u0916\u0947\u0932\u0928\u0947 \u0914\u0930 \u0909\u0938\u0915\u0940 \u0916\u0941\u0936\u0940 \u0915\u0947 \u0938\u094d\u0924\u0930 \u0915\u094b \u0926\u0947\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter05/#pet-class","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0938\u0930\u0932 Pet Class","text":"<pre><code>class Pet:\n    def __init__(self, name, species):\n        self.name = name\n        self.species = species\n        self.happiness = 50\n\n    def feed(self):\n        self.happiness += 10\n        print(self.name + \" \u0916\u0941\u0936 \u0939\u0948\u0902! \u0916\u0941\u0936\u0940 \u0915\u093e \u0938\u094d\u0924\u0930: \" + str(self.happiness))\n\n    def play(self):\n        self.happiness += 20\n        print(self.name + \" \u0909\u0924\u094d\u0938\u093e\u0939\u093f\u0924 \u0939\u0948\u0902! \u0916\u0941\u0936\u0940 \u0915\u093e \u0938\u094d\u0924\u0930: \" + str(self.happiness))\n\n# \u090f\u0915 Pet object \u092c\u0928\u093e\u0928\u093e\nmy_pet = Pet(\"Buddy\", \"dog\")\nmy_pet.feed()\nmy_pet.play()\n</code></pre>"},{"location":"hi/chapters/chapter05/#_5","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>Pet class \u092e\u0947\u0902 attributes \u0939\u0948\u0902 \u091c\u0948\u0938\u0947 name, species, \u0914\u0930 happiness\u0964</li> <li>Methods \u091c\u0948\u0938\u0947 feed() \u0914\u0930 play() \u092a\u093e\u0932\u0924\u0942 \u091c\u093e\u0928\u0935\u0930 \u0915\u0940 \u0916\u0941\u0936\u0940 \u092c\u0922\u093c\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u092c \u0909\u0928\u094d\u0939\u0947\u0902 \u0915\u0949\u0932 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#banking-system","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u0938\u0930\u0932 Banking System","text":"<p>\u0905\u092c \u0924\u0915 \u0939\u092e\u0928\u0947 \u091c\u094b \u0938\u0940\u0916\u093e \u0939\u0948 \u0909\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0939\u092e \u090f\u0915 \u0938\u0930\u0932 banking system \u092c\u0928\u093e\u090f\u0902\u0917\u0947\u0964 \u0939\u092e \u090f\u0915 BankAccount class \u092c\u0928\u093e\u090f\u0902\u0917\u0947 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b \u091c\u092e\u093e, \u0928\u093f\u0915\u093e\u0938\u0940 \u0914\u0930 \u0909\u0928\u0915\u0947 \u092c\u0948\u0932\u0947\u0902\u0938 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter05/#banking-system_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Banking System","text":"<pre><code>class BankAccount:\n    def __init__(self, owner, balance=0):\n        self.owner = owner\n        self.balance = balance\n\n    def deposit(self, amount):\n        self.balance += amount\n        print(f\"${amount} \u091c\u092e\u093e \u0915\u093f\u090f \u0917\u090f\u0964 \u0928\u092f\u093e \u092c\u0948\u0932\u0947\u0902\u0938: ${self.balance}\")\n\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            print(\"\u092a\u0930\u094d\u092f\u093e\u092a\u094d\u0924 \u0927\u0928\u0930\u093e\u0936\u093f \u0928\u0939\u0940\u0902 \u0939\u0948!\")\n        else:\n            self.balance -= amount\n            print(f\"${amount} \u0928\u093f\u0915\u093e\u0932\u0947 \u0917\u090f\u0964 \u0928\u092f\u093e \u092c\u0948\u0932\u0947\u0902\u0938: ${self.balance}\")\n\n    def check_balance(self):\n        print(f\"{self.owner} \u0915\u093e \u092c\u0948\u0932\u0947\u0902\u0938: ${self.balance}\")\n\n# \u090f\u0915 \u092c\u0948\u0902\u0915 \u0916\u093e\u0924\u093e \u092c\u0928\u093e\u0928\u093e\naccount1 = BankAccount(\"Alice\")\naccount1.deposit(100)\naccount1.withdraw(50)\naccount1.check_balance()\n</code></pre>"},{"location":"hi/chapters/chapter05/#_6","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>deposit()</code> \u0916\u093e\u0924\u0947 \u0915\u0947 \u092c\u0948\u0932\u0947\u0902\u0938 \u0915\u094b \u092c\u0922\u093c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li><code>withdraw()</code> \u092c\u0948\u0932\u0947\u0902\u0938 \u0915\u094b \u0918\u091f\u093e\u0924\u093e \u0939\u0948 \u092f\u0926\u093f \u092a\u0930\u094d\u092f\u093e\u092a\u094d\u0924 \u0927\u0928\u0930\u093e\u0936\u093f \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948\u0964</li> <li><code>check_balance()</code> \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092c\u0948\u0932\u0947\u0902\u0938 \u0915\u094b \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter05/#_7","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0905\u092a\u0928\u0947 OOP \u091c\u094d\u091e\u093e\u0928 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092f\u0939 \u0915\u094d\u0935\u093f\u091c\u093c \u0906\u091c\u093c\u092e\u093e\u090f\u0902:</p> <ol> <li> <p>Python \u092e\u0947\u0902 class \u0915\u094d\u092f\u093e \u0939\u0948?     A. Objects \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u094d\u0932\u0942\u092a\u094d\u0930\u093f\u0902\u091f     B. Functions \u0915\u0940 \u090f\u0915 \u0938\u0942\u091a\u0940     C. \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e loop  </p> </li> <li> <p>\u0935\u0939 \u0935\u093f\u0936\u0947\u0937 method \u0915\u094d\u092f\u093e \u0915\u0939\u0932\u093e\u0924\u093e \u0939\u0948 \u091c\u094b class \u0915\u094b initialize \u0915\u0930\u0924\u093e \u0939\u0948?     A. <code>__init__</code>     B. <code>start</code>     C. <code>main</code> </p> </li> <li> <p>\u0915\u093f\u0938 \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0926\u0942\u0938\u0930\u0940 class \u0938\u0947 inherit \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. extend     B. inherit     C. super  </p> </li> </ol>"},{"location":"hi/chapters/chapter05/#_8","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>A</li> <li>A</li> <li>C</li> </ol>"},{"location":"hi/chapters/chapter05/#_9","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a Python \u092e\u0947\u0902 OOP \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0914\u0930 \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Python OOP Documentation</p> <p>\u0905\u0917\u0932\u0947 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Python \u0915\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0947\u0902\u0917\u0947, \u091c\u093f\u0938\u092e\u0947\u0902 \u092f\u0939 data science, automation, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f artificial intelligence \u092e\u0947\u0902 \u0915\u0948\u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u092f\u0939 \u091c\u093e\u0928\u0947\u0902\u0917\u0947!</p>"},{"location":"hi/chapters/chapter06/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 6: Python \u0915\u093e \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917","text":"<p>Python \u0915\u0947\u0935\u0932 \u0936\u0941\u0930\u0941\u0906\u0924\u0940 \u0932\u094b\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0939\u0940 \u0928\u0939\u0940\u0902 \u0939\u0948\u2014\u0907\u0938\u0947 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0909\u0926\u094d\u092f\u094b\u0917\u094b\u0902 \u092e\u0947\u0902 \u092a\u0947\u0936\u0947\u0935\u0930\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0908 \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u091c\u093e\u0928\u0947\u0902\u0917\u0947 \u0915\u093f Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 data science, automation, web scraping, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f artificial intelligence (AI) \u092e\u0947\u0902 \u0915\u0948\u0938\u0947 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0906\u0907\u090f Python \u0915\u0947 \u0907\u0928 \u092e\u091c\u0947\u0926\u093e\u0930 \u0914\u0930 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u0909\u092a\u092f\u094b\u0917\u094b\u0902 \u092e\u0947\u0902 \u0917\u094b\u0924\u093e \u0932\u0917\u093e\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter06/#data-science-python","title":"Data Science \u0915\u0947 \u0932\u093f\u090f Python","text":"<p>Data science \u0915\u093e \u092e\u0924\u0932\u092c \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0914\u0930 \u0909\u0938\u0947 \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c \u0915\u0930\u0915\u0947 insights \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948\u0964 Python \u092e\u0947\u0902 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 libraries \u091c\u0948\u0938\u0947 Pandas \u0914\u0930 Matplotlib \u0939\u0948\u0902 \u091c\u094b \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u093e \u0906\u0938\u093e\u0928 \u0914\u0930 \u092e\u091c\u0947\u0926\u093e\u0930 \u092c\u0928\u093e\u0924\u0940 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter06/#pandas-data","title":"Pandas \u0915\u093e \u0909\u092a\u092f\u094b\u0917: Data \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923","text":"<p>Pandas library \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0938\u094d\u0935\u093f\u0938 \u0906\u0930\u094d\u092e\u0940 \u0928\u093e\u0907\u092b \u0915\u0940 \u0924\u0930\u0939 \u0939\u0948\u0964 \u0906\u092a \u0907\u0938\u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u094b DataFrames (\u0907\u0928\u094d\u0939\u0947\u0902 Excel sheets \u0915\u0940 \u0924\u0930\u0939 \u0938\u092e\u091d\u0947\u0902) \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0906\u0938\u093e\u0928\u0940 \u0938\u0947 \u0909\u0928\u0915\u093e \u0939\u0947\u0930\u092b\u0947\u0930 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u094d\u0915\u0942\u0932 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923","text":"<pre><code>import pandas as pd\n\n# \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u093e \u090f\u0915 DataFrame \u092c\u0928\u093e\u0928\u093e\ndata = {\n    \"Student\": [\"Alice\", \"Bob\", \"Charlie\", \"David\"],\n    \"Math\": [85, 92, 78, 90],\n    \"Science\": [88, 95, 80, 85]\n}\n\ngrades = pd.DataFrame(data)\nprint(grades)\n\n# \u0914\u0938\u0924 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u093e\ngrades[\"Average\"] = (grades[\"Math\"] + grades[\"Science\"]) / 2\nprint(\"\\nAverage Grades:\")\nprint(grades)\n</code></pre>"},{"location":"hi/chapters/chapter06/#_2","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>pandas.DataFrame</code> \u0906\u092a\u0915\u094b \u0921\u0947\u091f\u093e \u0915\u0940 \u0924\u093e\u0932\u093f\u0915\u093e \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>\u0939\u092e \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0914\u0938\u0924 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0909\u0938 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u094b DataFrame \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#matplotlib-data","title":"Matplotlib \u0915\u093e \u0909\u092a\u092f\u094b\u0917: Data \u0915\u094b \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c \u0915\u0930\u0928\u093e","text":"<p>\u0921\u0947\u091f\u093e \u0915\u094b \u0938\u092e\u091d\u0928\u093e \u0905\u0915\u094d\u0938\u0930 \u0924\u092c \u0906\u0938\u093e\u0928 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u092c \u0906\u092a \u0907\u0938\u0947 \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 Matplotlib library \u0906\u092a\u0915\u094b \u0938\u0941\u0902\u0926\u0930 \u091a\u093e\u0930\u094d\u091f\u094d\u0938 \u0914\u0930 \u0917\u094d\u0930\u093e\u092b\u093c \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#bar-chart","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u093e Bar Chart \u092c\u0928\u093e\u0928\u093e","text":"<pre><code>import matplotlib.pyplot as plt\n\nstudents = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\nmath_grades = [85, 92, 78, 90]\n\nplt.bar(students, math_grades)\nplt.xlabel(\"Students\")\nplt.ylabel(\"Math Grades\")\nplt.title(\"Math Grades of Students\")\nplt.show()\n</code></pre>"},{"location":"hi/chapters/chapter06/#_3","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li><code>plt.bar()</code> \u090f\u0915 bar chart \u092c\u0928\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 math \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u0939\u092e x-axis \u0914\u0930 y-axis \u0915\u0947 \u0932\u093f\u090f labels \u0914\u0930 \u090f\u0915 \u0936\u0940\u0930\u094d\u0937\u0915 \u091c\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#web-automation-python","title":"Web Automation \u0915\u0947 \u0932\u093f\u090f Python","text":"<p>Python \u0906\u092a\u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u0906\u092a \u0907\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0926\u094b\u0939\u0930\u093e\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 \u092b\u0949\u0930\u094d\u092e \u092d\u0930\u0928\u093e \u092f\u093e \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u0938\u0947 \u0921\u0947\u091f\u093e \u0938\u094d\u0915\u094d\u0930\u0948\u092a \u0915\u0930\u0928\u093e\u0964</p>"},{"location":"hi/chapters/chapter06/#selenium-web-browsing","title":"Selenium \u0915\u093e \u0909\u092a\u092f\u094b\u0917: Web Browsing \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e","text":"<p>Selenium \u090f\u0915 Python library \u0939\u0948 \u091c\u094b \u0906\u092a\u0915\u094b \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0917\u0924\u093f\u0935\u093f\u0927\u093f\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964 \u092f\u0939 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u092a\u0930 \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0928\u0947 \u092f\u093e \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u090f\u0915\u0924\u094d\u0930 \u0915\u0930\u0928\u0947 \u091c\u0948\u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0930\u093f\u092a\u0942\u0930\u094d\u0923 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter06/#google","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Google \u0938\u0930\u094d\u091a \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e (\u0938\u0930\u0932 \u0909\u0926\u093e\u0939\u0930\u0923)","text":"<pre><code>from selenium import webdriver\n\n# \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0938\u0947\u091f\u0905\u092a \u0915\u0930\u0928\u093e\nbrowser = webdriver.Chrome()\n\n# Google \u0915\u093e homepage \u0916\u094b\u0932\u0947\u0902\nbrowser.get('http://www.google.com')\n\n# Search \u092c\u0949\u0915\u094d\u0938 \u0915\u094b \u0907\u0938\u0915\u0947 name attribute \u0938\u0947 \u0922\u0942\u0902\u0922\u0947\u0902\nsearch_box = browser.find_element(\"name\", \"q\")\n\n# \u0938\u0930\u094d\u091a \u0915\u094d\u0935\u0947\u0930\u0940 \u091f\u093e\u0907\u092a \u0915\u0930\u0947\u0902 \u0914\u0930 \u090f\u0902\u091f\u0930 \u0926\u092c\u093e\u090f\u0902\nsearch_box.send_keys('Python programming')\nsearch_box.submit()\n\n# \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0905\u092c 'Python programming' \u0915\u0947 \u0938\u0930\u094d\u091a \u092a\u0930\u093f\u0923\u093e\u092e \u0926\u093f\u0916\u093e\u090f\u0917\u093e\n</code></pre>"},{"location":"hi/chapters/chapter06/#_4","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>Selenium \u090f\u0915 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0916\u094b\u0932\u0924\u093e \u0939\u0948 \u0914\u0930 Google \u092a\u0930 \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u092f\u0939 \u0938\u0930\u094d\u091a \u092c\u0949\u0915\u094d\u0938 \u0922\u0942\u0902\u0922\u0924\u093e \u0939\u0948, \u0938\u0930\u094d\u091a \u0915\u094d\u0935\u0947\u0930\u0940 \u0926\u0930\u094d\u091c \u0915\u0930\u0924\u093e \u0939\u0948, \u0914\u0930 \u0938\u0930\u094d\u091a \u0938\u092c\u092e\u093f\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#artificial-intelligence-ai-python","title":"Artificial Intelligence (AI) \u0915\u0947 \u0932\u093f\u090f Python","text":"<p>Python artificial intelligence \u0915\u0947 \u0932\u093f\u090f \u0938\u092c\u0938\u0947 \u0932\u094b\u0915\u092a\u094d\u0930\u093f\u092f \u092d\u093e\u0937\u093e\u0913\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0939\u0948\u0964 TensorFlow \u0914\u0930 scikit-learn \u091c\u0948\u0938\u0940 libraries \u0906\u092a\u0915\u094b \u0910\u0938\u0947 \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0902 \u091c\u094b \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u094b \u092a\u0939\u091a\u093e\u0928 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0921\u0947\u091f\u093e \u0915\u094b \u0935\u0930\u094d\u0917\u0940\u0915\u0943\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0928\u093f\u0930\u094d\u0923\u092f \u092d\u0940 \u0932\u0947 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#scikit-learn-ai","title":"Scikit-Learn \u0915\u093e \u0909\u092a\u092f\u094b\u0917: \u090f\u0915 \u0938\u0930\u0932 AI \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0928\u093e","text":"<p>\u0906\u0907\u090f scikit-learn \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u0930\u0932 \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092f\u0939 \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u0924\u093e \u0939\u0948 \u0915\u093f \u0935\u0939 \u092a\u093e\u0938 \u0939\u094b\u0917\u093e \u092f\u093e \u092b\u0947\u0932\u0964</p>"},{"location":"hi/chapters/chapter06/#ai","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u092a\u093e\u0938/\u092b\u0947\u0932 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0947 \u0932\u093f\u090f \u0938\u0930\u0932 AI \u092e\u0949\u0921\u0932","text":"<pre><code>from sklearn.tree import DecisionTreeClassifier\n\n# \u0921\u0947\u091f\u093e: Math \u0914\u0930 Science \u092e\u0947\u0902 \u0917\u094d\u0930\u0947\u0921\u094d\u0938\nX = [[85, 88], [92, 95], [78, 80], [90, 85], [60, 55]]\n# \u0932\u0947\u092c\u0932\u094d\u0938: 1 \u092a\u093e\u0938 \u0915\u0947 \u0932\u093f\u090f, 0 \u092b\u0947\u0932 \u0915\u0947 \u0932\u093f\u090f\ny = [1, 1, 1, 1, 0]\n\n# Decision Tree classifier \u092c\u0928\u093e\u0928\u093e\nclf = DecisionTreeClassifier()\nclf = clf.fit(X, y)\n\n# \u0928\u090f \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u092a\u093e\u0938/\u092b\u0947\u0932 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930\u0928\u093e\nnew_student_grades = [[70, 75]]\nprediction = clf.predict(new_student_grades)\nif prediction == 1:\n    print(\"\u091b\u093e\u0924\u094d\u0930 \u092a\u093e\u0938 \u0939\u094b \u0917\u092f\u093e!\")\nelse:\n    print(\"\u091b\u093e\u0924\u094d\u0930 \u092b\u0947\u0932 \u0939\u094b \u0917\u092f\u093e\u0964\")\n</code></pre>"},{"location":"hi/chapters/chapter06/#_5","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>DecisionTreeClassifier \u090f\u0915 \u0938\u0930\u0932 \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092a\u093e\u0938 \u092f\u093e \u092b\u0947\u0932 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u0939\u092e \u0907\u0938 \u092e\u0949\u0921\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092f\u0939 \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0928\u092f\u093e \u091b\u093e\u0924\u094d\u0930 \u092a\u093e\u0938 \u0939\u094b\u0917\u093e \u092f\u093e \u092b\u0947\u0932\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#emails","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 Emails \u092d\u0947\u091c\u0928\u093e","text":"<p>\u0906\u0907\u090f \u0915\u0941\u091b \u092e\u091c\u0947\u0926\u093e\u0930 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0947\u0902\u2014Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 email \u092d\u0947\u091c\u0947\u0902! \u0939\u092e smtplib library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 Gmail \u0916\u093e\u0924\u0947 \u0938\u0947 \u090f\u0915 email \u092d\u0947\u091c\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter06/#email","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Email \u092d\u0947\u091c\u0928\u093e","text":"<pre><code>import smtplib\n\n# \u0938\u0930\u094d\u0935\u0930 \u0938\u0947\u091f \u0915\u0930\u0947\u0902\nserver = smtplib.SMTP('smtp.gmail.com', 587)\nserver.starttls()\n\n# \u0905\u092a\u0928\u0947 Gmail \u0916\u093e\u0924\u0947 \u092e\u0947\u0902 \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902 (\u0905\u092a\u0928\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932\u094d\u0938 \u0938\u0947 \u092c\u0926\u0932\u0947\u0902)\nserver.login(\"youremail@gmail.com\", \"yourpassword\")\n\n# Email \u092d\u0947\u091c\u0928\u093e\nsubject = \"Python Email Automation\"\nbody = \"\u0928\u092e\u0938\u094d\u0924\u0947! \u092f\u0939 \u0908\u092e\u0947\u0932 Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0939\u0948!\"\nmsg = f\"Subject: {subject}\\n\\n{body}\"\nserver.sendmail(\"youremail@gmail.com\", \"receiveremail@gmail.com\", msg)\n\nprint(\"Email \u092d\u0947\u091c\u093e \u0917\u092f\u093e!\")\nserver.quit()\n</code></pre>"},{"location":"hi/chapters/chapter06/#_6","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li><code>smtplib</code> \u090f\u0915 email \u0938\u0930\u094d\u0935\u0930 \u0938\u0947\u091f \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u090f\u0915 email \u092d\u0947\u091c\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0935\u093f\u0937\u092f \u0914\u0930 \u0938\u0902\u0926\u0947\u0936 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> </ul> <p>\u0927\u094d\u092f\u093e\u0928 \u0926\u0947\u0902: \u0907\u0938 \u0915\u093e\u092e \u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 Gmail \u0916\u093e\u0924\u0947 \u092e\u0947\u0902 \"\u0915\u092e \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0910\u092a \u090f\u0915\u094d\u0938\u0947\u0938\" \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter06/#birthday-reminders","title":"\u092e\u093f\u0928\u0940 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: Birthday Reminders \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e","text":"<p>\u0907\u0938 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f, \u0939\u092e \u090f\u0915 \u0938\u0930\u0932 \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u092c\u0928\u093e\u090f\u0902\u0917\u0947 \u091c\u094b \u0906\u092a\u0915\u094b \u0906\u0928\u0947 \u0935\u093e\u0932\u0947 \u091c\u0928\u094d\u092e\u0926\u093f\u0928\u094b\u0902 \u0915\u0940 \u092f\u093e\u0926 \u0926\u093f\u0932\u093e\u090f\u0917\u0940\u0964 \u0906\u092a \u0905\u092a\u0928\u0947 \u0926\u094b\u0938\u094d\u0924\u094b\u0902 \u0915\u0947 \u091c\u0928\u094d\u092e\u0926\u093f\u0928\u094b\u0902 \u0915\u094b \u090f\u0915 \u092b\u093e\u0907\u0932 \u092e\u0947\u0902 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u091c\u093e\u0902\u091a \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0906\u091c \u0915\u094b\u0908 \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0939\u0948 \u092f\u093e \u0928\u0939\u0940\u0902\u0964</p>"},{"location":"hi/chapters/chapter06/#birthday-reminder-system","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Birthday Reminder System","text":"<pre><code>import smtplib\nfrom datetime import datetime\n\nbirthdays = {\n    \"Alice\": \"03-25\",\n    \"Bob\": \"09-18\",\n    \"Charlie\": \"12-01\"\n}\n\ntoday = datetime.today().strftime(\"%m-%d\")\n\nfor friend, bday in birthdays.items():\n    if bday == today:\n        server = smtplib.SMTP('smtp.gmail.com', 587)\n        server.starttls()\n        server.login(\"youremail@gmail.com\", \"yourpassword\")\n\n        subject = \"Birthday Reminder\"\n        body = f\"\u0905\u0930\u0947, \u0906\u091c {friend} \u0915\u094b \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0915\u0940 \u0936\u0941\u092d\u0915\u093e\u092e\u0928\u093e\u090f\u0902 \u0926\u0947\u0928\u093e \u092e\u0924 \u092d\u0942\u0932\u0928\u093e!\"\n        msg = f\"Subject: {subject}\\n\\n{body}\"\n\n        server.sendmail(\"youremail@gmail.com\", \"youremail@gmail.com\", msg)\n        print(f\"{friend} \u0915\u0947 \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0915\u0947 \u0932\u093f\u090f Reminder \u092d\u0947\u091c\u093e \u0917\u092f\u093e!\")\n        server.quit()\n</code></pre>"},{"location":"hi/chapters/chapter06/#_7","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u091c\u093e\u0902\u091a\u0924\u0940 \u0939\u0948 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u091c \u0915\u0940 \u0924\u093e\u0930\u0940\u0916 \u0915\u093f\u0938\u0940 \u091c\u0928\u094d\u092e\u0926\u093f\u0928 \u0938\u0947 \u092e\u0947\u0932 \u0916\u093e\u0924\u0940 \u0939\u0948 \u0914\u0930 \u092b\u093f\u0930 \u090f\u0915 \u092f\u093e\u0926 \u0926\u093f\u0932\u093e\u0928\u0947 \u0935\u093e\u0932\u093e email \u092d\u0947\u091c\u0924\u0940 \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter06/#_8","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>Python \u0915\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0947 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0905\u092a\u0928\u0940 \u0938\u092e\u091d \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902:</p> <ol> <li> <p>Python \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. Selenium     B. Pandas     C. Scikit-learn  </p> </li> <li> <p>\u0915\u094c\u0928 \u0938\u0940 Python library \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948?     A. Matplotlib     B. smtplib     C. Selenium  </p> </li> <li> <p>TensorFlow \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u0938\u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. Web Scraping     B. Artificial Intelligence     C. Data Visualization  </p> </li> </ol>"},{"location":"hi/chapters/chapter06/#_9","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>B</li> <li>C</li> <li>B</li> </ol>"},{"location":"hi/chapters/chapter06/#_10","title":"\u0906\u0917\u0947 \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f","text":"<p>\u092f\u0926\u093f \u0906\u092a \u0907\u0928 \u0935\u093f\u0937\u092f\u094b\u0902 \u092e\u0947\u0902 \u0914\u0930 \u0917\u0939\u0930\u093e\u0908 \u0938\u0947 \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0907\u0938\u0947 \u0926\u0947\u0916\u0947\u0902: - Pandas Documentation - Selenium Documentation - Scikit-learn Documentation</p> <p>\u0905\u0917\u0932\u0947 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Chapter 7: Final Projects \u092e\u0947\u0902 \u090f\u0915 \u092a\u0942\u0930\u093e Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u094b \u091a\u0930\u0923-\u0926\u0930-\u091a\u0930\u0923 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u0928 \u0915\u0930\u0947\u0902\u0917\u0947!</p>"},{"location":"hi/chapters/chapter07/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 7: \u0938\u092e\u093e\u092a\u0928 \u0914\u0930 \u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938","text":"<p>\u0906\u092a\u0928\u0947 \u092f\u0939 \u0915\u0930 \u0926\u093f\u0916\u093e\u092f\u093e!  \u0907\u0938 \u0905\u0902\u0924\u093f\u092e \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u0906\u092a\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0905\u092c \u0924\u0915 \u0938\u0940\u0916\u0947 \u0917\u090f \u092a\u094d\u0930\u092e\u0941\u0916 \u0938\u093f\u0926\u094d\u0927\u093e\u0902\u0924\u094b\u0902 \u0915\u0940 \u0938\u092e\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u0947\u0902\u0917\u0947, \u0914\u0930 \u092b\u093f\u0930 \u0906\u092a \u0905\u092a\u0928\u0940 \u0916\u0941\u0926 \u0915\u0940 Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092c\u0928\u093e\u0915\u0930 \u0909\u0928 \u0915\u094c\u0936\u0932\u094b\u0902 \u0915\u094b \u0932\u093e\u0917\u0942 \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u091a\u093f\u0902\u0924\u093e \u0928 \u0915\u0930\u0947\u0902, \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0948\u0902 \u0915\u0941\u091b \u0935\u093f\u091a\u093e\u0930 \u0926\u0942\u0902\u0917\u093e!</p>"},{"location":"hi/chapters/chapter07/#_1","title":"\u092a\u094d\u0930\u092e\u0941\u0916 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u0940 \u0938\u092e\u0940\u0915\u094d\u0937\u093e","text":"<p>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092a\u0930 \u091c\u093e\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947, \u0906\u0907\u090f \u091c\u0932\u094d\u0926\u0940 \u0938\u0947 \u0938\u092e\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0905\u092c \u0924\u0915 \u0939\u092e\u0928\u0947 \u0915\u094d\u092f\u093e \u0938\u0940\u0916\u093e \u0939\u0948:</p>"},{"location":"hi/chapters/chapter07/#1-python-basics","title":"1. Python Basics","text":"<ul> <li>Printing: <code>print()</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u094b \u0926\u093f\u0916\u093e\u0928\u093e\u0964</li> <li>Variables: \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u093e, \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u0902\u0916\u094d\u092f\u093e\u090f\u0901, strings, \u0914\u0930 booleans\u0964</li> <li>Data Structures: \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Lists, tuples, dictionaries, \u0914\u0930 sets\u0964</li> </ul>"},{"location":"hi/chapters/chapter07/#2-conditions-control-flow","title":"2. Conditions \u0914\u0930 Control Flow","text":"<ul> <li>if-else statements: \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e\u0964</li> <li>Loops: <code>for</code> \u0914\u0930 <code>while</code> loops \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter07/#3-functions-functional-programming","title":"3. Functions \u0914\u0930 Functional Programming","text":"<ul> <li>Functions \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u093e: <code>def</code> \u0915\u0947 \u0938\u093e\u0925 \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0932\u093f\u0916\u0928\u093e\u0964</li> <li>Lambda functions: \u091a\u0932\u0924\u0947-\u092b\u093f\u0930\u0924\u0947 mini-functions \u0932\u093f\u0916\u0928\u093e\u0964</li> <li>Map, Filter, Reduce: \u0921\u0947\u091f\u093e \u0915\u0940 lists \u092a\u0930 functions \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter07/#4-object-oriented-programming-oop","title":"4. Object-Oriented Programming (OOP)","text":"<ul> <li>Classes \u0914\u0930 objects: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0940 \u091a\u0940\u091c\u094b\u0902 \u0915\u094b \u092e\u0949\u0921\u0932 \u0915\u0930\u0928\u093e\u0964</li> <li>Methods \u0914\u0930 attributes: objects \u0915\u0947 \u0905\u0902\u0926\u0930 functions \u0914\u0930 \u0921\u0947\u091f\u093e\u0964</li> <li>Inheritance: \u0935\u093f\u0936\u0947\u0937 classes \u092c\u0928\u093e\u0928\u093e \u091c\u094b \u0905\u0928\u094d\u092f classes \u092a\u0930 \u0906\u0927\u093e\u0930\u093f\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter07/#5-python","title":"5. Python \u0915\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917","text":"<ul> <li>Data Science: Pandas \u0914\u0930 Matplotlib \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0914\u0930 \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c\u0947\u0936\u0928\u0964</li> <li>Automation: Selenium \u091c\u0948\u0938\u0940 libraries \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e\u0964</li> <li>AI \u0914\u0930 Machine Learning: Scikit-learn \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0930\u0932 AI \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0928\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter07/#_2","title":"\u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e\u091c","text":"<p>\u0905\u092c \u091c\u092c \u0906\u092a\u0928\u0947 \u092a\u094d\u0930\u092e\u0941\u0916 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u0940 \u0938\u092e\u0940\u0915\u094d\u0937\u093e \u0915\u0930 \u0932\u0940 \u0939\u0948, \u0924\u094b \u0915\u0941\u091b \u092e\u091c\u0947\u0926\u093e\u0930 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0940 \u091a\u0940\u091c\u093c\u0947\u0902 \u092c\u0928\u093e\u0928\u093e \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u092e\u092f \u0906 \u0917\u092f\u093e \u0939\u0948! \u092f\u0939\u093e\u0902 \u0915\u0941\u091b \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e\u091c \u0926\u093f\u090f \u0917\u090f \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u0940 \u0930\u091a\u0928\u093e\u0924\u094d\u092e\u0915\u0924\u093e \u0915\u094b \u092a\u094d\u0930\u0947\u0930\u093f\u0924 \u0915\u0930\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter07/#1-personal-assistant-program","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e 1: Personal Assistant Program","text":"<p>Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u0906\u092a\u0915\u093e personal assistant \u0939\u094b\u0964 \u092f\u0939 \u0906\u092a\u0915\u094b \u0926\u0948\u0928\u093f\u0915 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u091c\u0948\u0938\u0947 \u0930\u093f\u092e\u093e\u0907\u0902\u0921\u0930 \u0938\u0947\u091f \u0915\u0930\u0928\u093e, \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0916\u094b\u091c\u0928\u093e, \u092f\u093e \u092e\u091c\u0947\u0926\u093e\u0930 \u091a\u0941\u091f\u0915\u0941\u0932\u0947 \u0938\u0941\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948!</p> <p>\u0938\u0941\u091d\u093e\u090f \u0917\u090f \u092b\u0940\u091a\u0930\u094d\u0938: - \u090f\u0915 \u092e\u0947\u0928\u0942 \u091c\u094b \u0906\u092a\u0915\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u091a\u0941\u0928\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 - \u0918\u091f\u0928\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u0930\u093f\u092e\u093e\u0907\u0902\u0921\u0930 \u0938\u0947\u091f \u0915\u0930\u0947\u0902 (\u091c\u0948\u0938\u0947 \u0909\u0928\u094d\u0939\u0947\u0902 \u090f\u0915 text file \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u093e)\u0964 - \u092e\u094c\u0938\u092e \u0915\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u0947\u0916\u0947\u0902 (\u0906\u092a OpenWeatherMap API \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902)\u0964 - \u090f\u0915 \u092f\u093e\u0926\u0943\u091a\u094d\u091b\u093f\u0915 \u091a\u0941\u091f\u0915\u0941\u0932\u093e \u092f\u093e \u092a\u094d\u0930\u0947\u0930\u0923\u093e\u0926\u093e\u092f\u0915 quote \u0926\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter07/#_3","title":"\u0915\u094b\u0921 \u0936\u0941\u0930\u0941\u0906\u0924:","text":"<pre><code>import time\n\ndef set_reminder(reminder, minutes):\n    print(f\"Reminder set: {reminder} in {minutes} minutes.\")  \n    time.sleep(minutes * 60)  \n    print(f\"Reminder: {reminder}\")  \n\ndef tell_joke():\n    jokes = [\"Why did the chicken cross the road? To get to the other side!\",  \n             \"Why don't skeletons fight each other? They don't have the guts!\"]  \n    print(random.choice(jokes))  \n\n# \u0914\u0930 \u092b\u0940\u091a\u0930\u094d\u0938 \u091c\u094b\u0921\u093c\u0947\u0902, \u091c\u0948\u0938\u0947 \u0938\u092e\u092f \u0926\u0947\u0916\u0928\u093e \u092f\u093e \u090f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u0930\u093f\u092e\u093e\u0907\u0902\u0921\u0930 \u0938\u0947\u091f \u0915\u0930\u0928\u093e\u0964\n</code></pre>"},{"location":"hi/chapters/chapter07/#2-tic-tac-toe","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e 2: \u0938\u0930\u0932 \u0916\u0947\u0932 (Tic-Tac-Toe)","text":"<p>\u0915\u094d\u0932\u093e\u0938\u093f\u0915 Tic-Tac-Toe \u0916\u0947\u0932 \u0915\u093e Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u092c\u0928\u093e\u090f\u0902\u0964 \u0926\u094b \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u092c\u093e\u0930\u0940-\u092c\u093e\u0930\u0940 \u0938\u0947 \u092c\u094b\u0930\u094d\u0921 \u092a\u0930 \u0928\u093f\u0936\u093e\u0928 \u0932\u0917\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0935\u093f\u091c\u0947\u0924\u093e \u0915\u0940 \u0918\u094b\u0937\u0923\u093e \u0915\u0930\u0947\u0917\u093e\u0964</p> <p>\u0938\u0941\u091d\u093e\u090f \u0917\u090f \u092b\u0940\u091a\u0930\u094d\u0938: - \u090f\u0915 3x3 \u0917\u094d\u0930\u093f\u0921 \u091c\u094b \u0916\u0947\u0932 \u0915\u093e \u092c\u094b\u0930\u094d\u0921 \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948\u0964 - \u0916\u093f\u0932\u093e\u0921\u093c\u093f\u092f\u094b\u0902 \u0915\u094b \u0909\u0928\u0915\u0947 \u091a\u093e\u0932\u0947\u0902 \u0926\u0930\u094d\u091c \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902 \u0914\u0930 \u092c\u094b\u0930\u094d\u0921 \u0915\u094b \u0905\u092a\u0921\u0947\u091f \u0915\u0930\u0947\u0902\u0964 - \u092a\u0924\u093e \u0932\u0917\u093e\u090f\u0902 \u0915\u093f \u0915\u092c \u090f\u0915 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u091c\u0940\u0924\u0924\u093e \u0939\u0948 \u092f\u093e \u0916\u0947\u0932 \u0921\u094d\u0930\u0949 \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter07/#_4","title":"\u0915\u094b\u0921 \u0936\u0941\u0930\u0941\u0906\u0924:","text":"<pre><code>def print_board(board):\n    for row in board:\n        print(\" | \".join(row))  \n\ndef check_winner(board):\n    # \u0935\u093f\u091c\u0947\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u094b\u0902, \u0938\u094d\u0924\u0902\u092d\u094b\u0902, \u0914\u0930 \u0935\u093f\u0915\u0930\u094d\u0923\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902  \n    pass\n\nboard = [[\" \" for _ in range(3)] for _ in range(3)]  \n\n# \u0916\u093f\u0932\u093e\u0921\u093c\u093f\u092f\u094b\u0902 \u0915\u094b \u091a\u093e\u0932\u0947\u0902 \u0926\u0930\u094d\u091c \u0915\u0930\u0928\u0947 \u0926\u0947\u0902 \u0914\u0930 \u0905\u092a\u0921\u0947\u091f \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u092c\u094b\u0930\u094d\u0921 \u0926\u093f\u0916\u093e\u090f\u0902\nprint_board(board)\n</code></pre>"},{"location":"hi/chapters/chapter07/#3-expense-tracker","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e 3: Expense Tracker","text":"<p>\u090f\u0915 expense tracker \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 \u0935\u093f\u0924\u094d\u0924 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0947\u0964 \u0906\u092a \u0905\u092a\u0928\u0947 \u0916\u0930\u094d\u091a\u094b\u0902 \u0914\u0930 \u0906\u092f \u0915\u094b \u0932\u0949\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0909\u0928\u094d\u0939\u0947\u0902 \u0936\u094d\u0930\u0947\u0923\u0940\u092c\u0926\u094d\u0927 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0915\u0941\u0932 \u0930\u093e\u0936\u093f \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0938\u0941\u091d\u093e\u090f \u0917\u090f \u092b\u0940\u091a\u0930\u094d\u0938: - \u0916\u0930\u094d\u091a \u091c\u094b\u0921\u093c\u0947\u0902, \u0926\u0947\u0916\u0947\u0902, \u0914\u0930 \u0939\u091f\u093e\u090f\u0902\u0964 - \u0915\u0941\u0932 \u0916\u0930\u094d\u091a \u0914\u0930 \u0915\u0941\u0932 \u0906\u092f \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0947\u0902\u0964 - \u0916\u0930\u094d\u091a\u094b\u0902 \u0915\u094b \u0936\u094d\u0930\u0947\u0923\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0947\u0902 (\u091c\u0948\u0938\u0947, food, entertainment, \u0906\u0926\u093f)\u0964</p>"},{"location":"hi/chapters/chapter07/#_5","title":"\u0915\u094b\u0921 \u0936\u0941\u0930\u0941\u0906\u0924:","text":"<pre><code>expenses = []\n\ndef add_expense(description, amount):\n    expenses.append({\"description\": description, \"amount\": amount})  \n    print(f\"\u091c\u094b\u0921\u093c\u093e \u0917\u092f\u093e: {description} - ${amount}\")  \n\ndef view_expenses():\n    for expense in expenses:  \n        print(f\"{expense['description']}: ${expense['amount']}\")  \n\n# \u0906\u092f \u091c\u094b\u0921\u093c\u0947\u0902, \u0916\u0930\u094d\u091a\u094b\u0902 \u0915\u094b \u0936\u094d\u0930\u0947\u0923\u0940\u092c\u0926\u094d\u0927 \u0915\u0930\u0947\u0902, \u0914\u0930 \u0915\u0941\u0932 \u0930\u093e\u0936\u093f \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0947\u0902\n</code></pre>"},{"location":"hi/chapters/chapter07/#4-weather-app","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e 4: Weather App","text":"<p>\u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092c\u0928\u093e\u090f\u0902 \u091c\u094b OpenWeatherMap API \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0936\u0939\u0930 \u0915\u0947 \u0932\u093f\u090f \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092e\u094c\u0938\u092e \u0915\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> <p>\u0938\u0941\u091d\u093e\u090f \u0917\u090f \u092b\u0940\u091a\u0930\u094d\u0938: - \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0936\u0939\u0930 \u0915\u093e \u0928\u093e\u092e \u092a\u0942\u091b\u0947\u0902\u0964 - API \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0947\u0902\u0964 - \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0924\u093e\u092a\u092e\u093e\u0928, \u0906\u0930\u094d\u0926\u094d\u0930\u0924\u093e, \u0914\u0930 \u092e\u094c\u0938\u092e \u0915\u0940 \u0938\u094d\u0925\u093f\u0924\u093f \u0926\u093f\u0916\u093e\u090f\u0902\u0964</p>"},{"location":"hi/chapters/chapter07/#_6","title":"\u0915\u094b\u0921 \u0936\u0941\u0930\u0941\u0906\u0924:","text":"<pre><code>import requests\n\ndef get_weather(city):\n    api_key = \"your_api_key\"  \n    url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={api_key}&amp;units=metric\"  \n    response = requests.get(url)  \n    data = response.json()  \n\n    if data[\"cod\"] != \"404\":  \n        main = data[\"main\"]  \n        weather = data[\"weather\"][0]  \n        print(f\"City: {city}\")  \n        print(f\"Temperature: {main['temp']}\u00b0C\")  \n        print(f\"Humidity: {main['humidity']}%\")  \n        print(f\"Weather: {weather['description']}\")  \n    else:\n        print(\"City not found!\")  \n\n# \u090f\u0915 \u0936\u0939\u0930 \u0915\u0947 \u0938\u093e\u0925 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0947\u0902\nget_weather(\"New York\")\n</code></pre>"},{"location":"hi/chapters/chapter07/#5-flashcard-quiz-game","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e 5: Flashcard Quiz Game","text":"<p>\u090f\u0915 flashcard quiz game \u092c\u0928\u093e\u090f\u0902 \u091c\u0939\u093e\u0902 \u0906\u092a \u0936\u092c\u094d\u0926\u093e\u0935\u0932\u0940 \u092f\u093e \u0910\u0924\u093f\u0939\u093e\u0938\u093f\u0915 \u0924\u0925\u094d\u092f\u094b\u0902 \u091c\u0948\u0938\u0947 \u0935\u093f\u0937\u092f\u094b\u0902 \u0915\u093e \u0905\u0927\u094d\u092f\u092f\u0928 \u0915\u0930 \u0938\u0915\u0947\u0902\u0964 \u0906\u092a \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u094b \u090f\u0915 \u092b\u093c\u093e\u0907\u0932 \u0938\u0947 \u0932\u094b\u0921 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0909\u0924\u094d\u0924\u0930 \u092a\u0942\u091b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0909\u0928\u0915\u093e \u0938\u094d\u0915\u094b\u0930 \u091f\u094d\u0930\u0948\u0915 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> <p>\u0938\u0941\u091d\u093e\u090f \u0917\u090f \u092b\u0940\u091a\u0930\u094d\u0938: - flashcards (\u092a\u094d\u0930\u0936\u094d\u0928 \u0914\u0930 \u0909\u0924\u094d\u0924\u0930) \u0915\u094b \u090f\u0915 \u092b\u093c\u093e\u0907\u0932 \u0938\u0947 \u0932\u094b\u0921 \u0915\u0930\u0947\u0902\u0964 - \u092a\u094d\u0930\u0936\u094d\u0928 \u092a\u0942\u091b\u0947\u0902 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u093e \u0907\u0928\u092a\u0941\u091f \u0932\u0947\u0902\u0964 - \u0938\u094d\u0915\u094b\u0930 \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0926\u093f\u0916\u093e\u090f\u0902\u0964</p>"},{"location":"hi/chapters/chapter07/#_7","title":"\u0915\u094b\u0921 \u0936\u0941\u0930\u0941\u0906\u0924:","text":"<pre><code>flashcards = {\"What is the capital of France?\": \"Paris\",\n              \"What is 2 + 2?\": \"4\",  \n              \"Who wrote '1984'?\": \"George Orwell\"}  \n\ndef quiz(flashcards):\n    score = 0\n    for question, answer in flashcards.items():  \n        user_answer = input(question + \" \")  \n        if user_answer.lower() == answer.lower():  \n            print(\"\u0938\u0939\u0940!\")\n            score += 1  \n        else:  \n            print(f\"\u0917\u0932\u0924! \u0909\u0924\u094d\u0924\u0930 \u0939\u0948 {answer}\")  \n\n    print(f\"\u0906\u092a\u0915\u093e \u0938\u094d\u0915\u094b\u0930: {score}/{len(flashcards)}\")  \n\n# \u0915\u094d\u0935\u093f\u091c\u093c \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902\nquiz(flashcards)\n</code></pre>"},{"location":"hi/chapters/chapter07/#_8","title":"\u0905\u0902\u0924\u093f\u092e \u0935\u093f\u091a\u093e\u0930","text":"<p>Python \u090f\u0915 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 \u092d\u093e\u0937\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0905\u0902\u0924\u0939\u0940\u0928 \u0938\u0902\u092d\u093e\u0935\u0928\u093e\u090f\u0901 \u0939\u0948\u0902\u0964 \u0906\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0915\u0940 \u092e\u0942\u0932 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u094b \u0938\u0940\u0916\u093e, \u092f\u0939 \u0926\u0947\u0916\u093e \u0915\u093f Python \u0915\u093e \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948, \u0914\u0930 \u0930\u093e\u0938\u094d\u0924\u0947 \u092e\u0947\u0902 \u0915\u0941\u091b \u092e\u091c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092c\u0928\u093e\u090f\u0964 \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u0924\u094b \u0915\u0947\u0935\u0932 \u0936\u0941\u0930\u0941\u0906\u0924 \u0939\u0948!</p> <p>\u092f\u0939\u093e\u0902 \u0915\u0941\u091b \u092c\u093e\u0924\u0947\u0902 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a \u0906\u0917\u0947 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902: - \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092c\u0928\u093e\u0924\u0947 \u0930\u0939\u0947\u0902! \u091c\u093f\u0924\u0928\u093e \u0905\u0927\u093f\u0915 \u0906\u092a \u0915\u094b\u0921 \u0915\u0930\u0947\u0902\u0917\u0947, \u0909\u0924\u0928\u093e \u0939\u0940 \u092c\u0947\u0939\u0924\u0930 \u0939\u094b\u0924\u0947 \u091c\u093e\u090f\u0902\u0917\u0947\u0964 - Python \u0915\u0940 \u0905\u0926\u094d\u092d\u0941\u0924 libraries \u091c\u0948\u0938\u0947 Flask (web development \u0915\u0947 \u0932\u093f\u090f), PyGame (game development \u0915\u0947 \u0932\u093f\u090f), \u0914\u0930 TensorFlow (AI \u0915\u0947 \u0932\u093f\u090f) \u0915\u094b \u090f\u0915\u094d\u0938\u092a\u094d\u0932\u094b\u0930 \u0915\u0930\u0947\u0902\u0964 - \u0911\u0928\u0932\u093e\u0907\u0928 \u0915\u094b\u0921\u093f\u0902\u0917 \u0938\u092e\u0941\u0926\u093e\u092f\u094b\u0902 \u0938\u0947 \u091c\u0941\u0921\u093c\u0947\u0902, \u091c\u0939\u093e\u0902 \u0906\u092a \u0905\u092a\u0928\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0938\u093e\u091d\u093e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0926\u0942\u0938\u0930\u094b\u0902 \u0938\u0947 \u0938\u0940\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter07/#_9","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0907\u0938\u0947 \u092a\u0942\u0930\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0905\u0902\u0924\u093f\u092e \u0915\u094d\u0935\u093f\u091c\u093c:</p> <ol> <li> <p>Pandas library \u0915\u093e \u090f\u0915 \u0909\u092a\u092f\u094b\u0917 \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u0935\u0947\u092c \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935 \u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e     B. \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u093e     C. \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u093e  </p> </li> <li> <p>Python \u092e\u0947\u0902 \u090f\u0915 class \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u0940 method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. class     B. def     C. init  </p> </li> <li> <p>Python \u092e\u0947\u0902 loop \u0915\u093e \u092e\u0941\u0916\u094d\u092f \u0915\u093e\u0930\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e     B. \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0926\u094b\u0939\u0930\u093e\u0928\u093e     C. \u0921\u0947\u091f\u093e \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u093e  </p> </li> </ol>"},{"location":"hi/chapters/chapter07/#_10","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>B</li> <li>A</li> <li>B</li> </ol>"},{"location":"hi/chapters/chapter07/#_11","title":"\u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0938\u092c\u092e\u093f\u0936\u0928","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u0938\u0947 \u090f\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u091a\u0941\u0928\u0947\u0902, \u092f\u093e \u0905\u092a\u0928\u093e \u0916\u0941\u0926 \u0915\u093e \u0935\u093f\u091a\u093e\u0930 \u0915\u0930\u0947\u0902! \u090f\u0915 \u092c\u093e\u0930 \u091c\u092c \u0906\u092a \u0905\u092a\u0928\u093e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u092c\u0928\u093e \u0932\u0947\u0902, \u0924\u094b \u0907\u0938\u0947 \u0905\u092a\u0928\u0947 \u0938\u0939\u092a\u093e\u0920\u093f\u092f\u094b\u0902, \u0926\u094b\u0938\u094d\u0924\u094b\u0902, \u092f\u093e \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0911\u0928\u0932\u093e\u0907\u0928 \u0938\u092e\u0941\u0926\u093e\u092f\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0938\u093e\u091d\u093e \u0915\u0930\u0947\u0902\u0964 \u0938\u0941\u0927\u093e\u0930\u0928\u0947 \u0915\u093e \u0938\u092c\u0938\u0947 \u0905\u091a\u094d\u091b\u093e \u0924\u0930\u0940\u0915\u093e \u0939\u0948 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u093e \u0914\u0930 \u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u0930\u0924\u0947 \u0930\u0939\u0928\u093e!</p>"},{"location":"hi/chapters/chapter07/#_12","title":"\u0906\u0917\u0947 \u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u0928","text":"<p>\u092f\u0926\u093f \u0906\u092a Python \u0938\u0940\u0916\u0928\u093e \u091c\u093e\u0930\u0940 \u0930\u0916\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u092f\u0939\u093e\u0902 \u0915\u0941\u091b \u092c\u0947\u0939\u0924\u0930\u0940\u0928 \u0938\u0902\u0938\u093e\u0927\u0928 \u0939\u0948\u0902: - Real Python - Python Documentation - Codewars (Python \u091a\u0941\u0928\u094c\u0924\u093f\u092f\u093e\u0901 \u0939\u0932 \u0915\u0930\u0947\u0902!)</p> <p>\u092c\u0927\u093e\u0908 \u0939\u094b!  \u0906\u092a\u0928\u0947 \u092f\u0939 Python \u0915\u094b\u0930\u094d\u0938 \u092a\u0942\u0930\u093e \u0915\u0930 \u0932\u093f\u092f\u093e \u0939\u0948! \u0905\u092c \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u092c\u0921\u093c\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0932\u0947\u0928\u0947, \u0909\u0928\u094d\u0928\u0924 \u0935\u093f\u0937\u092f\u094b\u0902 \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908 \u0938\u0947 \u091c\u093e\u0928\u0947, \u0914\u0930 \u0905\u092a\u0928\u0940 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092f\u093e\u0924\u094d\u0930\u093e \u091c\u093e\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0915\u094c\u0936\u0932 \u0939\u0948\u0902\u0964 \u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u0930\u0924\u0947 \u0930\u0939\u0947\u0902 \u0914\u0930 \u092e\u091c\u093c\u0947 \u0915\u0930\u0947\u0902!</p>"},{"location":"hi/chapters/chapter08/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 8: \u0928\u0935\u0940\u0928\u0924\u092e \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e \u0915\u0941\u091b \u0938\u092c\u0938\u0947 \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u0914\u0930 \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u0940 \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u0930\u0947\u0902\u0917\u0947 \u091c\u094b \u0939\u092e\u093e\u0930\u0947 \u091a\u093e\u0930\u094b\u0902 \u0913\u0930 \u0915\u0940 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u094b \u0906\u0915\u093e\u0930 \u0926\u0947 \u0930\u0939\u0940 \u0939\u0948\u0902\u0964 \u0935\u093f\u0936\u093e\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094d\u0938 \u0938\u0947 \u0928\u093f\u092a\u091f\u0928\u0947 \u0938\u0947 \u0932\u0947\u0915\u0930 AI \u092c\u0928\u093e\u0928\u0947 \u0924\u0915 \u091c\u094b \u0906\u092a\u0938\u0947 \u092c\u093e\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948 (\u091c\u0948\u0938\u0947 \u092e\u0948\u0902!), \u092f\u0947 \u0935\u093f\u0937\u092f \u0906\u092a\u0915\u094b \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u0940 \u090f\u0915 \u091d\u0932\u0915 \u0926\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter08/#big-data","title":"Big Data: \u091c\u092c \u0906\u092a\u0915\u093e \u0921\u0947\u091f\u093e \u092c\u0939\u0941\u0924 \u092c\u0921\u093c\u093e \u0939\u094b \u091c\u093e\u090f!","text":"<p>\u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u090f\u0915 \u0926\u093f\u0928 \u092e\u0947\u0902 \u090f\u0915 \u0936\u0939\u0930 \u092e\u0947\u0902 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0940 \u0938\u092d\u0940 \u091a\u0940\u091c\u093c\u094b\u0902 \u092a\u0930 \u0928\u091c\u093c\u0930 \u0930\u0916\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u2014\u091f\u094d\u0930\u0948\u092b\u093f\u0915 \u0932\u093e\u0907\u091f\u094d\u0938, \u091f\u094d\u0935\u0940\u091f\u094d\u0938, \u0924\u093e\u092a\u092e\u093e\u0928 \u0915\u0940 \u0930\u0940\u0921\u093f\u0902\u0917\u094d\u0938, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0932\u094b\u0917 \u0915\u094d\u092f\u093e \u0916\u0930\u0940\u0926 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u092c\u0939\u0941\u0924 \u0938\u093e\u0930\u093e \u0921\u0947\u091f\u093e \u0939\u0948, \u0939\u0948 \u0928\u093e? \u0905\u092c \u0915\u0932\u094d\u092a\u0928\u093e \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u0910\u0938\u093e \u092a\u0942\u0930\u0947 \u0926\u0947\u0936 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902! \u092f\u0939\u0940 \u0935\u0939 \u091c\u0917\u0939 \u0939\u0948 \u091c\u0939\u093e\u0902 Big Data \u0915\u093e\u092e \u0906\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#big-data_1","title":"Big Data \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Big Data \u092c\u0939\u0941\u0924 \u092c\u0921\u093c\u0947 \u0914\u0930 \u091c\u091f\u093f\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094d\u0938 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0907\u0924\u0928\u0947 \u092c\u0921\u093c\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u091f\u0942\u0932\u094d\u0938 \u0909\u0928\u094d\u0939\u0947\u0902 \u0938\u0902\u092d\u093e\u0932 \u0928\u0939\u0940\u0902 \u092a\u093e\u0924\u0947\u0964 \u092f\u0939 \u0910\u0938\u093e \u0939\u0948 \u091c\u0948\u0938\u0947 \u0905\u0930\u092c\u094b\u0902 \u092a\u0939\u0947\u0932\u0940 \u091f\u0941\u0915\u0921\u093c\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u0920\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930\u0928\u093e \u0924\u093e\u0915\u093f \u092c\u0921\u093c\u0940 \u0924\u0938\u094d\u0935\u0940\u0930 \u0926\u0947\u0916\u0940 \u091c\u093e \u0938\u0915\u0947\u0964</p>"},{"location":"hi/chapters/chapter08/#big-data_2","title":"Big Data \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948?","text":"<ul> <li>Netflix: \u0932\u093e\u0916\u094b\u0902 \u0932\u094b\u0917\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0926\u0947\u0916\u0940 \u091c\u093e \u0930\u0939\u0940 \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u093e \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0915\u0947 \u092b\u093f\u0932\u094d\u092e\u0947\u0902 \u0938\u0941\u091d\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>Healthcare: \u092e\u0947\u0921\u093f\u0915\u0932 \u0930\u093f\u0915\u0949\u0930\u094d\u0921\u094d\u0938 \u0914\u0930 \u0930\u093f\u0938\u0930\u094d\u091a \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0924\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0907\u0932\u093e\u091c \u0924\u0947\u091c\u0940 \u0938\u0947 \u092e\u093f\u0932 \u0938\u0915\u0947\u0964</li> <li>Social Media: \u092a\u094b\u0938\u094d\u091f\u094d\u0938 \u0914\u0930 \u091f\u094d\u0930\u0947\u0902\u0921\u094d\u0938 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0924\u093e \u0939\u0948 \u0924\u093e\u0915\u093f \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948, \u0909\u0938\u0947 \u0938\u092e\u091d\u093e \u091c\u093e \u0938\u0915\u0947\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_1","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>\u0914\u0938\u0924 \u0935\u094d\u092f\u0915\u094d\u0924\u093f \u0939\u0930 \u0938\u0947\u0915\u0902\u0921 1.7 MB \u0921\u0947\u091f\u093e \u092c\u0928\u093e\u0924\u093e \u0939\u0948, \u092c\u0938 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c \u0915\u0930\u0915\u0947, \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947, \u0914\u0930 \u0938\u0902\u0926\u0947\u0936 \u092d\u0947\u091c\u0915\u0930!</p>"},{"location":"hi/chapters/chapter08/#cloud-computing","title":"Cloud Computing: \u0906\u092a\u0915\u093e \u0921\u0947\u091f\u093e, \u092c\u093e\u0926\u0932\u094b\u0902 \u092e\u0947\u0902 \u0924\u0948\u0930\u0924\u093e \u0939\u0941\u0906","text":"<p>Cloud computing \u091c\u093e\u0926\u0941\u0908 \u0932\u0917\u0924\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092a\u0930 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947, \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947, \u0914\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0939\u0948, \u092c\u091c\u093e\u092f \u0907\u0938\u0915\u0947 \u0915\u093f \u0906\u092a \u0905\u092a\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p>"},{"location":"hi/chapters/chapter08/#cloud-computing_1","title":"Cloud Computing \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Cloud computing \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u0947 \u092b\u093e\u0907\u0932\u094d\u0938 \u0915\u094b \u0905\u092a\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0939\u093e\u0930\u094d\u0921 \u0921\u094d\u0930\u093e\u0907\u0935 \u092a\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u091c\u093e\u092f \u090f\u0915 \u0926\u0942\u0930\u0938\u094d\u0925 \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u091c\u092c \u0906\u092a Google Drive \u092a\u0930 \u092b\u094b\u091f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e Spotify \u091c\u0948\u0938\u0947 \u0910\u092a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0906\u092a \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0930\u0939\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter08/#cloud-computing_2","title":"Cloud Computing \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948?","text":"<ul> <li>Google Drive: \u0906\u092a\u0915\u0947 \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u094b\u0902 \u0915\u094b \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0906\u092a\u0915\u094b \u0915\u0939\u0940\u0902 \u0938\u0947 \u092d\u0940 \u0909\u0928\u094d\u0939\u0947\u0902 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>Spotify: \u092c\u093f\u0928\u093e \u0906\u092a\u0915\u0947 \u0921\u093f\u0935\u093e\u0907\u0938 \u092a\u0930 \u0939\u0930 \u0917\u093e\u0928\u093e \u0938\u094d\u091f\u094b\u0930 \u0915\u093f\u090f \u0938\u0902\u0917\u0940\u0924 \u0938\u094d\u091f\u094d\u0930\u0940\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>Netflix: \u0938\u0940\u0927\u0947 \u0915\u094d\u0932\u093e\u0909\u0921 \u0938\u0930\u094d\u0935\u0930 \u0938\u0947 \u0935\u0940\u0921\u093f\u092f\u094b \u0938\u094d\u091f\u094d\u0930\u0940\u092e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_2","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>\u0915\u094d\u0932\u093e\u0909\u0921 \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0938\u0948\u0915\u0921\u093c\u094b\u0902 \u0939\u091c\u093e\u0930\u094b\u0902 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 \u0938\u0930\u094d\u0935\u0930 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u091c\u094b \u0926\u0941\u0928\u093f\u092f\u093e \u092d\u0930 \u092e\u0947\u0902 \u0935\u093f\u0936\u093e\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u0902\u091f\u0930\u094d\u0938 \u092e\u0947\u0902 \u0938\u094d\u0925\u093f\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0947 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0940 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u093f\u092f\u094b\u0902 \u0915\u0940 \u0924\u0930\u0939 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter08/#edge-computing","title":"Edge Computing: \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u094b \u0906\u092a\u0915\u0947 \u0915\u0930\u0940\u092c \u0932\u093e\u0928\u093e","text":"<p>\u092f\u0926\u093f \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0906\u092a\u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u0926\u0942\u0930 \u092d\u0947\u091c\u0928\u0947 \u091c\u0948\u0938\u093e \u0939\u0948, \u0924\u094b Edge Computing \u0907\u0938\u0947 \u0906\u092a\u0915\u0947 \u0920\u0940\u0915 \u092c\u0917\u0932 \u092e\u0947\u0902 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u091c\u0948\u0938\u093e \u0939\u0948\u2014\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u0947 \"\u090f\u091c\" \u092a\u0930\u0964 \u092f\u0939 \u091a\u0940\u091c\u094b\u0902 \u0915\u094b \u0924\u0947\u091c\u093c \u092c\u0928\u093e\u0924\u093e \u0939\u0948!</p>"},{"location":"hi/chapters/chapter08/#edge-computing_1","title":"Edge Computing \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>\u0938\u092d\u0940 \u0921\u0947\u091f\u093e \u0915\u094b \u090f\u0915 \u0926\u0942\u0930\u0938\u094d\u0925 \u0915\u094d\u0932\u093e\u0909\u0921 \u092e\u0947\u0902 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u092c\u091c\u093e\u092f, Edge Computing \u0921\u0947\u091f\u093e \u0915\u094b \u0935\u0939\u0940\u0902 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0938\u0947 \u0935\u0939 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964 \u0907\u0938\u0947 \u0910\u0938\u0947 \u0938\u092e\u091d\u0947\u0902 \u091c\u0948\u0938\u0947 \u0906\u092a\u0915\u0947 \u092b\u094b\u0928 \u092f\u093e \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0921\u093f\u0935\u093e\u0907\u0938 \u0915\u0947 \u092a\u093e\u0938 \u0939\u0940 \u092e\u093f\u0928\u0940 \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0939\u094b\u0902\u0964</p>"},{"location":"hi/chapters/chapter08/#edge-computing_2","title":"Edge Computing \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948?","text":"<ul> <li>Self-driving cars: \u092d\u093e\u0930\u0940 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u094b \u092c\u0939\u0941\u0924 \u0924\u0947\u091c\u093c\u0940 \u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u091c\u0948\u0938\u0947 \u092a\u0948\u0926\u0932 \u092f\u093e\u0924\u094d\u0930\u093f\u092f\u094b\u0902 \u0915\u094b \u092a\u0939\u091a\u093e\u0928\u0928\u093e \u092f\u093e \u0938\u0921\u093c\u0915 \u0938\u0902\u0915\u0947\u0924 \u092a\u0922\u093c\u0928\u093e\u0964</li> <li>Smart home devices: Amazon Echo \u092f\u093e Google Home \u091c\u0948\u0938\u0947 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u094b \u0906\u092a\u0915\u0940 \u0906\u0935\u093e\u091c\u093c \u0915\u0947 \u0906\u0926\u0947\u0936\u094b\u0902 \u0915\u093e \u092c\u093f\u0928\u093e \u0926\u0947\u0930\u0940 \u0915\u0947 \u091c\u0935\u093e\u092c \u0926\u0947\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_3","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>2025 \u0924\u0915, \u092f\u0939 \u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0939\u0948 \u0915\u093f 75% \u0938\u0947 \u0905\u0927\u093f\u0915 \u0921\u0947\u091f\u093e \u092a\u093e\u0930\u0902\u092a\u0930\u093f\u0915 \u0915\u094d\u0932\u093e\u0909\u0921 \u0921\u0947\u091f\u093e \u0938\u0947\u0902\u091f\u0930\u094d\u0938 \u0915\u0947 \u092c\u093e\u0939\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e\u2014\u090f\u091c \u092a\u0930!</p>"},{"location":"hi/chapters/chapter08/#networking-","title":"Networking: \u0921\u093f\u0935\u093e\u0907\u0938 \u090f\u0915-\u0926\u0942\u0938\u0930\u0947 \u0938\u0947 \u0915\u0948\u0938\u0947 \u092c\u093e\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902","text":"<p>Networking \u0935\u0939 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948 \u091c\u093f\u0938\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0914\u0930 \u0921\u093f\u0935\u093e\u0907\u0938 \u090f\u0915-\u0926\u0942\u0938\u0930\u0947 \u0938\u0947 \u092c\u093e\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a\u0928\u0947 \u0915\u092d\u0940 Wi-Fi \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u0939\u0948, \u092b\u093e\u0907\u0932\u094d\u0938 \u0938\u093e\u091d\u093e \u0915\u0940 \u0939\u0948\u0902, \u092f\u093e \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u093e \u0939\u0948, \u0924\u094b \u092c\u0927\u093e\u0908 \u0939\u094b\u2014\u0906\u092a\u0928\u0947 \u0928\u0947\u091f\u0935\u0930\u094d\u0915\u093f\u0902\u0917 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u0939\u0948!</p>"},{"location":"hi/chapters/chapter08/#networking","title":"Networking \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Networking \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0914\u0930 \u0905\u0928\u094d\u092f \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u094b \u090f\u0915-\u0926\u0942\u0938\u0930\u0947 \u0938\u0947 \u091c\u094b\u0921\u093c\u0928\u0947 \u0914\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0916\u0941\u0926 \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0940 \u0924\u0930\u0939 \u0939\u0948: \u0906\u092a\u0938 \u092e\u0947\u0902 \u091c\u0941\u0921\u093c\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u093e \u090f\u0915 \u0935\u093f\u0936\u093e\u0932 \u091c\u093e\u0932 \u091c\u094b \u0921\u0947\u091f\u093e \u0915\u093e \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930 \u0930\u0939\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#networks","title":"Networks \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:","text":"<ul> <li>Local Area Network (LAN): \u0918\u0930\u094b\u0902 \u092f\u093e \u0938\u094d\u0915\u0942\u0932\u094b\u0902 \u092e\u0947\u0902 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u090f\u0915 \u091b\u094b\u091f\u0940 \u0938\u0940 \u091c\u0917\u0939 \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>Wide Area Network (WAN): \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0940 \u0924\u0930\u0939, \u091c\u094b \u092c\u0921\u093c\u0947 \u0926\u0942\u0930\u0940 \u092a\u0930 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#networking_1","title":"Networking \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948?","text":"<ul> <li>Wi-Fi: \u0906\u092a\u0915\u0947 \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u094b \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u0947 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</li> <li>Social Media: \u0906\u092a\u0915\u0947 \u0938\u0902\u0926\u0947\u0936\u094b\u0902 \u0915\u094b \u0926\u0941\u0928\u093f\u092f\u093e \u092d\u0930 \u092e\u0947\u0902 \u0938\u0947\u0915\u0902\u0921\u094b\u0902 \u092e\u0947\u0902 \u092d\u0947\u091c\u0924\u093e \u0939\u0948\u0964</li> <li>Online Gaming: \u0926\u0941\u0928\u093f\u092f\u093e \u092d\u0930 \u0915\u0947 \u0916\u093f\u0932\u093e\u0921\u093c\u093f\u092f\u094b\u0902 \u0915\u094b \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0938\u092e\u092f \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_4","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>\u0907\u0938 \u0938\u092e\u092f \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u0947 \u091c\u0941\u0921\u093c\u0947 \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092a\u0943\u0925\u094d\u0935\u0940 \u092a\u0930 \u0932\u094b\u0917\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0938\u0947 \u092d\u0940 \u0905\u0927\u093f\u0915 \u0939\u0948!</p>"},{"location":"hi/chapters/chapter08/#automation","title":"Automation: \u092e\u0936\u0940\u0928\u0947\u0902 \u0906\u092a\u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u092e \u0915\u0930 \u0930\u0939\u0940 \u0939\u0948\u0902","text":"<p>\u0915\u092d\u0940 \u091a\u093e\u0939\u093e \u0915\u093f \u0906\u092a\u0915\u093e \u0939\u094b\u092e\u0935\u0930\u094d\u0915 \u092f\u093e \u0915\u093e\u092e \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0939\u094b \u091c\u093e\u090f? \u0916\u0948\u0930, Automation \u0924\u092c \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u092c \u092e\u0936\u0940\u0928\u0947\u0902 \u092f\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0926\u094b\u0939\u0930\u093e\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0924\u0947 \u0939\u0948\u0902, \u091c\u093f\u0938\u0938\u0947 \u091c\u0940\u0935\u0928 \u0906\u0938\u093e\u0928 \u0914\u0930 \u0905\u0927\u093f\u0915 \u0915\u0941\u0936\u0932 \u0939\u094b \u091c\u093e\u0924\u093e \u0939\u0948!</p>"},{"location":"hi/chapters/chapter08/#automation_1","title":"Automation \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Automation \u0915\u093e \u0905\u0930\u094d\u0925 \u0939\u0948 \u092c\u093f\u0928\u093e \u092e\u093e\u0928\u0935\u0940\u092f \u0939\u0938\u094d\u0924\u0915\u094d\u0937\u0947\u092a \u0915\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e\u0964 \u092f\u0939 \u091c\u093f\u0924\u0928\u093e \u0938\u0930\u0932 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u090f\u0915 \u0915\u0949\u092b\u0940 \u092e\u0936\u0940\u0928 \u091c\u094b \u0938\u0941\u092c\u0939 7 \u092c\u091c\u0947 \u0938\u0947 \u092c\u093f\u092f\u0930\u093f\u0902\u0917 \u0936\u0941\u0930\u0942 \u0915\u0930\u0924\u0940 \u0939\u0948, \u092f\u093e \u091c\u093f\u0924\u0928\u093e \u091c\u091f\u093f\u0932 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u091c\u0948\u0938\u0947 \u0915\u093f \u0930\u094b\u092c\u094b\u091f \u0915\u093e\u0930\u0916\u093e\u0928\u094b\u0902 \u092e\u0947\u0902 \u0915\u093e\u0930\u094b\u0902 \u0915\u094b \u0905\u0938\u0947\u0902\u092c\u0932 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p>"},{"location":"hi/chapters/chapter08/#automation_2","title":"Automation \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948?","text":"<ul> <li>Self-driving cars: \u0938\u0947\u0902\u0938\u0930 \u0914\u0930 AI \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0921\u094d\u0930\u093e\u0907\u0935\u093f\u0902\u0917 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> <li>Smart homes: \u0932\u093e\u0907\u091f\u094d\u0938, \u0925\u0930\u094d\u092e\u094b\u0938\u094d\u091f\u0948\u091f\u094d\u0938, \u0914\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u091c\u094b \u0916\u0941\u0926 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0938\u092e\u093e\u092f\u094b\u091c\u093f\u0924 \u0915\u0930\u0924\u0940 \u0939\u0948\u0902\u0964</li> <li>Factories: \u0930\u094b\u092c\u094b\u091f \u092c\u093f\u0928\u093e \u092e\u093e\u0928\u0935 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0909\u0924\u094d\u092a\u093e\u0926\u094b\u0902, \u091c\u0948\u0938\u0947 \u0915\u093e\u0930 \u092f\u093e \u0938\u094d\u092e\u093e\u0930\u094d\u091f\u092b\u094b\u0928, \u0905\u0938\u0947\u0902\u092c\u0932 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_5","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>Automation \u0939\u0930 \u091c\u0917\u0939 \u0939\u0948\u2014Roombas \u0938\u0947 \u0932\u0947\u0915\u0930 \u091c\u094b \u092b\u0930\u094d\u0936 \u0938\u093e\u092b \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, Netflix \u092a\u0930 \u0906\u092a\u0915\u094b \u0926\u0947\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0941\u091d\u093e\u0935 \u0926\u0947\u0928\u0947 \u0935\u093e\u0932\u0947 \u090f\u0932\u094d\u0917\u094b\u0930\u093f\u0926\u092e \u0924\u0915!</p>"},{"location":"hi/chapters/chapter08/#artificial-intelligence-ai","title":"Artificial Intelligence (AI): \u092e\u0936\u0940\u0928\u094b\u0902 \u0915\u094b \u0938\u094b\u091a\u0928\u0947 \u092a\u0930 \u092e\u091c\u092c\u0942\u0930 \u0915\u0930\u0928\u093e","text":"<p>AI \u0924\u0915\u0928\u0940\u0915 \u0915\u0947 \u0938\u092c\u0938\u0947 \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0939\u0948\u0964 \u092f\u0939 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0915\u094b \u0938\u0940\u0916\u0928\u0947, \u0938\u094b\u091a\u0928\u0947, \u0914\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u093f\u0916\u093e\u0928\u0947 \u0915\u093e \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u0939\u0948\u0964 \u0938\u094d\u0935-\u091a\u093e\u0932\u093f\u0924 \u0915\u093e\u0930\u094b\u0902 \u0938\u0947 \u0932\u0947\u0915\u0930 Siri \u091c\u0948\u0938\u0947 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0938\u0939\u093e\u092f\u0915\u094b\u0902 \u0924\u0915, AI \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u094b \u092c\u0926\u0932 \u0930\u0939\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#ai","title":"AI \u0915\u094d\u092f\u093e \u0939\u0948?","text":"<p>Artificial Intelligence (AI) \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u0915\u093e \u090f\u0915 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u0939\u0948 \u091c\u094b \u092e\u0936\u0940\u0928\u094b\u0902 \u092f\u093e \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u094b \u092c\u0928\u093e\u0928\u0947 \u092a\u0930 \u0915\u0947\u0902\u0926\u094d\u0930\u093f\u0924 \u0939\u0948 \u091c\u094b \u092e\u0928\u0941\u0937\u094d\u092f\u094b\u0902 \u0915\u0940 \u0924\u0930\u0939 \u0938\u094b\u091a \u0914\u0930 \u0915\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 AI \u0905\u0928\u0941\u092d\u0935 \u0938\u0947 \u0938\u0940\u0916 \u0938\u0915\u0924\u093e \u0939\u0948, \u092a\u0948\u091f\u0930\u094d\u0928 \u092a\u0939\u091a\u093e\u0928 \u0938\u0915\u0924\u093e \u0939\u0948, \u0914\u0930 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#ai_1","title":"AI \u0915\u0947 \u092a\u094d\u0930\u0915\u093e\u0930:","text":"<ul> <li>Narrow AI: AI \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u091a\u0947\u0939\u0930\u0947 \u0915\u094b \u092a\u0939\u091a\u093e\u0928\u0928\u093e \u092f\u093e \u0936\u0924\u0930\u0902\u091c \u0916\u0947\u0932\u0928\u093e\u0964</li> <li>General AI: AI \u091c\u094b \u0935\u0939 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948 \u091c\u094b \u0915\u094b\u0908 \u092d\u0940 \u092e\u0928\u0941\u0937\u094d\u092f \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948 (\u092f\u0939 \u0905\u092c \u0924\u0915 \u0935\u093f\u091c\u094d\u091e\u093e\u0928 \u0915\u0925\u093e \u0939\u0948!)\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#gpt-ai","title":"GPT: AI \u091c\u094b \u0932\u093f\u0916\u0924\u093e \u0939\u0948 (\u091c\u0948\u0938\u0947 \u092e\u0948\u0902!)","text":"<p>GPT (Generative Pretrained Transformer) OpenAI \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u093f\u0915\u0938\u093f\u0924 \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e AI \u0939\u0948 \u091c\u094b \u092e\u093e\u0928\u0935-\u091c\u093e\u0924\u093f \u091c\u0948\u0938\u0940 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0915\u094b \u0938\u092e\u091d \u0914\u0930 \u091c\u0928\u0930\u0947\u091f \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0928\u093f\u092c\u0902\u0927 \u0932\u093f\u0916 \u0938\u0915\u0924\u093e \u0939\u0948, \u0915\u0939\u093e\u0928\u093f\u092f\u093e\u0901 \u0938\u0941\u0928\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947 \u0938\u0915\u0924\u093e \u0939\u0948, \u0914\u0930 \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u0906\u092a\u0938\u0947 \u092c\u093e\u0924\u091a\u0940\u0924 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948!</p> <p>GPT \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u093e \u0939\u0948? GPT \u0915\u094b \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0938\u0947 \u092c\u0921\u093c\u0947 \u092a\u0948\u092e\u093e\u0928\u0947 \u092a\u0930 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0921\u0947\u091f\u093e \u092a\u0930 \u092a\u094d\u0930\u0936\u093f\u0915\u094d\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u091c\u092c \u0906\u092a \u0907\u0938\u0947 \u090f\u0915 \u092a\u094d\u0930\u0936\u094d\u0928 \u092a\u0942\u091b\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u092f\u0939 \u0921\u0947\u091f\u093e \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0910\u0938\u093e \u0909\u0924\u094d\u0924\u0930 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u092e\u093e\u0928\u0935 \u092d\u093e\u0937\u093e \u092e\u0947\u0902 \u0938\u092e\u091d \u092e\u0947\u0902 \u0906\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#_6","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>GPT \u092e\u0949\u0921\u0932 (\u091c\u0948\u0938\u0947 \u092e\u0948\u0902!) \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u094d\u0930\u0936\u094d\u0928 \u0915\u0947 \u0932\u093e\u0916\u094b\u0902 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0909\u0924\u094d\u0924\u0930 \u0938\u0947\u0915\u0902\u0921\u094b\u0902 \u092e\u0947\u0902 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902!</p>"},{"location":"hi/chapters/chapter08/#dalle-ai","title":"DALL\u00b7E: AI \u091c\u094b \u092a\u0947\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948","text":"<p>DALL\u00b7E \u090f\u0915 \u0905\u0928\u094d\u092f AI \u0939\u0948 \u091c\u093f\u0938\u0947 OpenAI \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u093f\u0915\u0938\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u091c\u093e\u092f, \u091a\u093f\u0924\u094d\u0930 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0906\u092a \u090f\u0915 \u0926\u0943\u0936\u094d\u092f \u0915\u093e \u0935\u0930\u094d\u0923\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u2014\u091c\u0948\u0938\u0947 \"\u091a\u093e\u0901\u0926 \u092a\u0930 \u0938\u094d\u0915\u0947\u091f\u092c\u094b\u0930\u094d\u0921\u093f\u0902\u0917 \u0915\u0930\u0924\u093e \u0939\u0941\u0906 \u092c\u093f\u0932\u094d\u0932\u0940\"\u2014\u0914\u0930 DALL\u00b7E \u0907\u0938\u0915\u093e \u091a\u093f\u0924\u094d\u0930 \u092c\u0928\u093e\u090f\u0917\u093e\u0964</p>"},{"location":"hi/chapters/chapter08/#_7","title":"8. Advanced Topics","text":"<p>DALL\u00b7E \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0948\u0938\u0947 \u0939\u094b\u0924\u093e \u0939\u0948? - Art \u0914\u0930 Design: \u0932\u094b\u0917 DALL\u00b7E \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0905\u0928\u094b\u0916\u0940 \u0915\u0932\u093e\u0915\u0943\u0924\u093f \u0914\u0930 \u0921\u093f\u091c\u093c\u093e\u0907\u0928\u094d\u0938 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 - Visual Storytelling: DALL\u00b7E \u092a\u0941\u0938\u094d\u0924\u0915\u0947\u0902 \u092f\u093e \u0915\u0949\u092e\u093f\u0915\u094d\u0938 \u0915\u0947 \u0932\u093f\u090f \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0935\u093f\u0935\u0930\u0923\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u091a\u093f\u0924\u094d\u0930 \u092c\u0928\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter08/#_8","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f:","text":"<p>DALL\u00b7E \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u092e\u094c\u0932\u093f\u0915 \u091a\u093f\u0924\u094d\u0930 \u092c\u0928\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u092c\u0938 \u0909\u0938 \u0935\u093e\u0915\u094d\u092f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u091c\u094b \u0906\u092a \u0907\u0938\u0947 \u0926\u0947\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0910\u0938\u093e \u0939\u0948 \u091c\u0948\u0938\u0947 \u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u090f\u0915 \u0930\u094b\u092c\u094b\u091f \u0915\u0932\u093e\u0915\u093e\u0930 \u0939\u094b!</p>"},{"location":"hi/chapters/chapter08/#ai-chatbot","title":"\u092e\u091c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u0905\u092a\u0928\u093e AI Chatbot \u092c\u0928\u093e\u090f\u0902","text":"<p>\u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947, \u092f\u0939\u093e\u0902 \u090f\u0915 \u092e\u091c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e \u0939\u0948: \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u091a\u0948\u091f\u092c\u0949\u091f \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u0906\u092a\u0938\u0947 \u091a\u0948\u091f \u0915\u0930 \u0938\u0915\u0947 \u0914\u0930 \u0938\u0930\u0932 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947 \u0938\u0915\u0947\u0964</p>"},{"location":"hi/chapters/chapter08/#basic-chatbot","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Basic Chatbot","text":"<pre><code>def chatbot_response(user_input):\n    responses = {\n        \"hi\": \"Hello! How can I help you today?\",\n        \"bye\": \"Goodbye! Have a great day!\",\n        \"how are you?\": \"I'm just a bunch of code, but I'm doing great!\"\n    }\n    return responses.get(user_input.lower(), \"Sorry, I didn't understand that.\")\n\nwhile True:\n    user_input = input(\"You: \")\n    if user_input.lower() == \"bye\":\n        print(\"Chatbot: Goodbye!\")\n        break\n    print(\"Chatbot:\", chatbot_response(user_input))\n</code></pre>"},{"location":"hi/chapters/chapter08/#_9","title":"\u092f\u0939\u093e\u0902 \u0915\u094d\u092f\u093e \u0939\u094b \u0930\u0939\u093e \u0939\u0948?","text":"<ul> <li>\u091a\u0948\u091f\u092c\u0949\u091f \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0938\u0941\u0928\u0924\u093e \u0939\u0948 \u0914\u0930 \u092a\u0942\u0930\u094d\u0935-\u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 \u0909\u0924\u094d\u0924\u0930\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u091c\u0935\u093e\u092c \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>\u092f\u0926\u093f \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \"bye\" \u0915\u0939\u0924\u093e \u0939\u0948, \u0924\u094b \u091a\u0948\u091f\u092c\u0949\u091f \u092c\u093e\u0924\u091a\u0940\u0924 \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter08/#_10","title":"\u0915\u094d\u0935\u093f\u091c\u093c \u091f\u093e\u0907\u092e!","text":"<p>\u0906\u0907\u090f \u0926\u0947\u0916\u0947\u0902 \u0915\u093f \u0906\u092a \u0907\u0928 \u0909\u0928\u094d\u0928\u0924 \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u094b \u0915\u093f\u0924\u0928\u0940 \u0905\u091a\u094d\u091b\u0940 \u0924\u0930\u0939 \u0938\u092e\u091d\u0924\u0947 \u0939\u0948\u0902:</p> <ol> <li> <p>Big Data \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u091b\u094b\u091f\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940     B. \u092c\u0939\u0941\u0924 \u092c\u0921\u093c\u0947 \u0914\u0930 \u091c\u091f\u093f\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094d\u0938     C. \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0915\u094d\u0932\u093e\u0909\u0921  </p> </li> <li> <p>Edge computing \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0921\u0947\u091f\u093e \u0915\u094b \u0926\u0942\u0930 \u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u093e \u0939\u0948     B. \u0921\u0947\u091f\u093e \u0915\u094b \u0935\u0939\u0940\u0902 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0938\u0947 \u092f\u0939 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u094b\u0924\u093e \u0939\u0948     C. \u0921\u0947\u091f\u093e \u0915\u094b \u0915\u094d\u0932\u093e\u0909\u0921 \u092e\u0947\u0902 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> <li> <p>GPT \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u090f\u0915 \u091f\u0947\u0915\u094d\u0938\u094d\u091f-\u091c\u0928\u0930\u0947\u091f\u093f\u0902\u0917 AI     B. \u090f\u0915 \u0915\u094d\u0932\u093e\u0909\u0921 \u0938\u0947\u0935\u093e     C. \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094b\u0930\u0947\u091c  </p> </li> </ol>"},{"location":"hi/chapters/chapter08/#_11","title":"\u0909\u0924\u094d\u0924\u0930:","text":"<ol> <li>B</li> <li>B</li> <li>A</li> </ol>"},{"location":"hi/chapters/chapter08/#_12","title":"\u0905\u0902\u0924\u093f\u092e \u0935\u093f\u091a\u093e\u0930","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902 \u091c\u093f\u0928 \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u093e \u0939\u092e\u0928\u0947 \u0905\u0928\u094d\u0935\u0947\u0937\u0923 \u0915\u093f\u092f\u093e\u2014Big Data, Cloud Computing, Edge Computing, Networking, Automation, \u0914\u0930 AI\u2014\u0935\u0947 \u0928 \u0915\u0947\u0935\u0932 \u0909\u0926\u094d\u092f\u094b\u0917\u094b\u0902 \u0915\u094b \u092c\u0926\u0932 \u0930\u0939\u0940 \u0939\u0948\u0902 \u092c\u0932\u094d\u0915\u093f \u0939\u092e\u093e\u0930\u0947 \u0926\u0948\u0928\u093f\u0915 \u091c\u0940\u0935\u0928 \u0915\u094b \u092d\u0940 \u0906\u0938\u093e\u0928 \u0914\u0930 \u0905\u0927\u093f\u0915 \u0915\u0928\u0947\u0915\u094d\u091f\u0947\u0921 \u092c\u0928\u093e \u0930\u0939\u0940 \u0939\u0948\u0902\u0964</p> <p>\u0907\u0928 \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093f\u091c\u094d\u091e\u093e\u0938\u0941 \u092c\u0928\u0947 \u0930\u0939\u0928\u0947 \u0914\u0930 \u0932\u0917\u093e\u0924\u093e\u0930 \u0938\u0940\u0916\u0924\u0947 \u0930\u0939\u0928\u0947 \u0938\u0947, \u0906\u092a \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u094b \u0906\u0915\u093e\u0930 \u0926\u0947\u0928\u0947 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u092c\u0928 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0915\u094c\u0928 \u091c\u093e\u0928\u0924\u093e \u0939\u0948? \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0915\u093f \u090f\u0915 \u0926\u093f\u0928 \u0906\u092a \u0905\u0917\u0932\u0940 \u092c\u0921\u093c\u0940 \u0938\u092b\u0932\u0924\u093e\u2014AI, \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917, \u092f\u093e \u0911\u091f\u094b\u092e\u0947\u0936\u0928 \u092e\u0947\u0902\u2014\u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0947\u0902!</p>"},{"location":"hi/chapters/chapter09-ans/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 9 \u0909\u0924\u094d\u0924\u0930","text":""},{"location":"hi/chapters/chapter09-ans/#1-introduction-to-python","title":"\u0905\u0927\u094d\u092f\u093e\u092f 1: Introduction to Python","text":"<ol> <li> <p>A. Guido van Rossum \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u0915\u094b Guido van Rossum \u0928\u0947 1991 \u092e\u0947\u0902 \u092c\u0928\u093e\u092f\u093e \u0925\u093e\u0964</p> </li> <li> <p>B. Displays text or variables on the screen \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>print()</code> function \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u092a\u0930 text \u092f\u093e variable values \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u0905\u092a\u0928\u0940 \u0938\u0930\u0932 \u0914\u0930 \u092a\u0920\u0928\u0940\u092f syntax \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. print(\"Hello, World!\") \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b <code>print()</code> statement \u0915\u0947 \u0938\u093e\u0925 \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. input() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>input()</code> function \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u0915\u094b Google Colab \u091c\u0948\u0938\u0947 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e \u092a\u0930 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930\u094b\u0902 \u092e\u0947\u0902 \u091a\u0932\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. Booleans \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>True</code> \u0914\u0930 <code>False</code> Python \u092e\u0947\u0902 Boolean \u092e\u093e\u0928\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>B. # \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u0915\u094b\u0921 \u092e\u0947\u0902 \u091f\u093f\u092a\u094d\u092a\u0923\u093f\u092f\u093e\u0901 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>#</code> \u092a\u094d\u0930\u0924\u0940\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. pip \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>pip</code> \u0915\u092e\u093e\u0902\u0921 Python packages \u0914\u0930 \u0915\u0941\u091b \u0938\u0947\u091f\u0905\u092a\u094d\u0938 \u092e\u0947\u0902 Python \u0915\u094b \u0916\u0941\u0926 \u0915\u094b \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. my-var \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 variable \u0928\u093e\u092e\u094b\u0902 \u092e\u0947\u0902 hyphens \u0928\u0939\u0940\u0902 \u0939\u094b \u0938\u0915\u0924\u0947\u0964 \u0935\u0947 underscores \u0936\u093e\u092e\u093f\u0932 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u092a\u0930 \u091a\u0932 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u091c\u0948\u0938\u0947 Windows, Mac, \u0914\u0930 Linux\u0964</p> </li> <li> <p>C. .py \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092b\u093e\u0907\u0932\u094b\u0902 \u0915\u093e \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u0903 <code>.py</code> \u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. 8 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>print(3 + 5)</code> statement \u091c\u094b\u0921\u093c \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u094b 8 \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python case-sensitive \u0939\u0948, \u0907\u0938\u0932\u093f\u090f <code>Print</code> \u0914\u0930 <code>print</code> \u0905\u0932\u0917 identifiers \u092e\u093e\u0928\u0947 \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>C. Both A and B \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>python --version</code> \u0914\u0930 <code>python -V</code> \u0926\u094b\u0928\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 Python version \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#2-data-structures","title":"\u0905\u0927\u094d\u092f\u093e\u092f 2: Data Structures","text":"<ol> <li> <p>B. List, Tuple \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 list mutable (\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f) \u0939\u094b\u0924\u093e \u0939\u0948, \u091c\u092c\u0915\u093f tuple immutable (\u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f) \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Dictionary \u0921\u0947\u091f\u093e \u0915\u094b key-value pairs \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. <code>['apple', 'banana', 'cherry']</code> \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 Python list \u0915\u093e \u0938\u0939\u0940 \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0939\u0948\u0964</p> </li> <li> <p>C. Set \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Set \u090f\u0915 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0939\u0948 \u091c\u094b duplicate \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0926\u0947\u0924\u0940\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 lists ordered collections of items \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. 1 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>print(my_list[0])</code> statement list \u0915\u0940 \u092a\u0939\u0932\u0940 \u0906\u0907\u091f\u092e \u0915\u094b \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u094b 1 \u0939\u0948\u0964</p> </li> <li> <p>B. append() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>append()</code> method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 list \u0915\u0947 \u0905\u0902\u0924 \u092e\u0947\u0902 \u090f\u0915 \u0906\u0907\u091f\u092e \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. <code>{}</code> \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 \u0916\u093e\u0932\u0940 dictionary <code>{}</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092c\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>False \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Tuple \u0905\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928\u0940\u092f \u0939\u094b\u0924\u093e \u0939\u0948; \u0907\u0938\u0915\u0947 \u0906\u0907\u091f\u092e\u094b\u0902 \u0915\u094b \u0928\u093f\u0930\u094d\u092e\u093e\u0923 \u0915\u0947 \u092c\u093e\u0926 \u092c\u0926\u0932\u093e \u0928\u0939\u0940\u0902 \u091c\u093e \u0938\u0915\u0924\u093e\u0964</p> </li> <li> <p>A. <code>{1, 2, 3}</code> \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Set \u0905\u092a\u0928\u0947 \u0906\u092a duplicate \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0924\u093e \u0939\u0948, \u0907\u0938\u0932\u093f\u090f <code>{1, 2, 2, 3}</code> <code>{1, 2, 3}</code> \u092c\u0928 \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>False \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Set duplicate \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>C. pop() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>pop()</code> method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 dictionary \u0938\u0947 \u090f\u0915 key-value pair \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. 3 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>len()</code> function tuple \u092e\u0947\u0902 \u0906\u0907\u091f\u092e\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948, \u091c\u094b 3 \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 Python list \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u0915\u093e\u0930\u094b\u0902 \u0915\u0947 \u0906\u0907\u091f\u092e\u094b\u0902 \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930 \u0938\u0915\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>B. Set \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Set \u090f\u0915 \u0905\u0928\u0942\u0920\u0947 \u0906\u0907\u091f\u092e\u094b\u0902 \u0915\u0947 \u0938\u092e\u0942\u0939 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u0926\u0930\u094d\u0936 \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u092c\u093f\u0928\u093e \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f \u0915\u0947 \u091b\u093e\u0924\u094d\u0930 \u0928\u093e\u092e\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#3-conditions-control-flow","title":"\u0905\u0927\u094d\u092f\u093e\u092f 3: Conditions &amp; Control Flow","text":"<ol> <li> <p>A. if \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>if</code> keyword Python \u092e\u0947\u0902 \u0936\u0930\u094d\u0924\u0947\u0902 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>elif</code> statement \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u092f\u0926\u093f \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 <code>if</code> \u0936\u0930\u094d\u0924 \u092a\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0939\u094b\u0924\u0940\u0964</p> </li> <li> <p>A. == \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>==</code> operator \u0926\u094b \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u0938\u092e\u093e\u0928\u0924\u093e \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. Yes \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u091a\u0942\u0902\u0915\u093f <code>x</code> 3 \u0938\u0947 \u092c\u0921\u093c\u093e \u0939\u0948, <code>if</code> \u0936\u0930\u094d\u0924 \u0938\u0939\u0940 \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \"Yes\" \u092a\u094d\u0930\u093f\u0902\u091f \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>else</code> \u092c\u094d\u0932\u0949\u0915 \u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915 \u0939\u0948 \u0914\u0930 \u0915\u0947\u0935\u0932 \u0924\u092c \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948 \u091c\u092c \u0906\u092a <code>if</code> \u0936\u0930\u094d\u0924 \u0917\u0932\u0924 \u0939\u094b\u0928\u0947 \u092a\u0930 \u0915\u094b\u0921 \u091a\u0932\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>B. while \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>while</code> keyword \u0915\u093e \u0909\u092a\u092f\u094b\u0917 <code>while</code> loop \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. for \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>for</code> loop \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094b\u0921 \u0915\u0947 \u092c\u094d\u0932\u0949\u0915 \u0915\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u092c\u093e\u0930 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. Prints 0, 1, 2 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>range(3)</code> 0 \u0938\u0947 2 \u0924\u0915 \u0915\u0947 \u0928\u0902\u092c\u0930 \u091c\u0928\u0930\u0947\u091f \u0915\u0930\u0924\u093e \u0939\u0948, \u0914\u0930 <code>print(i)</code> \u0907\u0928 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u094b \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>break</code> keyword \u0915\u093e \u0909\u092a\u092f\u094b\u0917 loop \u0915\u094b \u0938\u092d\u0940 iterations \u092a\u0942\u0930\u0947 \u0915\u093f\u090f \u092c\u093f\u0928\u093e \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. continue \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>continue</code> keyword \u0935\u0930\u094d\u0924\u092e\u093e\u0928 iteration \u0915\u094b \u091b\u094b\u0921\u093c \u0926\u0947\u0924\u093e \u0939\u0948 \u0914\u0930 \u0905\u0917\u0932\u0947 iteration \u0915\u0947 \u0938\u093e\u0925 \u091c\u093e\u0930\u0940 \u0930\u0939\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>C. if x == 5: print(x) else: print(\"not 5\") \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 syntax <code>if-else</code> statement \u0915\u094b \u0936\u0930\u094d\u0924\u094b\u0902 \u0914\u0930 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u0908 <code>if</code> statements \u0915\u094b \u0938\u094d\u0935\u0924\u0902\u0924\u094d\u0930 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948 \u092c\u093f\u0928\u093e <code>elif</code> \u0915\u0947\u0964</p> </li> <li> <p>A. In range \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>if</code> \u0936\u0930\u094d\u0924 \u091c\u093e\u0902\u091a\u0924\u0940 \u0939\u0948 \u0915\u093f <code>x</code> 5 \u0914\u0930 15 \u0915\u0947 \u092c\u0940\u091a \u0939\u0948, \u0907\u0938\u0932\u093f\u090f \"In range\" \u092a\u094d\u0930\u093f\u0902\u091f \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. range() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>range()</code> function \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u0940 \u0936\u094d\u0930\u0943\u0902\u0916\u0932\u093e \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u094b \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 loops \u092e\u0947\u0902 \u092a\u094d\u0930\u092f\u094b\u0917 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u091c\u091f\u093f\u0932 \u0936\u0930\u094d\u0924\u0947\u0902 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>if</code> statements \u0915\u094b \u090f\u0915 \u0926\u0942\u0938\u0930\u0947 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0928\u0947\u0938\u094d\u091f \u0915\u0930\u0928\u093e \u0938\u0902\u092d\u0935 \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#4-functions-functional-programming","title":"\u0905\u0927\u094d\u092f\u093e\u092f 4: Functions &amp; Functional Programming","text":"<ol> <li> <p>C. def \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>def</code> keyword \u0915\u093e \u0909\u092a\u092f\u094b\u0917 Python \u092e\u0947\u0902 \u090f\u0915 function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. def \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 function definition <code>def</code> keyword \u0938\u0947 \u0936\u0941\u0930\u0942 \u0939\u094b\u0924\u0940 \u0939\u0948, \u0907\u0938\u0915\u0947 \u092c\u093e\u0926 function \u0915\u093e \u0928\u093e\u092e \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 \u090f\u0915 function \u0915\u0908 \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u090f\u0915 tuple \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0932\u094c\u091f\u093e\u0915\u0930 \u0915\u0908 \u092e\u093e\u0928 \u0932\u094c\u091f \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. 7 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>add</code> function 3 \u0914\u0930 4 \u0915\u093e \u092f\u094b\u0917 \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948, \u091c\u094b 7 \u0939\u0948\u0964</p> </li> <li> <p>B. arguments \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Functions \u0907\u0928\u092a\u0941\u091f\u094d\u0938 \u0915\u094b arguments \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u094d\u0935\u0940\u0915\u093e\u0930 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0909\u0928\u0915\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u093f\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 lambda function \u090f\u0915 \u091b\u094b\u091f\u093e, \u0905\u0928\u093e\u092e function \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u094b\u0908 \u092d\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948 \u0932\u0947\u0915\u093f\u0928 \u0915\u0947\u0935\u0932 \u090f\u0915 expression \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. lambda x, y: x + y \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u0926\u094b \u0938\u0902\u0916\u094d\u092f\u093e\u0913\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0935\u093e\u0932\u0947 lambda function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 syntax \u0939\u0948\u0964</p> </li> <li> <p>A. map() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>map()</code> function \u090f\u0915 iterable (\u091c\u0948\u0938\u0947 \u0915\u093f list) \u092e\u0947\u0902 \u0939\u0930 \u0906\u0907\u091f\u092e \u092a\u0930 \u090f\u0915 \u0926\u093f\u090f \u0917\u090f function \u0915\u094b \u0932\u093e\u0917\u0942 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. To create a new list with elements that meet a specific condition \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>filter()</code> \u090f\u0915 \u0928\u0908 list \u092c\u0928\u093e\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0935\u0947 \u0924\u0924\u094d\u0935 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u0947\u0937 \u0936\u0930\u094d\u0924 \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 function \u0915\u0947 \u092a\u093e\u0938 parameters \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0935\u0939 \u090f\u0915 \u092e\u093e\u0928 \u092d\u0940 \u0932\u094c\u091f \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. greet(\"Alice\") \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u092f\u0939 \u090f\u0915 function \u0915\u094b \u0915\u0949\u0932 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 syntax \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0928\u093e\u092e <code>greet</code> \u0939\u0948\u0964</p> </li> <li> <p>A. return \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>return</code> keyword \u0915\u093e \u0909\u092a\u092f\u094b\u0917 function \u0938\u0947 \u090f\u0915 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>False \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 functions \u0915\u094b \u090f\u0915 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0928\u093e \u0905\u0928\u093f\u0935\u093e\u0930\u094d\u092f \u0928\u0939\u0940\u0902 \u0939\u0948; \u0935\u0947 \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u0930\u0942\u092a \u0938\u0947 <code>None</code> \u0932\u094c\u091f\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. Hello! \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>say_hello()</code> function \u0915\u0949\u0932 \u0915\u0930\u0928\u0947 \u092a\u0930 \"Hello!\" \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. parameter \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Functions \u0915\u094b \u0905\u0928\u094d\u092f functions \u092e\u0947\u0902 arguments \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u092a\u093e\u0930\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#5-object-oriented-programming-oop","title":"\u0905\u0927\u094d\u092f\u093e\u092f 5: Object-Oriented Programming (OOP)","text":"<ol> <li> <p>A. class \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 class Python \u092e\u0947\u0902 objects \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 blueprint \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>B. An instance of a class \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 \u090f\u0915 object \u090f\u0915 class \u0915\u093e instance \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Inheritance \u090f\u0915 class \u0915\u094b \u0926\u0942\u0938\u0930\u0940 class \u0938\u0947 methods \u0914\u0930 attributes \u0935\u093f\u0930\u093e\u0938\u0924 \u092e\u0947\u0902 \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. To initialize the object\u2019s attributes \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>__init__()</code> method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u090f\u0915 object \u0915\u0947 attributes \u0915\u094b initialize \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c object \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. data, actions \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Attributes \u090f\u0915 object \u0915\u0947 data \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 methods \u0935\u0947 actions \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092f\u0939 perform \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 \u0939\u0940 class \u0938\u0947 \u0915\u0908 objects \u092c\u0928\u093e\u090f \u091c\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902, \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0915\u0947 \u0905\u092a\u0928\u0947 attributes \u0914\u0930 methods \u0915\u0947 \u0938\u093e\u0925\u0964</p> </li> <li> <p>B. Defines a class called Dog \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u094b\u0921 \u090f\u0915 class <code>Dog</code> \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 <code>__init__()</code> method <code>name</code> attribute \u0915\u094b initialize \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. parentheses \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 class \u0938\u0947 object \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, class \u0915\u093e \u0928\u093e\u092e \u0914\u0930 \u0909\u0938\u0915\u0947 \u092c\u093e\u0926 parentheses \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964</p> </li> <li> <p>False \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0906\u092a \u090f\u0915 class \u0915\u0947 \u0905\u0902\u0926\u0930 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 actions \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f methods \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. Whiskers \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>print(cat1.name)</code> statement <code>cat1</code> object \u0915\u0947 <code>name</code> attribute \u0915\u094b \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u094b \"Whiskers\" \u0939\u0948\u0964</p> </li> <li> <p>B. super \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>super</code> keyword \u0915\u093e \u0909\u092a\u092f\u094b\u0917 parent class \u0938\u0947 methods \u0914\u0930 attributes \u0915\u094b \u0935\u093f\u0930\u093e\u0938\u0924 \u092e\u0947\u0902 \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 objects \u0915\u0947 \u092a\u093e\u0938 \u0926\u094b\u0928\u094b\u0902 attributes \u0914\u0930 methods \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. Beep Beep! \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>honk()</code> method <code>my_car</code> object \u092a\u0930 \u0915\u0949\u0932 \u0915\u0930\u0928\u0947 \u092a\u0930 \"Beep Beep!\" \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. init() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>__init__()</code> method \u0911\u091f\u094b\u092e\u0947\u091f\u093f\u0915\u0932\u0940 \u0915\u0949\u0932 \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u092c \u090f\u0915 object \u090f\u0915 class \u0938\u0947 \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 \u090f\u0915 \u0939\u0940 method \u0928\u093e\u092e \u0915\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 classes \u092e\u0947\u0902 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#6-python-in-the-real-world","title":"\u0905\u0927\u094d\u092f\u093e\u092f 6: Python in the Real World","text":"<ol> <li> <p>B. Pandas \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Pandas \u090f\u0915 \u0936\u0915\u094d\u0924\u093f\u0936\u093e\u0932\u0940 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u094b Python \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0914\u0930 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948, \u0914\u0930 DataFrames \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u0947 \u0938\u093e\u0925 \u0915\u093e\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0915\u094d\u0938\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Matplotlib \u090f\u0915 plotting \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0917\u094d\u0930\u093e\u092b\u093c \u0914\u0930 \u091a\u093e\u0930\u094d\u091f \u091c\u0948\u0938\u0940 visualizations \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. Selenium \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Selenium \u090f\u0915 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u0935\u0947\u092c \u0924\u0924\u094d\u0935\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930\u0928\u093e\u0964</p> </li> <li> <p>A. A spreadsheet or table \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u090f\u0915 Pandas <code>DataFrame</code> \u090f\u0915 2-\u0906\u092f\u093e\u092e\u0940 \u0932\u0947\u092c\u0932 \u0935\u093e\u0932\u093e \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0939\u0948 \u091c\u094b \u090f\u0915 \u0938\u094d\u092a\u094d\u0930\u0947\u0921\u0936\u0940\u091f \u092f\u093e \u0924\u093e\u0932\u093f\u0915\u093e \u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u0948\u0964</p> </li> <li> <p>False \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Selenium \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0921\u0947\u091f\u093e visualization \u0915\u0947 \u0932\u093f\u090f \u0928\u0939\u0940\u0902\u0964</p> </li> <li> <p>A. Scikit-learn \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Scikit-learn \u090f\u0915 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 Python \u092e\u0947\u0902 \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917 \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u092a\u094d\u0930\u0936\u093f\u0915\u094d\u0937\u0923 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>C. To make predictions based on data \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Scikit-learn \u092e\u0947\u0902 <code>DecisionTreeClassifier</code> \u0935\u0930\u094d\u0917\u0940\u0915\u0930\u0923 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0907\u0928\u092a\u0941\u091f \u0921\u0947\u091f\u093e \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u093f\u092f\u093e\u0901 \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u092e\u0947\u0902 <code>smtplib</code> \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. Matplotlib \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Matplotlib \u090f\u0915 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u092a\u094d\u0932\u0949\u091f\u094d\u0938 \u0914\u0930 \u091a\u093e\u0930\u094d\u091f\u094d\u0938, \u091c\u0948\u0938\u0947 \u0915\u093f \u092c\u093e\u0930 \u091a\u093e\u0930\u094d\u091f\u094d\u0938 \u0914\u0930 \u092a\u093e\u0908 \u091a\u093e\u0930\u094d\u091f\u094d\u0938, \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. A line chart \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: \u0915\u094b\u0921 \u0938\u094d\u0928\u093f\u092a\u0947\u091f <code>matplotlib</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0932\u093e\u0907\u0928 \u091a\u093e\u0930\u094d\u091f \u0915\u094b \u092a\u094d\u0932\u0949\u091f \u0914\u0930 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u0926\u093f\u090f \u0917\u090f \u0921\u0947\u091f\u093e \u092c\u093f\u0902\u0926\u0941\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Pandas \u0921\u0947\u091f\u093e \u0915\u0947 \u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u093f\u0927\u093f\u092f\u093e\u0901 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u0916\u093e\u0932\u0940 \u0938\u094d\u0925\u093e\u0928\u094b\u0902 \u0915\u094b \u092d\u0930\u0928\u093e \u092f\u093e \u0917\u093e\u092f\u092c \u092e\u093e\u0928\u094b\u0902 \u0915\u094b \u0939\u091f\u093e \u0926\u0947\u0928\u093e\u0964</p> </li> <li> <p>A. sendmail() \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: <code>smtplib</code> \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f functionality \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948, \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u0903 <code>sendmail()</code> method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947\u0964</p> </li> <li> <p>B. import pandas as pd \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Pandas \u0915\u094b \u0906\u092f\u093e\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0938\u093e\u092e\u093e\u0928\u094d\u092f convention <code>import pandas as pd</code> \u0939\u0948\u0964</p> </li> <li> <p>True \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Python \u0915\u093e \u0935\u094d\u092f\u093e\u092a\u0915 \u0930\u0942\u092a \u0938\u0947 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917 \u092e\u0949\u0921\u0932 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u094b \u0921\u0947\u091f\u093e \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092a\u0930\u093f\u0923\u093e\u092e\u094b\u0902 \u0915\u0940 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>B. Selenium \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e: Selenium \u090f\u0915 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u093f \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u092e\u0947\u0902 \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#7","title":"\u0905\u0927\u094d\u092f\u093e\u092f 7: \u0905\u0902\u0924\u093f\u092e \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e (\u0905\u092d\u094d\u092f\u093e\u0938)","text":"<ol> <li> <p>B. function \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u090f\u0915 \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0915\u093e \u091f\u0941\u0915\u0921\u093c\u093e \u0939\u0948 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 Python \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092b\u093c\u0902\u0915\u094d\u0936\u0902\u0938, \u0915\u094d\u0932\u093e\u0938\u0947\u0938, \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0938\u0902\u092c\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>A. \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0938\u0939\u093e\u092f\u0915 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0938\u0939\u093e\u092f\u0915 \u090f\u0915 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 Python \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u0915\u093e \u092a\u0939\u0932\u093e \u0935\u093f\u091a\u093e\u0930 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u094b \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u0905\u0928\u0941\u092d\u0935 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. smtplib \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Python \u092e\u0947\u0902 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a <code>smtplib</code> \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Python \u0907\u0924\u0928\u0940 \u092c\u0939\u0941\u092a\u0930\u0915\u093e\u0930\u0940 \u0939\u0948 \u0915\u093f \u0907\u0938\u0938\u0947 Tic-Tac-Toe \u091c\u0948\u0938\u0947 \u0938\u0930\u0932 \u0916\u0947\u0932 \u092c\u0928\u093e\u090f \u091c\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. \u092a\u0941\u0928\u0930\u093e\u0935\u0930\u094d\u0924\u0940 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0932\u093f\u0916\u0947\u0902 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u092a\u0941\u0928\u0930\u093e\u0935\u0930\u094d\u0924\u0940 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0932\u093f\u0916\u0928\u093e Python \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u092e\u0947\u0902 \u0915\u094b\u0921 \u0915\u094b \u0938\u0902\u0917\u0920\u093f\u0924 \u0914\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0905\u091a\u094d\u091b\u093e \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u092c\u093f\u0902\u0926\u0941 \u0939\u0948\u0964</p> </li> <li> <p>A. \u0916\u0930\u094d\u091a \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u091c\u094b \u0916\u0930\u094d\u091a \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0924\u093e \u0939\u0948, \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0916\u0930\u094d\u091a \u091f\u094d\u0930\u0948\u0915\u0930 \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u0932\u093e\u0928\u0947 \u0914\u0930 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u0905\u0928\u094d\u092f \u091a\u0940\u091c\u094b\u0902 \u0915\u0947 \u092c\u0940\u091a\u0964</p> </li> <li> <p>A. API \u0938\u0947 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u0932\u093e\u0928\u093e \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u092e\u094c\u0938\u092e \u0910\u092a \u092e\u0947\u0902, \u0906\u092a \u092e\u094c\u0938\u092e API \u0938\u0947 \u0921\u0947\u091f\u093e \u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>B. \u0915\u094d\u0935\u093f\u091c\u093c \u0910\u092a \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u0915\u094d\u0935\u093f\u091c\u093c \u0910\u092a \u090f\u0915 Python \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u092a\u094d\u0930\u0936\u094d\u0928 \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0940 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>\u0917\u0932\u0924 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Python \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0915\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0935\u093e\u0924\u093e\u0935\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u091a\u0932\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u0915\u0947\u0935\u0932 \u0915\u092e\u093e\u0902\u0921 \u0932\u093e\u0907\u0928 \u0938\u0947 \u0928\u0939\u0940\u0902\u0964</p> </li> <li> <p>A. \u0939\u0947\u0932\u094b, \u090f\u0932\u0947\u0938 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u0915\u094b\u0921 \u090f\u0915 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 <code>greet()</code> \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u090f\u0915 \u0905\u092d\u093f\u0935\u093e\u0926\u0928 \u0938\u0902\u0926\u0947\u0936 \u0932\u094c\u091f\u093e\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u0947 \u092b\u093f\u0930 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>C. \u0905\u0928\u0941\u0938\u094d\u092e\u093e\u0930\u0915 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u091c\u094b \u0906\u092a\u0915\u094b \u0906\u0917\u093e\u092e\u0940 \u0918\u091f\u0928\u093e\u0913\u0902 \u0915\u0940 \u092f\u093e\u0926 \u0926\u093f\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0924\u0940 \u0939\u0948, \u0905\u0915\u094d\u0938\u0930 \u090f\u0915 \u0905\u0928\u0941\u0938\u094d\u092e\u093e\u0930\u0915 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u094b \u092a\u0922\u093c\u0928\u0947 \u0914\u0930 \u0932\u093f\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u094b \u0915\u0908 \u092a\u0930\u093f\u092f\u094b\u091c\u0928\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0940 \u0939\u0948\u0964</p> </li> <li> <p>A. \u0938\u0942\u091a\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u0915 \u0938\u0942\u091a\u0940 3x3 \u0916\u0947\u0932 \u092c\u094b\u0930\u094d\u0921 \u0915\u094b \u090f\u0915 Tic-Tac-Toe \u0916\u0947\u0932 \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0909\u092a\u092f\u0941\u0915\u094d\u0924 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09-ans/#8","title":"\u0905\u0927\u094d\u092f\u093e\u092f 8: \u0905\u0924\u094d\u092f\u093e\u0927\u0941\u0928\u093f\u0915 \u092a\u094d\u0930\u094c\u0926\u094d\u092f\u094b\u0917\u093f\u0915\u093f\u092f\u094b\u0902 \u0915\u0940 \u0916\u094b\u091c","text":"<ol> <li> <p>A. \u091c\u091f\u093f\u0932 \u0921\u0947\u091f\u093e \u0915\u0947 \u092c\u0921\u093c\u0947 \u0938\u0947\u091f \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u092c\u0921\u093c\u0947 \u0914\u0930 \u091c\u091f\u093f\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094b\u0902 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0914\u0930 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u0909\u0928\u094d\u0928\u0924 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>B. \u090f\u091c \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u091c \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0915\u0930\u0940\u092c \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u0948\u0938\u0947 \u0938\u094d\u0925\u093e\u0928\u0940\u092f \u0921\u093f\u0935\u093e\u0907\u0938 \u092a\u0930\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0914\u0930 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0915\u094b \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0926\u0942\u0930\u0938\u094d\u0925 \u0938\u0930\u094d\u0935\u0930\u094b\u0902 \u092a\u0930 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0914\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964</p> </li> <li> <p>B. \u0915\u0943\u0924\u094d\u0930\u093f\u092e \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: AI \u0915\u093e \u092e\u0924\u0932\u092c \u0915\u0943\u0924\u094d\u0930\u093f\u092e \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0939\u0948, \u091c\u094b \u0910\u0938\u0940 \u092a\u094d\u0930\u0923\u093e\u0932\u093f\u092f\u093e\u0901 \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948 \u091c\u094b \u092e\u093e\u0928\u0935 \u091c\u0948\u0938\u0940 \u092c\u0941\u0926\u094d\u0927\u093f\u092e\u0924\u094d\u0924\u093e \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f \u0915\u0930 \u0938\u0915\u0924\u0940 \u0939\u0948\u0902\u0964</p> </li> <li> <p>A. \u092a\u093e\u0920 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: GPT (Generative Pre-trained Transformer) \u0915\u094b \u092e\u093e\u0928\u0935-\u091c\u0948\u0938\u0947 \u092a\u093e\u0920 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: DALL\u00b7E \u090f\u0915 AI \u092e\u0949\u0921\u0932 \u0939\u0948 \u091c\u094b \u092a\u093e\u0920 \u0935\u0930\u094d\u0923\u0928\u094b\u0902 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u091b\u0935\u093f\u092f\u093e\u0901 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0938\u0915\u094d\u0937\u092e \u0939\u0948\u0964</p> </li> <li> <p>A. \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0915\u0930\u0940\u092c \u0932\u093e\u0915\u0930 \u0924\u0947\u091c\u0940 \u0938\u0947 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u093e \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u091c \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u092a\u094d\u0930\u094b\u0938\u0947\u0938\u093f\u0902\u0917 \u0915\u0940 \u0917\u0924\u093f \u092e\u0947\u0902 \u0938\u0941\u0927\u093e\u0930 \u0915\u0930\u0924\u093e \u0939\u0948 \u0926\u094d\u0935\u093e\u0930\u093e \u0921\u0947\u091f\u093e \u0915\u094b \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0938\u094d\u0925\u093e\u0928 \u0915\u0947 \u0915\u0930\u0940\u092c \u0938\u0902\u092d\u093e\u0932\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. \u0938\u0902\u0935\u093e\u0926 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u0928\u0947\u091f\u0935\u0930\u094d\u0915\u093f\u0902\u0917 \u0921\u093f\u0935\u093e\u0907\u0938\u094b\u0902 \u0915\u094b \u090f\u0915-\u0926\u0942\u0938\u0930\u0947 \u0915\u0947 \u0938\u093e\u0925 \u0938\u0902\u0935\u093e\u0926 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u0940 \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0938\u0947 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0914\u0930 \u0905\u0902\u0924\u0930\u094d\u0926\u0943\u0937\u094d\u091f\u093f \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. Google Drive \u092a\u0930 \u092b\u093c\u094b\u091f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u093e \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Google Drive \u092a\u0930 \u092b\u093c\u094b\u091f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u093e \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u093e \u090f\u0915 \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948, \u091c\u0939\u093e\u0902 \u0921\u0947\u091f\u093e \u0926\u0942\u0930\u0938\u094d\u0925 \u0930\u0942\u092a \u0938\u0947 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0939\u094b\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>B. \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u0938\u094d\u0935\u091a\u093e\u0932\u0928 \u0909\u0928 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u094b \u0938\u0902\u0926\u0930\u094d\u092d\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u094b \u092c\u093f\u0928\u093e \u092e\u093e\u0928\u0935 \u0939\u0938\u094d\u0924\u0915\u094d\u0937\u0947\u092a \u0915\u0947 \u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964</p> </li> <li> <p>\u0917\u0932\u0924 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u090f\u091c \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0921\u0947\u091f\u093e \u0915\u094b \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0924\u0947\u091c\u0940 \u0938\u0947 \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u0921\u0947\u091f\u093e \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0915\u0930\u0940\u092c \u0939\u094b\u0924\u093e \u0939\u0948, \u0928 \u0915\u093f \u0926\u0942\u0930\u0964</p> </li> <li> <p>A. \u0928\u0947\u091f\u092b\u094d\u0932\u093f\u0915\u094d\u0938 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: Netflix \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0940 \u0938\u093f\u092b\u093e\u0930\u093f\u0936 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u093f\u0917 \u0921\u0947\u091f\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>A. GPT \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: GPT \u090f\u0915 AI \u092e\u0949\u0921\u0932 \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u092e\u093e\u0928\u0935-\u091c\u0948\u0938\u0947 \u092a\u093e\u0920 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</p> </li> <li> <p>\u0938\u0939\u0940 \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923: \u0928\u0947\u091f\u0935\u0930\u094d\u0915\u093f\u0902\u0917 \u092e\u0947\u0902 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930\u094b\u0902 \u0914\u0930 \u0921\u093f\u0935\u093e\u0907\u0938\u094b\u0902 \u0915\u094b \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u093e \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u094b\u0921\u093c\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964</p> </li> </ol>"},{"location":"hi/chapters/chapter09/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 9: \u092a\u094d\u0930\u0936\u094d\u0928 \u092c\u0948\u0902\u0915","text":""},{"location":"hi/chapters/chapter09/#1-python","title":"\u0905\u0927\u094d\u092f\u093e\u092f 1: Python \u0915\u093e \u092a\u0930\u093f\u091a\u092f","text":"<ol> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u0915\u094b 1991 \u092e\u0947\u0902 ______ \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964     A. Guido van Rossum     B. Elon Musk     C. Bill Gates  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 <code>print()</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u090f\u0915 \u092b\u093c\u093e\u0907\u0932 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948     B. \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u092a\u0930 \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u092f\u093e \u0935\u0947\u0930\u093f\u090f\u092c\u0932\u094d\u0938 \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948     C. \u090f\u0915 \u0935\u0947\u0930\u093f\u090f\u092c\u0932 \u0939\u091f\u093e\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u0905\u092a\u0928\u0947 \u0938\u0930\u0932 syntax \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u092a\u0922\u093c\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0939\u0948?     A. <code>PRINT \"Hello, World!\"</code>     B. <code>print(\"Hello, World!\")</code>     C. <code>Print(Hello World!)</code> </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: ______ \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0906\u092a\u0915\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0907\u0928\u092a\u0941\u091f \u0932\u0947\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     A. input()     B. output()     C. ask()  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python Google Colab \u091c\u0948\u0938\u0947 \u092a\u094d\u0932\u0947\u091f\u092b\u093e\u0930\u094d\u092e\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0940\u0927\u0947 \u090f\u0915 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 \u091a\u0932 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 <code>True</code> \u0914\u0930 <code>False</code> \u0915\u093f\u0938 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902?     A. Integers     B. Booleans     C. Strings  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u0915\u094b\u0921 \u092e\u0947\u0902 comments \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938 \u091a\u093f\u0928\u094d\u0939 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. //     B. #     C. !  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0905\u092a\u0928\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u092a\u0930 Python \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u092e\u093e\u0902\u0921 \u0939\u0948 <code>__________ install python</code>\u0964     A. pip     B. run     C. start  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u093e \u092e\u093e\u0928\u094d\u092f Python \u0935\u0947\u0930\u093f\u090f\u092c\u0932 \u0928\u093e\u092e \u0928\u0939\u0940\u0902 \u0939\u0948?     A. my_var     B. my-var     C. myVar  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u094d\u0938 \u0915\u094b \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u094d\u0932\u0947\u091f\u092b\u093c\u0949\u0930\u094d\u092e \u092a\u0930 \u091a\u0932\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 Windows, Mac, \u0914\u0930 Linux \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092b\u093c\u093e\u0907\u0932 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 <code>__________</code> \u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964     A. .txt     B. .doc     C. .py  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 Python \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948: <code>print(3 + 5)</code>?     A. 35     B. 8     C. Error  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python case-sensitive \u0939\u0948, \u092e\u0924\u0932\u092c <code>Print</code> \u0914\u0930 <code>print</code> \u0915\u094b \u0905\u0932\u0917-\u0905\u0932\u0917 \u092e\u093e\u0928\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938 \u0915\u092e\u093e\u0902\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948?     A. <code>python --version</code>     B. <code>python -V</code>     C. \u0926\u094b\u0928\u094b\u0902 A \u0914\u0930 B  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#2-data-structures","title":"\u0905\u0927\u094d\u092f\u093e\u092f 2: Data Structures","text":"<ol> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 __ \u0909\u0928 \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0939\u0948 \u091c\u093f\u0938\u0947 \u092c\u0926\u0932\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948, \u091c\u092c\u0915\u093f ____ \u092c\u0926\u0932\u093e \u0928\u0939\u0940\u0902 \u091c\u093e \u0938\u0915\u0924\u093e\u0964     A. Tuple, List     B. List, Tuple     C. Dictionary, Set  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 dictionary \u0921\u0947\u091f\u093e \u0915\u094b key-value pairs \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 Python \u0938\u0942\u091a\u0940 \u0915\u093e \u092a\u094d\u0930\u0924\u093f\u0928\u093f\u0927\u093f\u0924\u094d\u0935 \u0915\u0930\u0924\u093e \u0939\u0948?     A. <code>['apple', 'banana', 'cherry']</code>     B. <code>(1, 2, 3)</code>     C. <code>{'key': 'value'}</code> </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 ______ \u090f\u0915 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0939\u0948 \u091c\u094b \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0926\u0947\u0924\u093e\u0964     A. List     B. Tuple     C. Set  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u092e\u0947\u0902 Lists \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u093e ordered \u0938\u0902\u0917\u094d\u0930\u0939 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u094b\u0917\u093e: <code>my_list = [1, 2, 3]; print(my_list[0])</code>?     A. 1     B. 2     C. 3  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 \u0906\u0907\u091f\u092e \u0915\u094b \u0938\u0942\u091a\u0940 \u0915\u0947 \u0905\u0902\u0924 \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>____________</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. insert()     B. append()     C. add()  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 \u0916\u093e\u0932\u0940 dictionary \u0915\u0948\u0938\u0947 \u092c\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948?     A. <code>{}</code>     B. <code>[]</code>     C. <code>()</code> </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 tuple \u0906\u092a\u0915\u094b \u0907\u0938\u0947 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0907\u0938\u0915\u0947 \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u094b \u092c\u0926\u0932\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948: <code>my_set = {1, 2, 2, 3}; print(my_set)</code>?     A. <code>{1, 2, 3}</code>     B. <code>{1, 2, 2, 3}</code>     C. <code>[1, 2, 3]</code> </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 set \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f values \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 dictionary \u0938\u0947 key-value pair \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a <code>__________</code> method \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     A. delete()     B. remove()     C. pop()  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u094d\u092f\u093e \u0939\u0948: <code>my_tuple = (1, 2, 3); print(len(my_tuple))</code>?     A. 1     B. 3     C. Error  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 Python \u0938\u0942\u091a\u0940 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u0947 \u0921\u0947\u091f\u093e (\u091c\u0948\u0938\u0947 strings, numbers, \u0906\u0926\u093f) \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u0940 \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0915\u093f\u0938 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0909\u0928 \u091b\u093e\u0924\u094d\u0930 \u0928\u093e\u092e\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092c\u0938\u0947 \u0905\u091a\u094d\u091b\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0906\u092a \u0915\u094b\u0908 \u0921\u0941\u092a\u094d\u0932\u093f\u0915\u0947\u091f \u0928\u0939\u0940\u0902 \u091a\u093e\u0939\u0924\u0947?     A. List     B. Set     C. Tuple  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#3-conditions-control-flow","title":"\u0905\u0927\u094d\u092f\u093e\u092f 3: Conditions &amp; Control Flow","text":"<ol> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 condition \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u093f\u0938 \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. if     B. do     C. check  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: <code>elif</code> statement \u0906\u092a\u0915\u094b <code>if</code> statement \u0915\u0947 \u092c\u093e\u0926 \u0915\u0908 \u0936\u0930\u094d\u0924\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0926\u094b \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u0938\u092e\u093e\u0928\u0924\u093e \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0947 \u0932\u093f\u090f <code>__________</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. ==     B. =     C. !=  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948: <code>x = 5; if x &gt; 3: print(\"Yes\") else: print(\"No\")</code>?     A. Yes     B. No     C. Error  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: <code>if</code> statement \u0915\u0947 \u092c\u093e\u0926 <code>else</code> block \u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915 \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: <code>while</code> loop \u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. for     B. while     C. loop  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 <code>____________</code> loop \u0915\u094b\u0921 \u0915\u093e \u090f\u0915 \u092c\u094d\u0932\u0949\u0915 \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 \u091a\u0932\u093e\u0924\u093e \u0939\u0948\u0964     A. while     B. for     C. repeat  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u092f\u0939 \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948? <pre><code>for i in range(3):\n    print(i)\n</code></pre>     A. 0, 1, 2 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948     B. 1, 2, 3 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948     C. 0, 1, 2, 3 \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: <code>break</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 loop \u0915\u094b \u091c\u0932\u094d\u0926\u0940 \u0938\u092e\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: loop \u0915\u0947 current iteration \u0915\u094b \u091b\u094b\u0921\u093c\u0928\u0947 \u0914\u0930 \u0905\u0917\u0932\u0947 \u092a\u0930 \u091c\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>__________</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. stop     B. continue     C. break  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: <code>if-else</code> statement \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u0940 syntax \u0915\u094d\u092f\u093e \u0939\u0948?     A. <code>if x == 5 else:</code>     B. <code>if x == 5: else:</code>     C. <code>if x == 5: print(x) else: print(\"not 5\")</code> </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a <code>elif</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u090f \u092c\u093f\u0928\u093e \u0915\u0908 <code>if</code> statements \u0930\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>x = 10\nif x &gt; 5 and x &lt; 15:\n    print(\"In range\")\nelse:\n    print(\"Out of range\")\n</code></pre>     A. In range     B. Out of range     C. Error  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: <code>__________</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0905\u0915\u094d\u0938\u0930 loops \u092e\u0947\u0902 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u0940 range \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. length()     B. range()     C. loop()  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a \u090f\u0915 <code>if</code> statement \u0915\u0947 \u0905\u0902\u0926\u0930 \u0926\u0942\u0938\u0930\u093e <code>if</code> statement \u0930\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#4-functions-functional-programming","title":"\u0905\u0927\u094d\u092f\u093e\u092f 4: Functions &amp; Functional Programming","text":"<ol> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094c\u0928 \u0938\u093e \u0915\u0940\u0935\u0930\u094d\u0921 \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948?     A. function     B. define     C. def  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 function \u0915\u0940 \u0936\u0941\u0930\u0941\u0906\u0924 <code>__________</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0938\u0947 \u0939\u094b\u0924\u0940 \u0939\u0948 \u0914\u0930 \u0907\u0938\u0915\u0947 \u092c\u093e\u0926 function \u0915\u093e \u0928\u093e\u092e \u0939\u094b\u0924\u093e \u0939\u0948\u0964     A. def     B. func     C. start  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 function Python \u092e\u0947\u0902 \u090f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>def add(x, y):\n    return x + y\n\nprint(add(3, 4))\n</code></pre>     A. 7     B. 12     C. Error  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Functions \u0907\u0928\u092a\u0941\u091f\u094d\u0938 \u0915\u094b \u0938\u094d\u0935\u0940\u0915\u093e\u0930 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 <code>____________</code> \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u094b \u092f\u0939 \u0924\u092f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0915\u093f \u0935\u0947 \u0915\u0948\u0938\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u0930\u0947\u0902\u0917\u0947\u0964     A. returns     B. arguments     C. loops  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 lambda function \u090f\u0915 \u091b\u094b\u091f\u093e anonymous function \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u094b \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u092e\u0947\u0902 arguments \u0932\u0947 \u0938\u0915\u0924\u093e \u0939\u0948 \u0932\u0947\u0915\u093f\u0928 \u0915\u0947\u0935\u0932 \u090f\u0915 expression \u0939\u094b\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0926\u094b \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f lambda function \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     A. <code>lambda x, y: x + y</code>     B. <code>lambda add x y</code>     C. <code>lambda: x + y</code> </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: <code>__________</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0915\u094b \u0938\u0942\u091a\u0940 \u0915\u0947 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0906\u0907\u091f\u092e \u092a\u0930 function \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. map()     B. list()     C. for_each()  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 <code>filter()</code> \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u090f\u0915 \u0928\u0908 \u0938\u0942\u091a\u0940 \u092c\u0928\u093e\u0928\u093e \u091c\u093f\u0938\u092e\u0947\u0902 \u0938\u092d\u0940 \u0906\u0907\u091f\u092e \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0939\u094b\u0902     B. \u090f\u0915 \u0928\u0908 \u0938\u0942\u091a\u0940 \u092c\u0928\u093e\u0928\u093e \u091c\u093f\u0938\u092e\u0947\u0902 \u0935\u0939 \u0906\u0907\u091f\u092e\u094d\u0938 \u0939\u094b\u0902 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0936\u0930\u094d\u0924 \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0924\u0947 \u0939\u094b\u0902     C. \u0938\u0942\u091a\u0940 \u092e\u0947\u0902 \u0906\u0907\u091f\u092e\u094d\u0938 \u0915\u0940 \u0917\u093f\u0928\u0924\u0940 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 Python function \u092e\u0947\u0902 parameters \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u092f\u0939 \u090f\u0915 value \u092d\u0940 \u0932\u094c\u091f\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: <code>greet</code> \u0928\u093e\u092e\u0915 function \u0915\u094b \u0915\u0949\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u0940 syntax \u0915\u094d\u092f\u093e \u0939\u0948?     A. <code>greet(\"Alice\")</code>     B. <code>call greet(\"Alice\")</code>     C. <code>def greet(\"Alice\")</code> </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0915\u093f\u0938\u0940 function \u0938\u0947 \u092e\u093e\u0928 \u0932\u094c\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>__________</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. return     B. output     C. end  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 Python function \u0915\u094b \u0939\u092e\u0947\u0936\u093e \u090f\u0915 value \u0932\u094c\u091f\u093e\u0928\u0940 \u091a\u093e\u0939\u093f\u090f\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>def say_hello():\n    print(\"Hello!\")\n\nsay_hello()\n</code></pre>     A. Hello!     B. Error     C. say_hello  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0906\u092a \u090f\u0915 function \u0915\u094b \u0926\u0942\u0938\u0930\u0947 function \u092e\u0947\u0902 argument \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 pass \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u090f\u0915 ______ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947\u0964     A. return     B. parameter     C. lambda  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#5-object-oriented-programming-oop","title":"\u0905\u0927\u094d\u092f\u093e\u092f 5: Object-Oriented Programming (OOP)","text":"<ol> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 objects \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f ______ \u090f\u0915 blueprint \u0939\u0948\u0964     A. class     B. object     C. method  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 \u090f\u0915 object \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e \u0921\u0947\u091f\u093e     B. \u090f\u0915 class \u0915\u093e instance     C. \u090f\u0915 method  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Inheritance \u090f\u0915 class \u0915\u094b \u0926\u0942\u0938\u0930\u0940 class \u0938\u0947 methods \u0914\u0930 attributes \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0915\u093f\u0938\u0940 class \u092e\u0947\u0902 <code>__init__()</code> method \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     A. object \u0915\u0947 attributes \u0915\u094b initialize \u0915\u0930\u0928\u093e     B. \u090f\u0915 object \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930\u0928\u093e     C. \u090f\u0915 function \u0915\u094b \u0915\u0949\u0932 \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Attributes \u090f\u0915 object \u0915\u093e __ \u0939\u094b\u0924\u0947 \u0939\u0948\u0902, \u0914\u0930 methods \u0935\u0947 ____ \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u092f\u0939 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. actions, data     B. data, actions     C. returns, parameters  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a \u090f\u0915 class \u0938\u0947 \u0915\u0908 objects \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u092f\u0939 \u0915\u094b\u0921 \u0915\u094d\u092f\u093e \u0915\u0930\u0924\u093e \u0939\u0948? <pre><code>class Dog:\n    def __init__(self, name):\n        self.name = name\n</code></pre>     A. \u090f\u0915 dog object \u092c\u0928\u093e\u0924\u093e \u0939\u0948     B. Dog \u0928\u093e\u092e\u0915 class \u0915\u094b \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948     C. \u090f\u0915 function \u091a\u0932\u093e\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0915\u093f\u0938\u0940 class \u0938\u0947 object \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a class \u0928\u093e\u092e \u0915\u0947 \u092c\u093e\u0926 ______ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964     A. brackets     B. parentheses     C. colons  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a \u0915\u093f\u0938\u0940 class \u0915\u0947 \u0905\u0902\u0926\u0930 method \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u0947\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>class Cat:\n    def __init__(self, name):\n        self.name = name\n\ncat1 = Cat(\"Whiskers\")\nprint(cat1.name)\n</code></pre>     A. Whiskers     B. Cat     C. Error  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 class \u0938\u0947 methods \u0914\u0930 attributes \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>__________</code> \u0915\u0940\u0935\u0930\u094d\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. inherit     B. super     C. extend  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 object Python \u092e\u0947\u0902 attributes \u0914\u0930 methods \u0926\u094b\u0928\u094b\u0902 \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>class Car:\n    def __init__(self, model):\n        self.model = model\n    def honk(self):\n        return \"Beep Beep!\"\n\nmy_car = Car(\"Tesla\")\nprint(my_car.honk())\n</code></pre>     A. Beep Beep!     B. Tesla     C. Error  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u0935\u093f\u0936\u0947\u0937 method <code>__________</code> \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u0924\u092c \u091a\u0932\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u090f\u0915 object \u092c\u0928\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. init()     B. create()     C. init()  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 \u0939\u0940 method \u0928\u093e\u092e \u0915\u094b Python \u092e\u0947\u0902 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 classes \u092e\u0947\u0902 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#6-python","title":"\u0905\u0927\u094d\u092f\u093e\u092f 6: Python \u0915\u093e \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917","text":"<ol> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Python \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0915\u094c\u0928 \u0938\u0940 library \u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948?     A. NumPy     B. Pandas     C. Matplotlib  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: <code>Matplotlib</code> library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 graphs \u0914\u0930 charts \u091c\u0948\u0938\u0947 visualizations \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 web browsing tasks \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f <code>__________</code> library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. smtplib     B. Selenium     C. Pandas  </p> </li> <li> <p>**\u092c\u0939\u0941\u0935</p> </li> </ol> <p>\u093f\u0915\u0932\u094d\u092a\u0940\u092f**: Pandas \u0915\u093e <code>DataFrame</code> \u0915\u093f\u0938\u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u0948?     A. \u090f\u0915 spreadsheet \u092f\u093e table     B. \u090f\u0915 dictionary     C. \u090f\u0915 function  </p> <ol> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Selenium \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0921\u0947\u091f\u093e visualization \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 machine learning models \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 <code>__________</code> library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. Scikit-learn     B. Matplotlib     C. Pandas  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Scikit-learn \u092e\u0947\u0902 <code>DecisionTreeClassifier</code> \u0915\u093e \u0909\u0926\u094d\u0926\u0947\u0936\u094d\u092f \u0915\u094d\u092f\u093e \u0939\u0948?     A. visual charts \u092c\u0928\u093e\u0928\u093e     B. \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u093f\u0902\u0917 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u093e     C. \u0921\u0947\u091f\u093e \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 predictions \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a Python \u092e\u0947\u0902 <code>smtplib</code> library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python library <code>__________</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 bar charts \u0914\u0930 pie charts \u091c\u0948\u0938\u0947 graphs \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. Pandas     B. Matplotlib     C. Scikit-learn  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>import matplotlib.pyplot as plt\n\nplt.plot([1, 2, 3], [4, 5, 6])\nplt.show()\n</code></pre>     A. \u090f\u0915 line chart     B. \u090f\u0915 bar chart     C. \u090f\u0915 error  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Pandas \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 missing data \u0915\u094b \u092d\u0930\u0915\u0930 gaps \u0915\u094b \u0938\u0902\u092d\u093e\u0932 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u092e\u093e\u0902\u0921 <code>__________</code> \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. sendmail()     B. postmail()     C. mail()  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Pandas library \u0915\u094b import \u0915\u0930\u0928\u0947 \u0915\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u093e \u0915\u094d\u092f\u093e \u0939\u0948?     A. <code>import pandas as p</code>     B. <code>import pandas as pd</code>     C. <code>import pd as pandas</code> </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092d\u0935\u093f\u0937\u094d\u092f\u0935\u093e\u0923\u093f\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f machine learning models \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python library <code>__________</code> \u0915\u093e \u0909\u092a\u092f\u094b\u0917 tasks \u091c\u0948\u0938\u0947 websites \u092e\u0947\u0902 login \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f browser \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. smtplib     B. Selenium     C. Matplotlib  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#7","title":"\u0905\u0927\u094d\u092f\u093e\u092f 7: \u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f (\u0905\u092d\u094d\u092f\u093e\u0938)","text":"<ol> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 ______ \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u090f\u0915 \u091b\u094b\u091f\u093e, \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u092f\u094b\u0917\u094d\u092f \u0915\u094b\u0921 \u0915\u093e \u091f\u0941\u0915\u0921\u093c\u093e \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u094b \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u093e\u0930\u094d\u092f \u0915\u0930\u0924\u093e \u0939\u0948\u0964     A. class     B. function     C. variable  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u090f\u0915 Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u092e\u0947\u0902 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u094b \u0939\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0908 functions, classes, \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u0938\u0902\u092f\u094b\u091c\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 Python \u092e\u0947\u0902 \u090f\u0915 \u0905\u091a\u094d\u091b\u093e \u092a\u0939\u0932\u093e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0935\u093f\u091a\u093e\u0930 \u0939\u0948?     A. Personal assistant     B. Web browser     C. File system  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0908\u092e\u0947\u0932 \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0930\u0942\u092a \u0938\u0947 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a <code>__________</code> library \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     A. Selenium     B. smtplib     C. Matplotlib  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u091b\u094b\u091f\u0947 \u0917\u0947\u092e\u094d\u0938 \u091c\u0948\u0938\u0947 Tic-Tac-Toe \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0915\u093f\u0938\u0940 \u092d\u0940 Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0905\u091a\u094d\u091b\u093e \u092a\u094d\u0930\u093e\u0930\u0902\u092d\u093f\u0915 \u092c\u093f\u0902\u0926\u0941 \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u0926\u094b\u0939\u0930\u093e\u090f \u091c\u093e\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u0938\u0902\u092d\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f functions \u0932\u093f\u0916\u0947\u0902     B. \u0915\u0908 variables \u092c\u0928\u093e\u090f\u0902     C. machine learning \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u091c\u094b \u0916\u0930\u094d\u091a\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0915\u0941\u0932 \u0916\u0930\u094d\u091a \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948 \u0909\u0938\u0947 ______ tracker \u0915\u0939\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. expense     B. data     C. automation  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: \u0906\u092a Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u0926\u093f\u0916\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u090f\u0915 weather app \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u092e\u0947\u0902 \u0906\u092a Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u0938 \u0932\u093f\u090f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902?     A. \u090f\u0915 API \u0938\u0947 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0947\u0902     B. \u092d\u0935\u093f\u0937\u094d\u092f \u0915\u093e \u092e\u094c\u0938\u092e \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u090f\u0902     C. \u092e\u094c\u0938\u092e \u0915\u0947 \u0935\u0940\u0921\u093f\u092f\u094b \u0926\u093f\u0916\u093e\u090f\u0902  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 ______ \u090f\u0915 Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0935\u093f\u091a\u093e\u0930 \u0939\u0948 \u091c\u094b \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0914\u0930 \u0909\u0924\u094d\u0924\u0930\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b quiz \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. test system     B. quiz app     C. calculator  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0915\u094b \u0939\u092e\u0947\u0936\u093e \u0915\u092e\u093e\u0902\u0921 \u0932\u093e\u0907\u0928 \u0938\u0947 \u091a\u0932\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0907\u0938 \u0915\u094b\u0921 \u0915\u093e \u0906\u0909\u091f\u092a\u0941\u091f \u0915\u094d\u092f\u093e \u0939\u0948? <pre><code>def greet(name):\n    return \"Hello, \" + name\n\nprint(greet(\"Alice\"))\n</code></pre>     A. Hello, Alice     B. Error     C. Alice  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: \u090f\u0915 ______ \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u092a\u0915\u094b \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u0915\u0930 \u0906\u0917\u093e\u092e\u0940 \u0918\u091f\u0928\u093e\u0913\u0902 \u0915\u0940 \u092f\u093e\u0926 \u0926\u093f\u0932\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. calendar     B. weather     C. reminder  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Python \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092e\u0947\u0902 \u092b\u093e\u0907\u0932\u094d\u0938 \u0938\u0947 \u0921\u0947\u091f\u093e \u092a\u0922\u093c\u0928\u093e \u0914\u0930 \u0932\u093f\u0916\u0928\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Python \u092e\u0947\u0902 Tic-Tac-Toe \u0917\u0947\u092e \u090f\u0915 ______ \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 3x3 \u0917\u0947\u092e \u092c\u094b\u0930\u094d\u0921 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. list     B. tuple     C. string  </p> </li> </ol>"},{"location":"hi/chapters/chapter09/#8","title":"\u0905\u0927\u094d\u092f\u093e\u092f 8: \u0928\u0935\u0940\u0928\u0924\u092e \u0924\u0915\u0928\u0940\u0915\u094b\u0902 \u0915\u093e \u0905\u0928\u094d\u0935\u0947\u0937\u0923","text":"<ol> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Big Data \u0915\u094d\u092f\u093e \u0939\u0948?     A. \u092c\u0921\u093c\u0947 \u0914\u0930 \u091c\u091f\u093f\u0932 \u0921\u0947\u091f\u093e \u0938\u0947\u091f\u094d\u0938     B. \u090f\u0915 \u091b\u094b\u091f\u093e dataset     C. \u0915\u094d\u0932\u093e\u0909\u0921 \u0938\u094d\u091f\u094b\u0930\u0947\u091c  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: ______ computing \u0935\u0939 \u0939\u0948 \u091c\u092c \u0921\u0947\u091f\u093e \u092b\u094b\u0928 \u092f\u093e \u0938\u094d\u092e\u093e\u0930\u094d\u091f \u0915\u093e\u0930\u094b\u0902 \u091c\u0948\u0938\u0947 \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0915\u0930\u0940\u092c \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     A. Cloud     B. Edge     C. Local  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Cloud computing \u0921\u0947\u091f\u093e \u0914\u0930 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u094b remote servers \u092a\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0906\u092a \u0907\u0902\u091f\u0930\u0928\u0947\u091f \u092a\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: AI \u0915\u093e \u0915\u094d\u092f\u093e \u0905\u0930\u094d\u0925 \u0939\u0948?     A. Automated Information     B. Artificial Intelligence     C. Autonomous Input  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: GPT \u090f\u0915 \u092a\u094d\u0930\u0915\u093e\u0930 \u0915\u093e AI model \u0939\u0948 \u091c\u093f\u0938\u0947 ______ \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964     A. text     B. images     C. sound  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: DALL\u00b7E \u090f\u0915 AI model \u0939\u0948 \u091c\u094b \u091f\u0947\u0915\u094d\u0938\u094d\u091f \u0935\u093f\u0935\u0930\u0923\u094b\u0902 \u0938\u0947 images \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: Edge computing \u0915\u093f\u0938\u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948?     A. \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u094d\u0930\u094b\u0924 \u0915\u0947 \u0915\u0930\u0940\u092c \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0915\u0947 \u0907\u0938\u0947 \u0924\u0947\u091c\u093c \u092c\u0928\u093e\u0924\u093e \u0939\u0948     B. \u0905\u0927\u093f\u0915 \u0921\u0947\u091f\u093e \u0915\u094b remote servers \u092a\u0930 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0924\u093e \u0939\u0948     C. \u0921\u0947\u091f\u093e \u0915\u094b \u0938\u0940\u0927\u0947 \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u092a\u0930 \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0924\u093e \u0939\u0948  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Networking \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u094b ______ \u0915\u0930\u0928\u0947 \u0914\u0930 \u0921\u0947\u091f\u093e \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     A. compete     B. communicate     C. fight  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Big Data \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0935\u093f\u0936\u093e\u0932 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u091c\u093e\u0928\u0915\u093e\u0930\u0940, \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u094b\u0936\u0932 \u092e\u0940\u0921\u093f\u092f\u093e \u0921\u0947\u091f\u093e \u092f\u093e \u0911\u0928\u0932\u093e\u0907\u0928 \u0936\u0949\u092a\u093f\u0902\u0917 \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0928\u0947 \u0914\u0930 insights \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 cloud computing \u0915\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948?     A. \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u094b \u0905\u092a\u0928\u0940 \u0938\u094d\u0925\u093e\u0928\u0940\u092f \u0939\u093e\u0930\u094d\u0921 \u0921\u094d\u0930\u093e\u0907\u0935 \u092a\u0930 \u0938\u0939\u0947\u091c\u0928\u093e     B. Google Drive \u092a\u0930 \u092b\u093c\u094b\u091f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u093e     C. \u0918\u0930 \u0915\u0947 \u092a\u094d\u0930\u093f\u0902\u091f\u0930 \u0938\u0947 \u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c\u093c \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0928\u093e  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: Automation \u092e\u0936\u0940\u0928\u094b\u0902 \u0914\u0930 \u0938\u0949\u092b\u093c\u094d\u091f\u0935\u0947\u092f\u0930 \u0915\u094b ______ tasks \u0915\u094b \u092c\u093f\u0928\u093e \u092e\u093e\u0928\u0935 \u092e\u0926\u0926 \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964     A. creative     B. repetitive     C. impossible  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Edge computing \u0915\u094d\u0932\u093e\u0909\u0921 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u0915\u0940 \u0924\u0941\u0932\u0928\u093e \u092e\u0947\u0902 \u0927\u0940\u092e\u093e \u0939\u0948 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0939 \u0921\u0947\u091f\u093e \u0915\u094b \u0926\u0942\u0930 \u092a\u094d\u0930\u094b\u0938\u0947\u0938 \u0915\u0930\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> <li> <p>\u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f: \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094c\u0928 \u0938\u0940 \u0915\u0902\u092a\u0928\u0940 Big Data \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e\u0913\u0902 \u0915\u094b content \u0938\u0941\u091d\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091c\u093e\u0928\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948?     A. Netflix     B. McDonald's     C. Facebook  </p> </li> <li> <p>\u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u092d\u0930\u0947\u0902: AI model ______ \u092e\u093e\u0928\u0935-\u091c\u0948\u0938\u0947 text \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0928\u0947 \u092f\u093e \u0928\u093f\u092c\u0902\u0927 \u0932\u093f\u0916\u0928\u0947 \u091c\u0948\u0938\u0947 \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964     A. GPT     B. DALL\u00b7E     C. Google  </p> </li> <li> <p>\u0938\u0939\u0940/\u0917\u0932\u0924: Networking \u0935\u0939 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948 \u091c\u093f\u0938\u0938\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0914\u0930 \u0921\u093f\u0935\u093e\u0907\u0938\u0947\u0938 \u0915\u094b \u091c\u094b\u0921\u093c\u0915\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u093e \u0906\u0926\u093e\u0928-\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964     \u0938\u0939\u0940     \u0917\u0932\u0924  </p> </li> </ol> <p>\u092f\u0947 \u092a\u094d\u0930\u0936\u094d\u0928 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u090f\u0915 \u092e\u091c\u0947\u0926\u093e\u0930 \u0914\u0930 \u0907\u0902\u091f\u0930\u0948\u0915\u094d\u091f\u093f\u0935 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908 \u0938\u0947 \u0938\u094b\u091a\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0930\u0947\u0930\u093f\u0924 \u0915\u0930\u0947\u0902\u0917\u0947! \u092e\u0941\u091d\u0947 \u092c\u0924\u093e\u090f\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u092a \u0915\u093f\u0938\u0940 \u0938\u092e\u093e\u092f\u094b\u091c\u0928 \u092f\u093e \u0915\u093f\u0938\u0940 \u0914\u0930 \u091a\u0940\u091c\u093c \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u093e \u091a\u093e\u0939\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter10/","title":"\u0905\u0927\u094d\u092f\u093e\u092f 10: \u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938","text":"<p>\u0907\u0938 \u0905\u0927\u094d\u092f\u093e\u092f \u092e\u0947\u0902, \u0939\u092e Python \u0915\u0947 \u0938\u093e\u0925 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0941\u091b \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u0914\u0930 \u0935\u094d\u092f\u093e\u0935\u0939\u093e\u0930\u093f\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u092a\u0930 \u0915\u093e\u092e \u0915\u0930\u0947\u0902\u0917\u0947! \u091a\u093e\u0939\u0947 \u0906\u092a\u0915\u094b \u0917\u0923\u093f\u0924, \u0917\u0947\u092e\u094d\u0938, \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923, \u092f\u093e \u0935\u0947\u092c \u0935\u093f\u0915\u093e\u0938 \u092e\u0947\u0902 \u0926\u093f\u0932\u091a\u0938\u094d\u092a\u0940 \u0939\u094b, \u092f\u0939\u093e\u0901 \u0939\u0930 \u0915\u093f\u0938\u0940 \u0915\u0947 \u0932\u093f\u090f \u0915\u0941\u091b \u0939\u0948\u0964 \u092f\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u091b\u094b\u091f\u0947 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u0938\u0947 \u0932\u0947\u0915\u0930 \u091c\u091f\u093f\u0932 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0924\u0915 \u0939\u094b\u0902\u0917\u0947, \u091c\u093f\u0928\u094d\u0939\u0947\u0902 \u0938\u092e\u091d\u0928\u093e \u0906\u0938\u093e\u0928 \u0914\u0930 \u092e\u091c\u0947\u0926\u093e\u0930 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u093f\u091c\u093c\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#1","title":"1. \u0917\u0923\u093f\u0924\u0940\u092f \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f","text":"<p>\u0938\u092c\u0938\u0947 \u092a\u0939\u0932\u0947, \u0939\u092e \u090f\u0915 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u092c\u0928\u093e\u090f\u0902\u0917\u0947 \u091c\u094b \u091c\u094b\u0921\u093c, \u0918\u091f\u093e\u0935, \u0917\u0941\u0923\u093e, \u0914\u0930 \u092d\u093e\u0917 \u091c\u0948\u0938\u0947 \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u0917\u0923\u093f\u0924\u0940\u092f \u0915\u093e\u0930\u094d\u092f \u0915\u0930 \u0938\u0915\u0947\u0964 \u092f\u0939 functions \u0914\u0930 control flow \u0915\u093e \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0936\u093e\u0928\u0926\u093e\u0930 \u0924\u0930\u0940\u0915\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#_1","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u092c\u0947\u0938\u093f\u0915 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930","text":"<pre><code>def add(x, y):\n    return x + y\n\ndef subtract(x, y):\n    return x - y\n\ndef multiply(x, y):\n    return x * y\n\ndef divide(x, y):\n    if y == 0:\n        return \"\u0924\u094d\u0930\u0941\u091f\u093f! \u0936\u0942\u0928\u094d\u092f \u0938\u0947 \u092d\u093e\u0917 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964\"\n    return x / y\n\n# \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u0915\u0947 \u0932\u093f\u090f \u092e\u0947\u0928\u0942\ndef calculator():\n    print(\"Python \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948!\")\n    print(\"\u0911\u092a\u0930\u0947\u0936\u0928 \u091a\u0941\u0928\u0947\u0902:\")\n    print(\"1. \u091c\u094b\u0921\u093c\u0947\u0902\")\n    print(\"2. \u0918\u091f\u093e\u090f\u0902\")\n    print(\"3. \u0917\u0941\u0923\u093e \u0915\u0930\u0947\u0902\")\n    print(\"4. \u092d\u093e\u0917 \u0915\u0930\u0947\u0902\")\n\n    choice = input(\"\u091a\u0949\u0907\u0938 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 (1/2/3/4): \")\n\n    num1 = float(input(\"\u092a\u0939\u0932\u093e \u0928\u0902\u092c\u0930 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n    num2 = float(input(\"\u0926\u0942\u0938\u0930\u093e \u0928\u0902\u092c\u0930 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n\n    if choice == '1':\n        print(f\"\u092a\u0930\u093f\u0923\u093e\u092e: {num1} + {num2} = {add(num1, num2)}\")\n    elif choice == '2':\n        print(f\"\u092a\u0930\u093f\u0923\u093e\u092e: {num1} - {num2} = {subtract(num1, num2)}\")\n    elif choice == '3':\n        print(f\"\u092a\u0930\u093f\u0923\u093e\u092e: {num1} * {num2} = {multiply(num1, num2)}\")\n    elif choice == '4':\n        print(f\"\u092a\u0930\u093f\u0923\u093e\u092e: {num1} / {num2} = {divide(num1, num2)}\")\n    else:\n        print(\"\u0905\u092e\u093e\u0928\u094d\u092f \u0907\u0928\u092a\u0941\u091f\")\n\ncalculator()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_2","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u0906\u092a\u0915\u094b \u091a\u093e\u0930 \u0917\u0923\u093f\u0924\u0940\u092f \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u091a\u0941\u0928\u0928\u0947 \u0914\u0930 \u0926\u094b \u0928\u0902\u092c\u0930 \u0926\u0930\u094d\u091c \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>\u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0911\u092a\u0930\u0947\u0936\u0928 \u0915\u094b \u0909\u0938\u0915\u0940 \u0916\u0941\u0926 \u0915\u0940 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0926\u094d\u0935\u093e\u0930\u093e \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0914\u0930 \u092d\u093e\u0917 \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092e\u0947\u0902 \u0936\u0942\u0928\u094d\u092f \u0938\u0947 \u092d\u093e\u0917 \u0915\u0940 \u0924\u094d\u0930\u0941\u091f\u093f \u0938\u0902\u092d\u093e\u0932\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#2","title":"2. \u0928\u0902\u092c\u0930 \u0917\u0947\u0938\u093f\u0902\u0917 \u0917\u0947\u092e","text":"<p>\u090f\u0915 \u092e\u091c\u093c\u0947\u0926\u093e\u0930 \u0928\u0902\u092c\u0930 \u0917\u0947\u0938\u093f\u0902\u0917 \u0917\u0947\u092e \u092c\u0928\u093e\u090f\u0902, \u091c\u0939\u093e\u0901 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u090f\u0915 \u092f\u093e\u0926\u0943\u091a\u094d\u091b\u093f\u0915 \u0928\u0902\u092c\u0930 \u091a\u0941\u0928\u0924\u093e \u0939\u0948, \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u094b \u0907\u0938\u0915\u093e \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948\u0964 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092f\u0939 \u092c\u0924\u093e\u0924\u093e \u0939\u0948 \u0915\u093f \u0905\u0928\u0941\u092e\u093e\u0928 \u092c\u0939\u0941\u0924 \u090a\u0901\u091a\u093e \u0939\u0948 \u092f\u093e \u092c\u0939\u0941\u0924 \u0928\u0940\u091a\u093e\u0964</p>"},{"location":"hi/chapters/chapter10/#_3","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0928\u0902\u092c\u0930 \u0917\u0947\u0938\u093f\u0902\u0917 \u0917\u0947\u092e","text":"<pre><code>import random\n\ndef guessing_game():\n    secret_number = random.randint(1, 100)\n    attempts = 0\n    print(\"\u092e\u0948\u0902 1 \u0938\u0947 100 \u0915\u0947 \u092c\u0940\u091a \u090f\u0915 \u0928\u0902\u092c\u0930 \u0938\u094b\u091a \u0930\u0939\u093e \u0939\u0942\u0901\u0964\")\n\n    while True:\n        guess = int(input(\"\u0905\u092a\u0928\u093e \u0905\u0928\u0941\u092e\u093e\u0928 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n        attempts += 1\n\n        if guess &lt; secret_number:\n            print(\"\u092c\u0939\u0941\u0924 \u0915\u092e!\")\n        elif guess &gt; secret_number:\n            print(\"\u092c\u0939\u0941\u0924 \u091c\u093c\u094d\u092f\u093e\u0926\u093e!\")\n        else:\n            print(f\"\u092c\u0927\u093e\u0908 \u0939\u094b! \u0906\u092a\u0928\u0947 {attempts} \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u092e\u0947\u0902 \u0938\u0939\u0940 \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u092f\u093e!\")\n            break\n\nguessing_game()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_4","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 1 \u0938\u0947 100 \u0915\u0947 \u092c\u0940\u091a \u090f\u0915 \u092f\u093e\u0926\u0943\u091a\u094d\u091b\u093f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e \u091a\u0941\u0928\u0924\u093e \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0938\u0939\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0915\u093e \u0905\u0928\u0941\u092e\u093e\u0928 \u0932\u0917\u093e\u0928\u0947 \u0924\u0915 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u093e \u0939\u0948, \u0914\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0938\u0902\u0915\u0947\u0924 \u0926\u0947\u0924\u093e \u0939\u0948 \u0915\u093f \u0905\u0928\u0941\u092e\u093e\u0928 \u090a\u0901\u091a\u093e \u0939\u0948 \u092f\u093e \u0928\u0940\u091a\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#3","title":"3. \u0930\u0949\u0915, \u092a\u0947\u092a\u0930, \u0938\u093f\u091c\u093c\u0930\u094d\u0938 \u0917\u0947\u092e","text":"<p>\u091a\u0932\u094b \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0917\u0947\u092e \u0930\u0949\u0915, \u092a\u0947\u092a\u0930, \u0938\u093f\u091c\u093c\u0930\u094d\u0938 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u0939\u093e\u0901 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u0947 \u0916\u093f\u0932\u093e\u092b \u092a\u094d\u0930\u0924\u093f\u0938\u094d\u092a\u0930\u094d\u0927\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#_5","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0930\u0949\u0915, \u092a\u0947\u092a\u0930, \u0938\u093f\u091c\u093c\u0930\u094d\u0938","text":"<pre><code>import random\n\ndef rock_paper_scissors():\n    choices = [\"rock\", \"paper\", \"scissors\"]\n    computer_choice = random.choice(choices)\n    player_choice = input(\"\u0930\u0949\u0915, \u092a\u0947\u092a\u0930, \u092f\u093e \u0938\u093f\u091c\u093c\u0930\u094d\u0938 \u091a\u0941\u0928\u0947\u0902: \").lower()\n\n    if player_choice not in choices:\n        print(\"\u0905\u092e\u093e\u0928\u094d\u092f \u091a\u0949\u0907\u0938!\")\n    else:\n        print(f\"\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0928\u0947 {computer_choice} \u091a\u0941\u0928\u093e\")\n        if player_choice == computer_choice:\n            print(\"\u092f\u0939 \u090f\u0915 \u091f\u093e\u0908 \u0939\u0948!\")\n        elif (player_choice == \"rock\" and computer_choice == \"scissors\") or \\\n             (player_choice == \"paper\" and computer_choice == \"rock\") or \\\n             (player_choice == \"scissors\" and computer_choice == \"paper\"):\n            print(\"\u0906\u092a \u091c\u0940\u0924\u0947!\")\n        else:\n            print(\"\u0906\u092a \u0939\u093e\u0930\u0947!\")\n\nrock_paper_scissors()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_6","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0930\u0948\u0902\u0921\u092e\u0932\u0940 \u0930\u0949\u0915, \u092a\u0947\u092a\u0930, \u092f\u093e \u0938\u093f\u091c\u093c\u0930\u094d\u0938 \u091a\u0941\u0928\u0924\u093e \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0905\u092a\u0928\u0940 \u091a\u093e\u0932 \u091a\u0941\u0928\u0924\u093e \u0939\u0948, \u0914\u0930 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u094c\u0928 \u091c\u0940\u0924\u093e\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#4","title":"4. \u092a\u093e\u092f\u0925\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u094d\u0928\u0947\u0915 \u0917\u0947\u092e","text":"<p>\u0939\u092e Pygame \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0938\u094d\u0928\u0947\u0915 \u0917\u0947\u092e \u092c\u0928\u093e\u090f\u0902\u0917\u0947\u0964 \u0907\u0938 \u0917\u0947\u092e \u092e\u0947\u0902, \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0938\u093e\u0902\u092a \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0916\u093e\u0928\u093e \u0916\u093e\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u092c\u0915\u093f \u0926\u0940\u0935\u093e\u0930\u094b\u0902 \u0914\u0930 \u0905\u092a\u0928\u0947 \u0936\u0930\u0940\u0930 \u0938\u0947 \u091f\u0915\u0930\u093e\u0928\u0947 \u0938\u0947 \u092c\u091a\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#_7","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u094d\u0928\u0947\u0915 \u0917\u0947\u092e","text":"<pre><code>import pygame\nimport time\nimport random\n\npygame.init()\n\n# \u0938\u094d\u0915\u094d\u0930\u0940\u0928 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938\nscreen_width = 600\nscreen_height = 400\nscreen = pygame.display.set_mode((screen_width, screen_height))\n\n# \u0930\u0902\u0917\nblack = (0, 0, 0)\nwhite = (255, 255, 255)\nred = (255, 0, 0)\ngreen = (0, 255, 0)\n\n# \u0938\u094d\u0928\u0947\u0915 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938\nsnake_block = 10\nsnake_speed = 15\n\nclock = pygame.time.Clock()\n\ndef our_snake(snake_block, snake_list):\n    for x in snake_list:\n        pygame.draw.rect(screen, green, [x[0], x[1], snake_block, snake_block])\n\ndef game_loop():\n    game_over = False\n    game_close = False\n\n    x1 = screen_width / 2\n    y1 = screen_height / 2\n\n    x1_change = 0\n    y1_change = 0\n\n    snake_list = []\n    length_of_snake = 1\n\n    foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0\n    foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0\n\n    while not game_over:\n\n        while game_close:\n            screen.fill(black)\n            font_style = pygame.font.SysFont(None, 50)\n            message = font_style.render(\"\u0906\u092a \u0939\u093e\u0930 \u0917\u090f! Q-\u091b\u094b\u0921\u093c\u0947\u0902 \u092f\u093e C-\u092b\u093f\u0930 \u0938\u0947 \u0916\u0947\u0932\u0947\u0902 \u0926\u092c\u093e\u090f\u0901\", True, red)\n            screen.blit(message, [screen_width / 6, screen_height / 3])\n            pygame.display.update()\n\n            for event in pygame.event.get():\n                if event.type == pygame.KEYDOWN:\n                    if event.key == pygame.K_q:\n                        game_over = True\n                        game_close = False\n                    if event.key == pygame.K_c:\n                        game_loop()\n\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                game_over = True\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_LEFT:\n                    x1_change = -snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_RIGHT:\n                    x1_change = snake_block\n                    y1_change = 0\n                elif event.key == pygame.K_UP:\n                    y1_change = -snake_block\n                    x1_change = 0\n                elif event.key == pygame.K_DOWN:\n                    y1_change = snake_block\n                    x1_change = 0\n\n        if x1 &gt;= screen_width or x1 &lt; 0 or y1 &gt;= screen_height or y1 &lt; 0:\n            game_close = True\n        x1 += x1_change\n        y1 += y1_change\n        screen.fill(black)\n\n        pygame.draw.rect(screen, white, [foodx, foody, snake_block, snake_block])\n\n        snake_head = []\n        snake_head.append(x1)\n        snake_head.append(y1)\n        snake_list.append(snake_head)\n        if len(snake_list) &gt; length_of_snake:\n            del snake_list[0]\n\n        for x in snake_list[:-1]:\n            if x == snake_head:\n                game_close = True\n\n        our_snake(snake_block, snake_list)\n\n        if x1 == foodx and y1 == foody:\n            foodx = round(random.randrange(0, screen_width - snake_block) / 10.0) * 10.0\n\n\n            foody = round(random.randrange(0, screen_height - snake_block) / 10.0) * 10.0\n            length_of_snake += 1\n\n        pygame.display.update()\n\n        clock.tick(snake_speed)\n\n    pygame.quit()\n    quit()\n\ngame_loop()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_8","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>Pygame \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0916\u0947\u0932 \u0915\u0940 \u0935\u093f\u0902\u0921\u094b \u092c\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948, \u0914\u0930 \u0938\u094d\u0928\u0947\u0915 \u0915\u094b \u0921\u094d\u0930\u0949 \u0914\u0930 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0924\u0940\u0930 \u0915\u0941\u0902\u091c\u093f\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u093e\u0902\u092a \u0915\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0916\u093e\u0928\u093e \u0916\u093e\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u093e \u0939\u0948 \u092c\u093f\u0928\u093e \u0926\u0940\u0935\u093e\u0930\u094b\u0902 \u0938\u0947 \u091f\u0915\u0930\u093e\u090f \u092f\u093e \u0905\u092a\u0928\u0947 \u0936\u0930\u0940\u0930 \u0938\u0947 \u091f\u0915\u0930\u093e\u090f\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#5-pandas-matplotlib","title":"5. \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f Pandas \u0914\u0930 Matplotlib \u0915\u0947 \u0938\u093e\u0925","text":"<p>\u0939\u092e \u0915\u0941\u091b \u091b\u093e\u0924\u094d\u0930 \u0905\u0902\u0915\u094b\u0902 \u0915\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0930\u0947\u0902\u0917\u0947 \u0914\u0930 Pandas \u0914\u0930 Matplotlib \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0921\u0947\u091f\u093e \u0915\u094b visualize \u0915\u0930\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter10/#_9","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923","text":"<pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\n\n# \u091b\u093e\u0924\u094d\u0930 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u090f\u0915 DataFrame \u092c\u0928\u093e\u090f\u0902\ndata = {\n    \"Student\": [\"Alice\", \"Bob\", \"Charlie\", \"David\"],\n    \"Math\": [85, 92, 78, 90],\n    \"Science\": [88, 95, 80, 85],\n    \"English\": [75, 89, 95, 70]\n}\ndf = pd.DataFrame(data)\n\n# \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0947\u0902\ndf[\"Average\"] = df[[\"Math\", \"Science\", \"English\"]].mean(axis=1)\n\n# DataFrame \u092a\u094d\u0930\u093f\u0902\u091f \u0915\u0930\u0947\u0902\nprint(df)\n\n# \u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u092a\u094d\u0932\u0949\u091f \u0915\u0930\u0947\u0902\nplt.bar(df[\"Student\"], df[\"Average\"])\nplt.title(\"\u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930\")\nplt.xlabel(\"\u091b\u093e\u0924\u094d\u0930\")\nplt.ylabel(\"\u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930\")\nplt.show()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_10","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>Pandas \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0921\u0947\u091f\u093e \u0915\u094b DataFrame \u092e\u0947\u0902 \u0938\u094d\u091f\u094b\u0930 \u0915\u0930\u0928\u0947 \u0914\u0930 \u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930 \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>Matplotlib \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0914\u0938\u0924 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u090f\u0915 \u092c\u093e\u0930 \u091a\u093e\u0930\u094d\u091f \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#6-tic-tac-toe","title":"6. Tic-Tac-Toe \u0917\u0947\u092e","text":"<p>\u090f\u0915 Tic-Tac-Toe \u0917\u0947\u092e \u092c\u0928\u093e\u090f\u0902 \u091c\u0939\u093e\u0901 \u0926\u094b \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u092c\u094b\u0930\u094d\u0921 \u092a\u0930 \u0928\u093f\u0936\u093e\u0928 \u0932\u0917\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u092c \u0924\u0915 \u0915\u093f \u0915\u094b\u0908 \u091c\u0940\u0924 \u0928 \u091c\u093e\u090f \u092f\u093e \u0916\u0947\u0932 \u0921\u094d\u0930\u0949 \u0928 \u0939\u094b \u091c\u093e\u090f\u0964</p>"},{"location":"hi/chapters/chapter10/#tic-tac-toe","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Tic-Tac-Toe \u0917\u0947\u092e","text":"<pre><code>def print_board(board):\n    for row in board:\n        print(\"|\".join(row))\n        print(\"-\" * 5)\n\ndef check_winner(board):\n    # \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u094b\u0902, \u0938\u094d\u0924\u0902\u092d\u094b\u0902, \u0914\u0930 \u0935\u093f\u0915\u0930\u094d\u0923\u094b\u0902 \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0947\u0902\n    for row in board:\n        if row[0] == row[1] == row[2] != \" \":\n            return True\n    for col in range(3):\n        if board[0][col] == board[1][col] == board[2][col] != \" \":\n            return True\n    if board[0][0] == board[1][1] == board[2][2] != \" \" or board[0][2] == board[1][1] == board[2][0] != \" \":\n        return True\n    return False\n\ndef tic_tac_toe():\n    board = [[\" \" for _ in range(3)] for _ in range(3)]\n    current_player = \"X\"\n\n    for _ in range(9):\n        print_board(board)\n        row = int(input(f\"Player {current_player}, row (0-2) \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n        col = int(input(f\"Player {current_player}, column (0-2) \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\n\n        if board[row][col] == \" \":\n            board[row][col] = current_player\n            if check_winner(board):\n                print_board(board)\n                print(f\"Player {current_player} \u091c\u0940\u0924 \u0917\u092f\u093e!\")\n                return\n            current_player = \"O\" if current_player == \"X\" else \"X\"\n        else:\n            print(\"\u0905\u092e\u093e\u0928\u094d\u092f \u091a\u093e\u0932! \u092b\u093f\u0930 \u0938\u0947 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902\u0964\")\n\n    print(\"\u092f\u0939 \u090f\u0915 \u091f\u093e\u0908 \u0939\u0948!\")\n\ntic_tac_toe()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_11","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u0917\u0947\u092e \u0926\u094b \u0916\u093f\u0932\u093e\u0921\u093c\u093f\u092f\u094b\u0902 \u0915\u094b \u092c\u093e\u0930\u0940-\u092c\u093e\u0930\u0940 \u0938\u0947 3x3 \u0917\u094d\u0930\u093f\u0921 \u092a\u0930 \u090f\u0915 \u0938\u094d\u0925\u093f\u0924\u093f \u091a\u0941\u0928\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li><code>check_winner</code> \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u092f\u0939 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0915\u093f \u0915\u094d\u092f\u093e \u0916\u093f\u0932\u093e\u0921\u093c\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u0915\u094b\u0908 \u092a\u0902\u0915\u094d\u0924\u093f, \u0938\u094d\u0924\u0902\u092d, \u092f\u093e \u0935\u093f\u0915\u0930\u094d\u0923 \u092a\u0942\u0930\u093e \u0915\u0930\u0915\u0947 \u091c\u0940\u0924 \u0917\u092f\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#7","title":"7. \u092e\u0941\u0926\u094d\u0930\u093e \u0915\u0928\u0935\u0930\u094d\u091f\u0930","text":"<p>\u090f\u0915 \u092e\u0941\u0926\u094d\u0930\u093e \u0915\u0928\u0935\u0930\u094d\u091f\u0930 \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092e\u0941\u0926\u094d\u0930\u093e\u0913\u0902 \u0915\u0947 \u092c\u0940\u091a \u0915\u0928\u0935\u0930\u094d\u091f \u0915\u0930\u0947\u0964</p>"},{"location":"hi/chapters/chapter10/#_12","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u092e\u0941\u0926\u094d\u0930\u093e \u0915\u0928\u0935\u0930\u094d\u091f\u0930","text":"<pre><code>def currency_converter(amount, from_currency, to_currency):\n    conversion_rates = {\n        \"USD\": 1.0,\n        \"EUR\": 0.85,\n        \"JPY\": 110.5,\n        \"GBP\": 0.75\n    }\n\n    if from_currency not in conversion_rates or to_currency not in conversion_rates:\n        return \"\u0905\u092e\u093e\u0928\u094d\u092f \u092e\u0941\u0926\u094d\u0930\u093e \u0915\u094b\u0921!\"\n\n    converted_amount = amount * conversion_rates[to_currency] / conversion_rates[from_currency]\n    return round(converted_amount, 2)\n\namount = float(input(\"\u0930\u093e\u0936\u093f \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \"))\nfrom_currency = input(\"\u0915\u094c\u0928 \u0938\u0940 \u092e\u0941\u0926\u094d\u0930\u093e \u0938\u0947 (USD, EUR, JPY, GBP): \").upper()\nto_currency = input(\"\u0915\u094c\u0928 \u0938\u0940 \u092e\u0941\u0926\u094d\u0930\u093e \u092e\u0947\u0902 (USD, EUR, JPY, GBP): \").upper()\n\nresult = currency_converter(amount, from_currency, to_currency)\nprint(f\"{amount} {from_currency} \u092c\u0930\u093e\u092c\u0930 \u0939\u0948 {result} {to_currency}\")\n</code></pre>"},{"location":"hi/chapters/chapter10/#_13","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u090f\u0915 \u0936\u092c\u094d\u0926\u0915\u094b\u0936 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u0928\u0935\u0930\u094d\u091c\u093c\u0928 \u0926\u0930\u094b\u0902 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0915\u0928\u0935\u0930\u094d\u091f \u0915\u0940 \u0917\u0908 \u0930\u093e\u0936\u093f \u0915\u0940 \u0917\u0923\u0928\u093e \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#8-flask","title":"8. \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (Flask \u0935\u0947\u092c \u0910\u092a)","text":"<p>\u091a\u0932\u094b \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u0906\u092a\u0915\u094b \u091b\u093e\u0924\u094d\u0930\u094b\u0902, \u0915\u0915\u094d\u0937\u093e\u0913\u0902 \u0914\u0930 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f Flask \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948, \u091c\u094b \u090f\u0915 \u0939\u0932\u094d\u0915\u093e \u0935\u0947\u092c framework \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#flask-","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u0938\u093e\u0927\u093e\u0930\u0923 Flask-\u0906\u0927\u093e\u0930\u093f\u0924 \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940","text":"<pre><code>from flask import Flask, render_template, request\n\napp = Flask(__name__)\n\nstudents = []\n\n@app.route('/')\ndef home():\n    return render_template('index.html', students=students)\n\n@app.route('/add_student', methods=['POST'])\ndef add_student():\n    name = request.form['name']\n    grade = request.form['grade']\n    students.append({\"name\": name, \"grade\": grade})\n    return home()\n\n@app.route('/delete_student/&lt;name&gt;')\ndef delete_student(name):\n    global students\n    students = [s for s in students if s[\"name\"] != name]\n    return home()\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"hi/chapters/chapter10/#_14","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 Flask \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0906\u092a\u0915\u094b \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0914\u0930 \u0909\u0928\u0915\u0947 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947, \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0928\u0947 \u0914\u0930 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u0938\u0942\u091a\u0940 \u0938\u0947 \u0939\u091f\u093e\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li>\u0907\u0938 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u0947 \u0932\u093f\u090f HTML templates \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 front-end (UI) \u092c\u0928\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#9-api","title":"9. \u092e\u094c\u0938\u092e \u0910\u092a (API \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947)","text":"<p>\u090f\u0915 \u092e\u094c\u0938\u092e \u0910\u092a \u092c\u0928\u093e\u090f\u0902 \u091c\u094b OpenWeatherMap API \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093f\u0938\u0940 \u0936\u0939\u0930 \u0915\u0947 \u0932\u093f\u090f \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092e\u094c\u0938\u092e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#_15","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: \u092e\u094c\u0938\u092e \u0910\u092a","text":"<pre><code>import requests\n\ndef get_weather(city):\n    api_key = \"your_openweathermap_api_key\"\n    base_url = f\"http://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={api_key}&amp;units=metric\"\n    response = requests.get(base_url)\n    data = response.json()\n\n    if data[\"cod\"] != \"404\":\n        main = data[\"main\"]\n        weather_desc = data[\"weather\"][0][\"description\"]\n        temp = main[\"temp\"]\n        humidity = main[\"humidity\"]\n        print(f\"\u0936\u0939\u0930: {city}\\n\u0924\u093e\u092a\u092e\u093e\u0928: {temp}\u00b0C\\n\u092e\u094c\u0938\u092e: {weather_desc}\\n\u0906\u0930\u094d\u0926\u094d\u0930\u0924\u093e: {humidity}%\")\n    else:\n        print(\"\u0936\u0939\u0930 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e!\")\n\ncity = input(\"\u0936\u0939\u0930 \u0915\u093e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902: \")\nget_weather(city)\n</code></pre>"},{"location":"hi/chapters/chapter10/#_16","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f OpenWeatherMap API \u0938\u0947 \u092e\u094c\u0938\u092e \u0921\u0947\u091f\u093e \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 \u0926\u093f\u090f \u0917\u090f \u0936\u0939\u0930 \u0915\u0947 \u0932\u093f\u090f \u0924\u093e\u092a\u092e\u093e\u0928, \u092e\u094c\u0938\u092e \u0935\u093f\u0935\u0930\u0923 \u0914\u0930 \u0906\u0930\u094d\u0926\u094d\u0930\u0924\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#10-quiz","title":"10. Quiz \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928","text":"<p>\u090f\u0915 quiz \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f \u092a\u094d\u0930\u0936\u094d\u0928 \u092a\u0942\u091b\u0924\u093e \u0939\u0948 \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0947 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u091f\u094d\u0930\u0948\u0915 \u0930\u0916\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#quiz","title":"\u0915\u094b\u0921 \u0909\u0926\u093e\u0939\u0930\u0923: Quiz \u0910\u092a","text":"<pre><code>def run_quiz():\n    questions = {\n        \"\u092b\u094d\u0930\u093e\u0902\u0938 \u0915\u0940 \u0930\u093e\u091c\u0927\u093e\u0928\u0940 \u0915\u094d\u092f\u093e \u0939\u0948?\": {\"options\": [\"A) \u092a\u0947\u0930\u093f\u0938\", \"B) \u0930\u094b\u092e\", \"C) \u092e\u0948\u0921\u094d\u0930\u093f\u0921\"], \"answer\": \"A\"},\n        \"2 + 2 \u0915\u093f\u0924\u0928\u093e \u0939\u094b\u0924\u093e \u0939\u0948?\": {\"options\": [\"A) 3\", \"B) 4\", \"C) 5\"], \"answer\": \"B\"},\n        \"'1984' \u092a\u0941\u0938\u094d\u0924\u0915 \u0915\u093f\u0938\u0928\u0947 \u0932\u093f\u0916\u0940?\": {\"options\": [\"A) \u091c\u0949\u0930\u094d\u091c \u0911\u0930\u0935\u0947\u0932\", \"B) \u091c\u0947.\u0915\u0947. \u0930\u094b\u0932\u093f\u0902\u0917\", \"C) \u091a\u093e\u0930\u094d\u0932\u094d\u0938 \u0921\u093f\u0915\u0947\u0928\u094d\u0938\"], \"answer\": \"A\"}\n    }\n\n    score = 0\n    for question\n\n, data in questions.items():\n        print(question)\n        for option in data[\"options\"]:\n            print(option)\n        answer = input(\"\u0906\u092a\u0915\u093e \u0909\u0924\u094d\u0924\u0930: \").upper()\n\n        if answer == data[\"answer\"]:\n            print(\"\u0938\u0939\u0940!\\n\")\n            score += 1\n        else:\n            print(f\"\u0917\u0932\u0924! \u0938\u0939\u0940 \u0909\u0924\u094d\u0924\u0930 \u0925\u093e {data['answer']}\\n\")\n\n    print(f\"\u0906\u092a\u0928\u0947 {len(questions)} \u092e\u0947\u0902 \u0938\u0947 {score} \u0938\u0939\u0940 \u0909\u0924\u094d\u0924\u0930 \u0926\u093f\u090f!\")\n\nrun_quiz()\n</code></pre>"},{"location":"hi/chapters/chapter10/#_17","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 quiz \u092c\u0928\u093e\u0924\u093e \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f \u092a\u094d\u0930\u0936\u094d\u0928 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0947 \u0909\u0924\u094d\u0924\u0930 \u0938\u0939\u0940 \u0939\u0948\u0902 \u092f\u093e \u0928\u0939\u0940\u0902, \u092f\u0939 \u091c\u093e\u0901\u091a\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#11-flask-","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f 11: \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 (Flask-\u0906\u0927\u093e\u0930\u093f\u0924 \u0935\u0947\u092c \u0910\u092a)","text":"<p>\u092f\u0939 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u090f\u0915 \u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940 \u0915\u094b \u0938\u093f\u092e\u094d\u092f\u0941\u0932\u0947\u091f \u0915\u0930\u0947\u0917\u093e \u091c\u0939\u093e\u0902 \u0906\u092a \u091b\u093e\u0924\u094d\u0930\u094b\u0902, \u0909\u0928\u0915\u0940 \u0915\u0915\u094d\u0937\u093e\u0913\u0902 \u0914\u0930 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0939\u092e \u0907\u0938\u0947 \u0915\u0908 Python \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u092e\u0947\u0902 \u0935\u093f\u092d\u093e\u091c\u093f\u0924 \u0915\u0930\u0947\u0902\u0917\u0947 \u0914\u0930 \u0935\u0947\u092c \u092a\u0947\u091c\u094b\u0902 \u0915\u094b \u0930\u0947\u0902\u0921\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091f\u0947\u092e\u094d\u092a\u094d\u0932\u0947\u091f \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0947\u0902\u0917\u0947\u0964</p>"},{"location":"hi/chapters/chapter10/#_18","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0938\u0902\u0930\u091a\u0928\u093e:","text":"<pre><code>school_management/\n\u2502\n\u251c\u2500\u2500 app.py  (\u092e\u0941\u0916\u094d\u092f Flask \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928)\n\u251c\u2500\u2500 models.py  (\u091b\u093e\u0924\u094d\u0930, \u0915\u0915\u094d\u0937\u093e\u090f\u0902 \u0914\u0930 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e)\n\u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 index.html  (\u0939\u094b\u092e \u092a\u0947\u091c \u091f\u0947\u092e\u094d\u092a\u0932\u0947\u091f)\n\u2502   \u251c\u2500\u2500 add_student.html  (\u0928\u090f \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u0949\u0930\u094d\u092e)\n\u2502   \u2514\u2500\u2500 student_detail.html  (\u091b\u093e\u0924\u094d\u0930 \u0915\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0947 \u0938\u093e\u0925 \u0917\u094d\u0930\u0947\u0921\u094d\u0938)\n\u2514\u2500\u2500 static/\n    \u2514\u2500\u2500 style.css  (\u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915: CSS \u0938\u094d\u091f\u093e\u0907\u0932\u093f\u0902\u0917 \u0915\u0947 \u0932\u093f\u090f)\n</code></pre>"},{"location":"hi/chapters/chapter10/#1-modelspy","title":"\u092b\u093c\u093e\u0907\u0932 1: <code>models.py</code> (\u091b\u093e\u0924\u094d\u0930 \u0914\u0930 \u0915\u0915\u094d\u0937\u093e \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e)","text":"<pre><code># models.py\nstudents = []\n\nclass Student:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n        self.grades = {}\n\n    def add_grade(self, subject, grade):\n        self.grades[subject] = grade\n\n    def get_average_grade(self):\n        if self.grades:\n            return sum(self.grades.values()) / len(self.grades)\n        return 0\n</code></pre>"},{"location":"hi/chapters/chapter10/#_19","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0907\u0938 \u092b\u093c\u093e\u0907\u0932 \u092e\u0947\u0902 <code>Student</code> \u0915\u094d\u0932\u093e\u0938 \u0939\u0948, \u091c\u094b \u091b\u093e\u0924\u094d\u0930 \u0921\u0947\u091f\u093e \u091c\u0948\u0938\u0947 \u0928\u093e\u092e, \u0906\u092f\u0941, \u0914\u0930 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li>\u0907\u0938\u092e\u0947\u0902 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u091c\u094b\u0921\u093c\u0928\u0947 \u0914\u0930 \u091b\u093e\u0924\u094d\u0930 \u0915\u093e \u0914\u0938\u0924 \u0917\u094d\u0930\u0947\u0921 \u0917\u0923\u0928\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u0902\u0915\u094d\u0936\u0928 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#2-apppy-flask","title":"\u092b\u093c\u093e\u0907\u0932 2: <code>app.py</code> (\u092e\u0941\u0916\u094d\u092f Flask \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928)","text":"<pre><code># app.py\nfrom flask import Flask, render_template, request, redirect, url_for\nfrom models import students, Student\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return render_template('index.html', students=students)\n\n@app.route('/add_student', methods=['GET', 'POST'])\ndef add_student():\n    if request.method == 'POST':\n        name = request.form['name']\n        age = request.form['age']\n        new_student = Student(name, age)\n        students.append(new_student)\n        return redirect(url_for('home'))\n    return render_template('add_student.html')\n\n@app.route('/student/&lt;name&gt;')\ndef student_detail(name):\n    for student in students:\n        if student.name == name:\n            return render_template('student_detail.html', student=student)\n    return \"\u091b\u093e\u0924\u094d\u0930 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e\", 404\n\n@app.route('/student/&lt;name&gt;/add_grade', methods=['POST'])\ndef add_grade(name):\n    subject = request.form['subject']\n    grade = int(request.form['grade'])\n    for student in students:\n        if student.name == name:\n            student.add_grade(subject, grade)\n            return redirect(url_for('student_detail', name=name))\n    return \"\u091b\u093e\u0924\u094d\u0930 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e\", 404\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"hi/chapters/chapter10/#_20","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092e\u0941\u0916\u094d\u092f Flask \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0939\u0948 \u091c\u094b \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u0926\u093f\u0916\u093e\u0928\u0947, \u091c\u094b\u0921\u093c\u0928\u0947 \u0914\u0930 \u0909\u0928\u0915\u0947 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u092c\u0902\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0930\u0942\u091f\u093f\u0902\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964</li> <li><code>add_student</code> \u0930\u0942\u091f \u090f\u0915 \u092b\u0949\u0930\u094d\u092e \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0928\u090f \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> <li><code>student_detail</code> \u0930\u0942\u091f \u090f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u091b\u093e\u0924\u094d\u0930 \u0915\u0940 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948\u0964</li> <li><code>add_grade</code> \u0930\u0942\u091f POST \u0905\u0928\u0941\u0930\u094b\u0927 \u0939\u0948 \u091c\u094b \u091b\u093e\u0924\u094d\u0930 \u092e\u0947\u0902 \u0928\u090f \u0917\u094d\u0930\u0947\u0921 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#3-indexhtml","title":"\u092b\u093c\u093e\u0907\u0932 3: <code>index.html</code> (\u0939\u094b\u092e \u092a\u0947\u091c \u091f\u0947\u092e\u094d\u092a\u0932\u0947\u091f)","text":"<pre><code>&lt;!-- templates/index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u0938\u094d\u0915\u0942\u0932 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u092a\u094d\u0930\u0923\u093e\u0932\u0940&lt;/h1&gt;\n    &lt;h2&gt;\u091b\u093e\u0924\u094d\u0930 \u0938\u0942\u091a\u0940&lt;/h2&gt;\n    &lt;ul&gt;\n        {% for student in students %}\n            &lt;li&gt;&lt;a href=\"{{ url_for('student_detail', name=student.name) }}\"&gt;{{ student.name }}&lt;/a&gt; (\u0906\u092f\u0941: {{ student.age }})&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n    &lt;a href=\"{{ url_for('add_student') }}\"&gt;\u0928\u092f\u093e \u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c\u0947\u0902&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_21","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u0939\u094b\u092e \u092a\u0947\u091c \u0939\u0948 \u091c\u094b \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u093e \u0928\u093e\u092e \u0932\u093f\u0902\u0915 \u0939\u0948 \u091c\u094b \u0909\u0928\u0915\u0947 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u0926\u0943\u0936\u094d\u092f \u0915\u0940 \u0913\u0930 \u0932\u0947 \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u090f\u0915 \u0932\u093f\u0902\u0915 \u092d\u0940 \u0939\u0948 \u091c\u094b \u0928\u090f \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#4-add_studenthtml","title":"\u092b\u093c\u093e\u0907\u0932 4: <code>add_student.html</code> (\u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u0949\u0930\u094d\u092e)","text":"<pre><code>&lt;!-- templates/add_student.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0928\u092f\u093e \u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c\u0947\u0902&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u0928\u092f\u093e \u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c\u0947\u0902&lt;/h1&gt;\n    &lt;form method=\"POST\"&gt;\n        &lt;label for=\"name\"&gt;\u0928\u093e\u092e:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;label for=\"age\"&gt;\u0906\u092f\u0941:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"age\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c\u0947\u0902\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_22","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u0947\u091c \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u092b\u0949\u0930\u094d\u092e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u093e\u092e \u0914\u0930 \u0906\u092f\u0941 \u0926\u0930\u094d\u091c \u0915\u0930\u0915\u0947 \u0928\u092f\u093e \u091b\u093e\u0924\u094d\u0930 \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#5-student_detailhtml","title":"\u092b\u093c\u093e\u0907\u0932 5: <code>student_detail.html</code> (\u091b\u093e\u0924\u094d\u0930 \u0915\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0947 \u0938\u093e\u0925 \u0917\u094d\u0930\u0947\u0921\u094d\u0938)","text":"<pre><code>&lt;!-- templates/student_detail.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u091b\u093e\u0924\u094d\u0930 \u091c\u093e\u0928\u0915\u093e\u0930\u0940&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;{{ student.name }} \u0915\u0940 \u091c\u093e\u0928\u0915\u093e\u0930\u0940&lt;/h1&gt;\n    &lt;p&gt;\u0906\u092f\u0941: {{ student.age }}&lt;/p&gt;\n    &lt;h3&gt;\u0917\u094d\u0930\u0947\u0921\u094d\u0938:&lt;/h3&gt;\n    &lt;ul&gt;\n        {% for subject, grade in student.grades.items() %}\n            &lt;li&gt;{{ subject }}: {{ grade }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n    &lt;p&gt;\u0914\u0938\u0924 \u0917\u094d\u0930\u0947\u0921: {{ student.get_average_grade() }}&lt;/p&gt;\n\n    &lt;h3&gt;\u0917\u094d\u0930\u0947\u0921 \u091c\u094b\u0921\u093c\u0947\u0902&lt;/h3&gt;\n    &lt;form method=\"POST\" action=\"{{ url_for('add_grade', name=student.name) }}\"&gt;\n        &lt;label for=\"subject\"&gt;\u0935\u093f\u0937\u092f:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"subject\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;label for=\"grade\"&gt;\u0917\u094d\u0930\u0947\u0921:&lt;/label&gt;\n        &lt;input type=\"number\" name=\"grade\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u0917\u094d\u0930\u0947\u0921 \u091c\u094b\u0921\u093c\u0947\u0902\"&gt;\n    &lt;/form&gt;\n\n    &lt;a href=\"{{ url_for('home') }}\"&gt;\u0939\u094b\u092e \u092a\u0930 \u0935\u093e\u092a\u0938 \u091c\u093e\u090f\u0902&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_23","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u0947\u091c \u090f\u0915 \u091b\u093e\u0924\u094d\u0930 \u0915\u0940 \u0935\u093f\u0938\u094d\u0924\u0943\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u0909\u0928\u0915\u0947 \u0935\u093f\u0937\u092f\u094b\u0902 \u0914\u0930 \u0917\u094d\u0930\u0947\u0921\u094d\u0938 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</li> <li>\u092f\u0939\u093e\u0902 \u090f\u0915 \u092b\u0949\u0930\u094d\u092e \u092d\u0940 \u0939\u0948 \u091c\u094b \u0935\u093f\u0936\u0947\u0937 \u091b\u093e\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u0928\u090f \u0917\u094d\u0930\u0947\u0921 \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#6-stylecss-css","title":"\u092b\u093c\u093e\u0907\u0932 6: <code>style.css</code> (\u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915 CSS \u0938\u094d\u091f\u093e\u0907\u0932\u093f\u0902\u0917)","text":"<pre><code>/* static/style.css */\nbody {\n    font-family: Arial, sans-serif;\n}\n\nh1 {\n    color: #333;\n}\n\nul {\n    list-style-type: none;\n}\n\na {\n    text-decoration: none;\n    color: blue;\n}\n</code></pre>"},{"location":"hi/chapters/chapter10/#_24","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0906\u092a \u0907\u0938 \u0935\u0947\u092c \u0910\u092a \u0915\u094b \u0938\u0941\u0902\u0926\u0930 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u0948\u0915\u0932\u094d\u092a\u093f\u0915 CSS \u091c\u094b\u0921\u093c \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#_25","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0915\u093e \u0924\u0930\u0940\u0915\u093e:","text":"<ol> <li>Flask \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0947\u0902: <code>pip install flask</code> \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0902\u0964</li> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0938\u0902\u0930\u091a\u0928\u093e \u0914\u0930 \u092b\u093e\u0907\u0932\u0947\u0902 \u092c\u0928\u093e\u090f\u0902\u0964</li> <li>\u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0915\u094b \u091a\u0932\u093e\u090f\u0902: <code>python app.py</code> \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0902\u0964</li> <li>\u0905\u092a\u0928\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 <code>http://127.0.0.1:5000/</code> \u0916\u094b\u0932\u0947\u0902\u0964</li> </ol>"},{"location":"hi/chapters/chapter10/#12","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f 12: \u090f\u0921\u0935\u093e\u0902\u0938\u094d\u0921 \u0915\u094d\u0935\u093f\u091c\u093c \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928","text":"<p>\u092f\u0939 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u090f\u0915 \u0915\u094d\u0935\u093f\u091c\u093c \u0917\u0947\u092e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0924\u093e \u0939\u0948\u0964 \u092f\u0939 \u0909\u0928\u0915\u0947 \u0938\u094d\u0915\u094b\u0930 \u0915\u093e \u091f\u094d\u0930\u0948\u0915 \u0930\u0916\u0924\u093e \u0939\u0948 \u0914\u0930 \u0915\u094d\u0935\u093f\u091c\u093c \u0915\u0947 \u092c\u093e\u0926 \u092b\u0940\u0921\u092c\u0948\u0915 \u0926\u0947\u0924\u093e \u0939\u0948\u0964</p>"},{"location":"hi/chapters/chapter10/#_26","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0938\u0902\u0930\u091a\u0928\u093e:","text":"<pre><code>quiz_app/\n\u2502\n\u251c\u2500\u2500 app.py  (\u092e\u0941\u0916\u094d\u092f \u0915\u094d\u0935\u093f\u091c\u093c \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928)\n\u251c\u2500\u2500 questions.py  (\u092a\u094d\u0930\u0936\u094d\u0928 \u0921\u0947\u091f\u093e)\n\u2514\u2500\u2500 templates/\n    \u251c\u2500\u2500 index.html  (\u0938\u094d\u091f\u093e\u0930\u094d\u091f \u0938\u094d\u0915\u094d\u0930\u0940\u0928)\n    \u251c\u2500\u2500 quiz.html  (\u0915\u094d\u0935\u093f\u091c\u093c \u0938\u094d\u0915\u094d\u0930\u0940\u0928)\n    \u2514\u2500\u2500 result.html  (\u0930\u093f\u091c\u0932\u094d\u091f \u0938\u094d\u0915\u094d\u0930\u0940\u0928)\n</code></pre>"},{"location":"hi/chapters/chapter10/#1-questionspy","title":"\u092b\u093c\u093e\u0907\u0932 1: <code>questions.py</code> (\u092a\u094d\u0930\u0936\u094d\u0928 \u0921\u0947\u091f\u093e)","text":"<pre><code># questions.py\nquestions = [\n    {\n        \"question\": \"\u092b\u094d\u0930\u093e\u0902\u0938 \u0915\u0940 \u0930\u093e\u091c\u0927\u093e\u0928\u0940 \u0915\u094d\u092f\u093e \u0939\u0948?\",\n        \"options\": [\"A) \u092a\u0947\u0930\u093f\u0938\", \"B) \u0932\u0902\u0926\u0928\", \"C) \u092c\u0930\u094d\u0932\u093f\u0928\"],\n        \"answer\": \"A\"\n    },\n    {\n        \"question\": \"'1984' \u092a\u0941\u0938\u094d\u0924\u0915 \u0915\u093f\u0938\u0928\u0947 \u0932\u093f\u0916\u0940?\",\n        \"\n\noptions\": [\"A) \u091c\u0949\u0930\u094d\u091c \u0911\u0930\u0935\u0947\u0932\", \"B) \u092e\u093e\u0930\u094d\u0915 \u091f\u094d\u0935\u0947\u0928\", \"C) \u091c\u0947.\u0915\u0947. \u0930\u094b\u0932\u093f\u0902\u0917\"],\n        \"answer\": \"A\"\n    },\n    {\n        \"question\": \"2 + 2 \u0915\u094d\u092f\u093e \u0939\u094b\u0924\u093e \u0939\u0948?\",\n        \"options\": [\"A) 3\", \"B) 4\", \"C) 5\"],\n        \"answer\": \"B\"\n    }\n]\n</code></pre>"},{"location":"hi/chapters/chapter10/#_27","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092b\u093c\u093e\u0907\u0932 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0939\u0948, \u091c\u093f\u0938\u092e\u0947\u0902 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u0936\u094d\u0928 \u092e\u0947\u0902 \u092c\u0939\u0941\u0935\u093f\u0915\u0932\u094d\u092a\u0940\u092f \u0909\u0924\u094d\u0924\u0930 \u0914\u0930 \u0938\u0939\u0940 \u0909\u0924\u094d\u0924\u0930 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#2-apppy","title":"\u092b\u093c\u093e\u0907\u0932 2: <code>app.py</code> (\u092e\u0941\u0916\u094d\u092f \u0915\u094d\u0935\u093f\u091c\u093c \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928)","text":"<pre><code># app.py\nfrom flask import Flask, render_template, request, redirect, url_for, session\nfrom questions import questions\n\napp = Flask(__name__)\napp.secret_key = \"quiz_secret_key\"\n\n@app.route('/')\ndef index():\n    session['score'] = 0  # \u0938\u094d\u0915\u094b\u0930 \u0930\u0940\u0938\u0947\u091f \u0915\u0930\u0947\u0902\n    session['question_number'] = 0  # \u092a\u0939\u0932\u0947 \u092a\u094d\u0930\u0936\u094d\u0928 \u0938\u0947 \u0936\u0941\u0930\u0941\u0906\u0924 \u0915\u0930\u0947\u0902\n    return render_template('index.html')\n\n@app.route('/quiz', methods=['GET', 'POST'])\ndef quiz():\n    if request.method == 'POST':\n        selected_option = request.form.get('option')\n        correct_answer = questions[session['question_number']][\"answer\"]\n\n        if selected_option == correct_answer:\n            session['score'] += 1\n\n        session['question_number'] += 1\n\n        if session['question_number'] &gt;= len(questions):\n            return redirect(url_for('result'))\n\n    question = questions[session['question_number']]\n    return render_template('quiz.html', question=question)\n\n@app.route('/result')\ndef result():\n    score = session.get('score', 0)\n    total_questions = len(questions)\n    return render_template('result.html', score=score, total_questions=total_questions)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"hi/chapters/chapter10/#_28","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u0915\u094d\u0935\u093f\u091c\u093c \u0915\u0940 \u0936\u0941\u0930\u0941\u0906\u0924 \u092a\u0939\u0932\u0947 \u092a\u094d\u0930\u0936\u094d\u0928 \u0938\u0947 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u0947 \u0938\u094d\u0915\u094b\u0930 \u0915\u094b session \u092e\u0947\u0902 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u0914\u0930 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u0909\u0924\u094d\u0924\u0930 \u0915\u094b \u0938\u0939\u0940 \u0909\u0924\u094d\u0924\u0930 \u0938\u0947 \u092e\u093f\u0932\u093e\u0928 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u0938\u092d\u0940 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u0947 \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u0930\u093f\u091c\u0932\u094d\u091f \u092a\u0947\u091c \u092a\u0930 \u092d\u0947\u091c\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u0939\u093e\u0902 \u0935\u0947 \u0905\u092a\u0928\u093e \u0938\u094d\u0915\u094b\u0930 \u0926\u0947\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#3-indexhtml_1","title":"\u092b\u093c\u093e\u0907\u0932 3: <code>index.html</code> (\u0938\u094d\u091f\u093e\u0930\u094d\u091f \u0938\u094d\u0915\u094d\u0930\u0940\u0928)","text":"<pre><code>&lt;!-- templates/index.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0917\u0947\u092e&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0917\u0947\u092e \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948!&lt;/h1&gt;\n    &lt;p&gt;\u0915\u0941\u091b \u092e\u091c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u0936\u094d\u0928\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0905\u092a\u0928\u0947 \u091c\u094d\u091e\u093e\u0928 \u0915\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0915\u0930\u0947\u0902!&lt;/p&gt;\n    &lt;a href=\"{{ url_for('quiz') }}\"&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_29","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u0939\u094b\u092e \u092a\u0947\u091c \u0939\u0948 \u091c\u0939\u093e\u0902 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094d\u0935\u093f\u091c\u093c \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902 \u092c\u091f\u0928 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0915\u0947 \u0915\u094d\u0935\u093f\u091c\u093c \u0936\u0941\u0930\u0942 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#4-quizhtml","title":"\u092b\u093c\u093e\u0907\u0932 4: <code>quiz.html</code> (\u0915\u094d\u0935\u093f\u091c\u093c \u0938\u094d\u0915\u094d\u0930\u0940\u0928)","text":"<pre><code>&lt;!-- templates/quiz.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0917\u0947\u092e&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;{{ question['question'] }}&lt;/h1&gt;\n    &lt;form method=\"POST\"&gt;\n        {% for option in question['options'] %}\n            &lt;label&gt;\n                &lt;input type=\"radio\" name=\"option\" value=\"{{ option[0] }}\" required&gt;\n                {{ option }}\n            &lt;/label&gt;&lt;br&gt;&lt;br&gt;\n        {% endfor %}\n        &lt;input type=\"submit\" value=\"\u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0902\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_30","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u0947\u091c \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u0936\u094d\u0928 \u0914\u0930 \u0907\u0938\u0915\u0947 \u0935\u093f\u0915\u0932\u094d\u092a\u094b\u0902 \u0915\u094b \u0921\u093e\u092f\u0928\u093e\u092e\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948\u0964</li> <li>\u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0905\u092a\u0928\u093e \u0909\u0924\u094d\u0924\u0930 \u091a\u0941\u0928\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0907\u0938\u0947 \u0938\u092c\u092e\u093f\u091f \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#5-resulthtml","title":"\u092b\u093c\u093e\u0907\u0932 5: <code>result.html</code> (\u0930\u093f\u091c\u0932\u094d\u091f \u0938\u094d\u0915\u094d\u0930\u0940\u0928)","text":"<pre><code>&lt;!-- templates/result.html --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0930\u093f\u091c\u0932\u094d\u091f&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\u0915\u094d\u0935\u093f\u091c\u093c \u0930\u093f\u091c\u0932\u094d\u091f&lt;/h1&gt;\n    &lt;p&gt;\u0906\u092a\u0928\u0947 {{ total_questions }} \u092e\u0947\u0902 \u0938\u0947 {{ score }} \u0938\u0939\u0940 \u0909\u0924\u094d\u0924\u0930 \u0926\u093f\u090f!&lt;/p&gt;\n    &lt;a href=\"{{ url_for('index') }}\"&gt;\u092a\u0941\u0928\u0903 \u0916\u0947\u0932\u0947\u0902&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"hi/chapters/chapter10/#_31","title":"\u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e:","text":"<ul> <li>\u092f\u0939 \u092a\u0947\u091c \u0905\u0902\u0924\u093f\u092e \u0938\u094d\u0915\u094b\u0930 \u0915\u094b \u0926\u093f\u0916\u093e\u0924\u093e \u0939\u0948 \u0914\u0930 \u0916\u093f\u0932\u093e\u0921\u093c\u0940 \u0915\u094b \u0915\u094d\u0935\u093f\u091c\u093c \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u0916\u0947\u0932\u0928\u0947 \u0915\u093e \u0935\u093f\u0915\u0932\u094d\u092a \u0926\u0947\u0924\u093e \u0939\u0948\u0964</li> </ul>"},{"location":"hi/chapters/chapter10/#_32","title":"\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0915\u093e \u0924\u0930\u0940\u0915\u093e:","text":"<ol> <li>Flask \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0947\u0902: <code>pip install flask</code> \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0902\u0964</li> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0938\u0902\u0930\u091a\u0928\u093e \u0914\u0930 \u092b\u093e\u0907\u0932\u0947\u0902 \u092c\u0928\u093e\u090f\u0902\u0964</li> <li>\u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0915\u094b \u091a\u0932\u093e\u090f\u0902: <code>python app.py</code> \u0915\u092e\u093e\u0902\u0921 \u091a\u0932\u093e\u090f\u0902\u0964</li> <li>\u0905\u092a\u0928\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092e\u0947\u0902 <code>http://127.0.0.1:5000/</code> \u0916\u094b\u0932\u0947\u0902\u0964</li> </ol> <p>\u092f\u0947 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0905\u0927\u093f\u0915 \u091c\u091f\u093f\u0932 \u0938\u093f\u0938\u094d\u091f\u092e \u092c\u0928\u093e\u0928\u0947 \u0915\u093e \u0905\u0935\u0938\u0930 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u092c\u0915\u093f \u0909\u0928\u094d\u0939\u0947\u0902 \u0938\u092e\u091d\u0928\u0947 \u0914\u0930 \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0906\u0938\u093e\u0928 \u092c\u0928\u093e\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a\u0915\u094b \u0914\u0930 \u0938\u092e\u093e\u092f\u094b\u091c\u0928 \u092f\u093e \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u0948, \u0924\u094b \u092e\u0941\u091d\u0947 \u092c\u0924\u093e\u090f\u0902!</p>"},{"location":"hi/chapters/chapter10/#_33","title":"\u0905\u0902\u0924\u093f\u092e \u0935\u093f\u091a\u093e\u0930:","text":"<p>\u092f\u0947 10 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0917\u0947\u092e\u094d\u0938, \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928, \u0914\u0930 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0909\u092a\u0915\u0930\u0923\u094b\u0902 \u0915\u093e \u092e\u093f\u0936\u094d\u0930\u0923 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u094b \u092e\u091c\u093c\u0947\u0926\u093e\u0930, \u0906\u0915\u0930\u094d\u0937\u0915 \u0914\u0930 \u0936\u0948\u0915\u094d\u0937\u093f\u0915 \u0939\u0948\u0902\u0964 \u092a\u094d\u0930\u0924\u094d\u092f\u0947\u0915 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0926\u094d\u0935\u093e\u0930\u093e \u0938\u0940\u0916\u0947 \u0917\u090f \u0915\u094c\u0936\u0932 \u0915\u094b \u092e\u091c\u092c\u0942\u0924 \u0915\u0930\u0924\u093e \u0939\u0948 \u0914\u0930 Python \u0938\u0940\u0916\u0928\u0947 \u0915\u094b \u0930\u094b\u092e\u093e\u0902\u091a\u0915 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0930\u091a\u0928\u093e\u0924\u094d\u092e\u0915 \u0924\u0924\u094d\u0935 \u091c\u094b\u0921\u093c\u0924\u093e \u0939\u0948! </p>"},{"location":"hi/chapters/contents/","title":"\u0939\u093e\u0908 \u0938\u094d\u0915\u0942\u0932 \u0915\u0947 \u091b\u093e\u0924\u094d\u0930\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f Python: \u091c\u0940\u0930\u094b \u0938\u0947 \u092e\u091c\u0947\u0926\u093e\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0924\u0915!","text":""},{"location":"hi/chapters/contents/#_1","title":"\u0938\u093e\u092e\u0917\u094d\u0930\u0940","text":""},{"location":"hi/chapters/contents/#1-python","title":"\u0905\u0927\u094d\u092f\u093e\u092f 1: Python \u0915\u093e \u092a\u0930\u093f\u091a\u092f","text":"<ul> <li>Python \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>\u0907\u0924\u093f\u0939\u093e\u0938 \u0914\u0930 \u0909\u0924\u094d\u092a\u0924\u094d\u0924\u093f</li> <li>Python \u0915\u093e \u0906\u0935\u093f\u0937\u094d\u0915\u093e\u0930 \u0915\u093f\u0938\u0928\u0947 \u0915\u093f\u092f\u093e? (Guido van Rossum)</li> <li>\u0915\u094d\u092f\u094b\u0902 Python? Python \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u092e\u091c\u0947\u0926\u093e\u0930 \u0924\u0925\u094d\u092f!</li> <li>Python \u0938\u0947\u091f\u0905\u092a \u0915\u0930\u0928\u093e</li> <li>Python \u0915\u094b \u0907\u0902\u0938\u094d\u091f\u0949\u0932 \u0915\u0930\u0928\u093e (Windows, Mac, Linux)</li> <li>Google Colab \u0915\u0947 \u0938\u093e\u0925 Python \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (\u0915\u094b\u0908 \u0907\u0902\u0938\u094d\u091f\u0949\u0932\u0947\u0936\u0928 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0928\u0939\u0940\u0902!)</li> <li>Python IDEs \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (PyCharm, VS Code, Jupyter Notebook)</li> <li>\u0906\u092a\u0915\u093e \u092a\u0939\u0932\u093e Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e</li> <li>\u090f\u0915 \u0938\u0930\u0932 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \"Hello, World!\" \u0915\u0939\u0947</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u0909\u0928\u0915\u0947 \u0928\u093e\u092e \u0938\u0947 \u0938\u094d\u0935\u093e\u0917\u0924 \u0915\u0930\u0924\u093e \u0939\u094b!</p> <ul> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0915\u0948\u0932\u0915\u0941\u0932\u0947\u091f\u0930 \u092c\u0928\u093e\u090f\u0902!</li> </ul>"},{"location":"hi/chapters/contents/#2-data-structures","title":"\u0905\u0927\u094d\u092f\u093e\u092f 2: Data Structures","text":"<ul> <li>Data Structures \u0915\u094d\u092f\u093e \u0939\u0948\u0902?</li> <li>Variables \u0914\u0930 Data Types (Numbers, Strings, Booleans)</li> <li>Lists (\u0906\u092a\u0915\u0940 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u091a\u0940\u091c\u093c\u094b\u0902 \u0915\u0940 \u0938\u0942\u091a\u0940!)</li> <li>Tuples (\u0915\u094d\u092f\u093e \u0939\u094b\u0924\u093e \u0939\u0948 \u091c\u092c \u091a\u0940\u091c\u093c\u0947\u0902 \u0928\u0939\u0940\u0902 \u092c\u0926\u0932\u0924\u0940\u0902?)</li> <li>Dictionaries (\u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0921\u0947\u091f\u093e \u0915\u0948\u0938\u0947 \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0947\u0902)</li> <li>Sets (\u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0915\u0932\u0947\u0915\u094d\u0936\u0928 \u092c\u0928\u093e\u0928\u093e)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: Dictionaries \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0905\u092a\u0928\u0947 \u0926\u094b\u0938\u094d\u0924\u094b\u0902 \u0915\u0947 \u0928\u093e\u092e \u0914\u0930 \u0909\u0928\u0915\u0947 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0938\u094d\u0928\u0948\u0915\u094d\u0938 \u0915\u094b \u0938\u0902\u0917\u094d\u0930\u0939\u0940\u0924 \u0915\u0930\u0947\u0902\u0964</p> <ul> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: Lists \u0914\u0930 Dictionaries \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 contact book \u092c\u0928\u093e\u090f\u0902\u0964</li> </ul>"},{"location":"hi/chapters/contents/#3-conditions-control-flow","title":"\u0905\u0927\u094d\u092f\u093e\u092f 3: Conditions \u0914\u0930 Control Flow","text":"<ul> <li>Conditions \u0915\u0947 \u0938\u093e\u0925 \u0928\u093f\u0930\u094d\u0923\u092f \u0932\u0947\u0928\u093e</li> <li>If, Else, Elif (Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092e\u0947\u0902 \u0905\u092a\u0928\u093e \u0930\u093e\u0938\u094d\u0924\u093e \u091a\u0941\u0928\u0947\u0902)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u092e\u094c\u0938\u092e \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092a\u0939\u0928\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0941\u091d\u093e\u0935 \u0926\u0947!</p> <ul> <li>Loops</li> <li>For Loops (\u091a\u0940\u091c\u094b\u0902 \u092a\u0930 iterate \u0915\u0930\u0928\u093e)</li> <li>While Loops (\u091c\u092c \u0924\u0915 \u0915\u0941\u091b \u0928 \u0939\u094b \u0924\u092c \u0924\u0915 loop \u0915\u0930\u0947\u0902)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 \u0932\u0942\u092a \u0932\u093f\u0916\u0947\u0902 \u091c\u094b 10 \u0938\u0947 \u0909\u0932\u091f\u0940 \u0917\u093f\u0928\u0924\u0940 \u0915\u0930\u0924\u093e \u0939\u094b, \u091c\u0948\u0938\u0947 \u0930\u0949\u0915\u0947\u091f \u0932\u0949\u0928\u094d\u091a \u0915\u093e\u0909\u0902\u091f\u0921\u093e\u0909\u0928!</p> <ul> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: Conditions \u0914\u0930 Loops \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0917\u0947\u092e \u092c\u0928\u093e\u090f\u0902 \u091c\u094b \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u0947 \u0928\u0902\u092c\u0930 \u0917\u0947\u0938\u093f\u0902\u0917 \u0917\u0947\u092e \u0916\u0947\u0932\u0947\u0964</li> </ul>"},{"location":"hi/chapters/contents/#4-functions-functional-programming","title":"\u0905\u0927\u094d\u092f\u093e\u092f 4: Functions \u0914\u0930 Functional Programming","text":"<ul> <li>Functions \u0915\u094d\u092f\u093e \u0939\u0948\u0902?</li> <li>Functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u094d\u092f\u094b\u0902 \u0915\u0930\u0947\u0902? (\u0915\u094b\u0921 \u0915\u094b \u092a\u0941\u0928: \u0909\u092a\u092f\u094b\u0917 \u0914\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u0930\u0947\u0902)</li> <li>\u0905\u092a\u0928\u0947 Functions \u0932\u093f\u0916\u0928\u093e (\u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u092c\u093e\u0924\u0947\u0902)</li> <li>Parameters \u0914\u0930 Return Values (Functions \u0915\u0948\u0938\u0947 \u092c\u093e\u0924\u091a\u0940\u0924 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 function \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u0906\u0915\u0943\u0924\u093f\u092f\u094b\u0902 \u0915\u093e \u0915\u094d\u0937\u0947\u0924\u094d\u0930\u092b\u0932 \u0928\u093f\u0915\u093e\u0932\u0924\u093e \u0939\u094b\u0964</p> <ul> <li>Python \u092e\u0947\u0902 Functional Programming</li> <li>Lambda Functions (\u091a\u0932\u0924\u0947-\u092b\u093f\u0930\u0924\u0947 \u091b\u094b\u091f\u0947-\u091b\u094b\u091f\u0947 functions)</li> <li> <p>Map, Filter, \u0914\u0930 Reduce (\u092c\u0921\u093c\u0947 \u0921\u0947\u091f\u093e \u0915\u0947 \u0932\u093f\u090f Functional tools)</p> </li> <li> <p>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: Functions \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 to-do list app \u092c\u0928\u093e\u090f\u0902 \u091c\u094b tasks \u0915\u094b \u091c\u094b\u0921\u093c\u0928\u0947, \u0939\u091f\u093e\u0928\u0947, \u0914\u0930 \u0926\u093f\u0916\u093e\u0928\u0947 \u0915\u093e \u0915\u093e\u092e \u0915\u0930\u0947\u0964</p> </li> </ul>"},{"location":"hi/chapters/contents/#5-object-oriented-programming-oop","title":"\u0905\u0927\u094d\u092f\u093e\u092f 5: Object-Oriented Programming (OOP)","text":"<ul> <li>OOP \u0915\u094d\u092f\u093e \u0939\u0948?</li> <li>Classes \u0914\u0930 Objects \u0915\u094b \u0938\u092e\u091d\u0928\u093e (\u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u091c\u0940\u0935\u0928 \u0915\u0947 objects \u0915\u094b \u0915\u094b\u0921 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0926\u0947\u0916\u0947\u0902)</li> <li>Methods \u0914\u0930 Attributes (\u091a\u0940\u091c\u0947\u0902 \u091c\u094b \u090f\u0915 object \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948)</li> <li>Inheritance (\u0915\u0948\u0938\u0947 \u090f\u0915 object \u0926\u0942\u0938\u0930\u0947 \u0938\u0947 \u092b\u0940\u091a\u0930\u094d\u0938 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: OOP \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0915\u093e\u0930 \u092f\u093e \u092a\u093e\u0932\u0924\u0942 \u091c\u093e\u0928\u0935\u0930\u094b\u0902 \u091c\u0948\u0938\u0947 \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u0915\u0947 \u0909\u0926\u093e\u0939\u0930\u0923\u094b\u0902 \u0915\u094b \u092e\u0949\u0921\u0932 \u0915\u0930\u0947\u0902\u0964</p> <ul> <li>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: OOP \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u092c\u0948\u0902\u0915\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u092c\u0928\u093e\u090f\u0902 (\u0917\u094d\u0930\u093e\u0939\u0915, \u0916\u093e\u0924\u0947, \u091c\u092e\u093e)\u0964</li> </ul>"},{"location":"hi/chapters/contents/#6-python","title":"\u0905\u0927\u094d\u092f\u093e\u092f 6: Python \u0915\u093e \u0935\u093e\u0938\u094d\u0924\u0935\u093f\u0915 \u0926\u0941\u0928\u093f\u092f\u093e \u092e\u0947\u0902 \u0909\u092a\u092f\u094b\u0917","text":"<ul> <li>Data Science \u0915\u0947 \u0932\u093f\u090f Python</li> <li>Pandas \u0914\u0930 Matplotlib \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (\u0905\u092a\u0928\u0947 \u0938\u094d\u0915\u0942\u0932 \u0915\u0947 \u0917\u094d\u0930\u0947\u0921 \u092f\u093e \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u0921\u0947\u091f\u093e \u0915\u094b visualize \u0915\u0930\u0947\u0902)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u0905\u092a\u0928\u0940 \u092a\u0938\u0902\u0926\u0940\u0926\u093e \u0916\u0947\u0932 \u091f\u0940\u092e \u0915\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u094b \u0938\u092e\u092f \u0915\u0947 \u0938\u093e\u0925 plot \u0915\u0930\u0947\u0902\u0964</p> <ul> <li>Web Automation \u0915\u0947 \u0932\u093f\u090f Python</li> <li>Selenium \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (Python \u0915\u094b \u0906\u092a\u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c \u0915\u0930\u0928\u0947 \u0926\u0947\u0902)</li> </ul> <p>\u092e\u091c\u0947\u0926\u093e\u0930 \u0909\u0926\u093e\u0939\u0930\u0923: \u090f\u0915 Python \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u0911\u0928\u0932\u093e\u0907\u0928 \u091f\u094d\u0930\u0947\u0902\u0921\u093f\u0902\u0917 \u091f\u0949\u092a\u093f\u0915\u094d\u0938 \u0915\u094b \u0938\u0930\u094d\u091a \u0915\u0930\u0947\u0964</p> <ul> <li>Artificial Intelligence (AI) \u0915\u0947 \u0932\u093f\u090f Python</li> <li>Python \u0915\u0947 \u0938\u093e\u0925 AI \u0915\u093e \u092a\u0930\u093f\u091a\u092f</li> <li> <p>TensorFlow \u091c\u0948\u0938\u0940 libraries \u0915\u093e \u0909\u092a\u092f\u094b\u0917 (AI \u0915\u094b \u090f\u0915\u094d\u0936\u0928 \u092e\u0947\u0902 \u0926\u0947\u0916\u0947\u0902)</p> </li> <li> <p>\u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f: \u090f\u0915 Python \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0932\u093f\u0916\u0947\u0902 \u091c\u094b \u0906\u092a\u0915\u0947 \u0932\u093f\u090f \u0908\u092e\u0947\u0932 \u092f\u093e \u0938\u0902\u0926\u0947\u0936 \u092d\u0947\u091c\u0928\u0947 \u0915\u094b \u0938\u094d\u0935\u091a\u093e\u0932\u093f\u0924 \u0915\u0930\u0947!</p> </li> </ul>"},{"location":"hi/chapters/contents/#7","title":"\u0905\u0927\u094d\u092f\u093e\u092f 7: \u0938\u092e\u093e\u092a\u0928 \u0914\u0930 \u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f","text":"<ul> <li>\u092e\u0941\u0916\u094d\u092f \u0905\u0935\u0927\u093e\u0930\u0923\u093e\u0913\u0902 \u0915\u0940 \u0938\u092e\u0940\u0915\u094d\u0937\u093e</li> <li>\u0905\u0902\u0924\u093f\u092e \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f \u0906\u0907\u0921\u093f\u092f\u093e\u091c:</li> <li>\u090f\u0915 personal assistant \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u092c\u0928\u093e\u090f\u0902\u0964</li> <li>\u0906\u092a\u0928\u0947 \u091c\u094b \u0938\u0940\u0916\u093e \u0939\u0948 \u0909\u0938\u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u090f\u0915 \u092c\u0941\u0928\u093f\u092f\u093e\u0926\u0940 \u0917\u0947\u092e \u092c\u0928\u093e\u090f\u0902\u0964</li> </ul>"},{"location":"hi/chapters/contents/#_2","title":"\u0938\u0902\u0926\u0930\u094d\u092d \u0905\u0928\u0941\u092d\u093e\u0917","text":"<ul> <li>Python Documentation: https://docs.python.org/3/</li> <li>W3Schools Python: https://www.w3schools.com/python/</li> <li>Real Python: https://realpython.com/</li> </ul>"}]}